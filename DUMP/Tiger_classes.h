// Class Tiger.ChooseNextWaypoint
// Size: 0xe8 (Inherited: 0x70)
struct UChooseNextWaypoint : UBTTaskNode {
	struct FBlackboardKeySelector Index; // 0x70(0x28)
	struct FBlackboardKeySelector Waypoint; // 0x98(0x28)
	struct FBlackboardKeySelector bWaypointDirectionIsForward; // 0xc0(0x28)
};

// Class Tiger.TigerBuff
// Size: 0x270 (Inherited: 0x28)
struct UTigerBuff : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FTigerCharacterStatModification StatModification; // 0x30(0xb4)
	struct FTigerStatusEffect StatusEffect; // 0xe4(0x0b)
	char pad_EF[0x1]; // 0xef(0x01)
	float Duration; // 0xf0(0x04)
	bool bDoesTick; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	float TimeBetweenTicks; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct FTigerNiagaraAttachment ActivatedNiagaraAttachment; // 0x100(0x48)
	struct FTigerNiagaraAttachment NiagaraAttachment; // 0x148(0x48)
	struct TArray<struct FTigerNiagaraAttachment> AdditionalNiagaraAttachments; // 0x190(0x10)
	struct FTigerNiagaraAttachment DeactivatedNiagaraAttachment; // 0x1a0(0x48)
	bool bOnlySpawnBuffParticleOnLocalPlayer; // 0x1e8(0x01)
	bool bAttachToMesh; // 0x1e9(0x01)
	char pad_1EA[0x2]; // 0x1ea(0x02)
	struct FName AttachPoint; // 0x1ec(0x08)
	bool bBuffParticleTypeAbsoluteRotation; // 0x1f4(0x01)
	char pad_1F5[0x3]; // 0x1f5(0x03)
	struct UParticleSystem* BuffParticleType; // 0x1f8(0x08)
	bool bOnlySpawnActivatedParticleOnLocalPlayer; // 0x200(0x01)
	bool bAttachActivatedParticle; // 0x201(0x01)
	bool bActivatedParticleTypeAbsoluteRotation; // 0x202(0x01)
	char pad_203[0x5]; // 0x203(0x05)
	struct UParticleSystem* ActivatedParticleType; // 0x208(0x08)
	bool bOnlySpawnDeactivatedParticleOnLocalPlayer; // 0x210(0x01)
	bool bAttachDeactivatedParticle; // 0x211(0x01)
	bool bDeactivatedParticleTypeAbsoluteRotation; // 0x212(0x01)
	char pad_213[0x5]; // 0x213(0x05)
	struct UParticleSystem* DeactivatedParticleType; // 0x218(0x08)
	struct FName ActivationMontageName; // 0x220(0x08)
	struct UAkAudioEvent* ActivatedSFX; // 0x228(0x08)
	struct UAkAudioEvent* DeactivatedSFX; // 0x230(0x08)
	bool bStacks; // 0x238(0x01)
	bool bOnlyStackWithDifferentCasters; // 0x239(0x01)
	char pad_23A[0x2]; // 0x23a(0x02)
	int32_t MaxStacks; // 0x23c(0x04)
	bool bKeepAfterDeath; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	int32_t RemoveBuffOnActions; // 0x244(0x04)
	bool bShowOnUI; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct UTexture2D* StatusImage; // 0x250(0x08)
	enum class ETigerBuffStatusType StatusType; // 0x258(0x01)
	enum class ETigerBuffProgressType ProgressType; // 0x259(0x01)
	char pad_25A[0x6]; // 0x25a(0x06)
	struct ATigerBuffPostProcess* PostProcessEffect; // 0x260(0x08)
	uint64_t PersistentTelemetryID; // 0x268(0x08)

	void OnDeactivated(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.OnDeactivated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnActivated(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.OnActivated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	struct UTigerBuffInstance* FindBuffInstance(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.FindBuffInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246d30
};

// Class Tiger.TigerBuffStun
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffStun : UTigerBuff {
};

// Class Tiger.TigerBuffBlockAILogic
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffBlockAILogic : UTigerBuff {
};

// Class Tiger.TigerBuffImmobilize
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffImmobilize : UTigerBuff {
};

// Class Tiger.TigerBuffGround
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffGround : UTigerBuff {
};

// Class Tiger.TigerBuffInvulnerable
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffInvulnerable : UTigerBuff {
};

// Class Tiger.TigerBuffInvisible
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffInvisible : UTigerBuff {
};

// Class Tiger.TigerBuffDisableClimbing
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffDisableClimbing : UTigerBuff {
};

// Class Tiger.TigerKeyTextureMapping
// Size: 0x80 (Inherited: 0x30)
struct UTigerKeyTextureMapping : UDataAsset {
	struct TMap<struct FKey, struct UTexture2D*> KeyTextures; // 0x30(0x50)
};

// Class Tiger.PatrolComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UPatrolComponent : UActorComponent {
};

// Class Tiger.TigerRebuildableActor
// Size: 0x240 (Inherited: 0x228)
struct ATigerRebuildableActor : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct TArray<struct USceneComponent*> BuildCreatedComponents; // 0x230(0x10)

	void OnRebuild(); // Function Tiger.TigerRebuildableActor.OnRebuild // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	struct USceneComponent* ConvertToBuildComponent(struct USceneComponent* BlueprintCreatedComponent); // Function Tiger.TigerRebuildableActor.ConvertToBuildComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x132be90
};

// Class Tiger.TigerActivatedObject
// Size: 0x278 (Inherited: 0x240)
struct ATigerActivatedObject : ATigerRebuildableActor {
	struct UStaticMeshComponent* BaseMesh; // 0x240(0x08)
	struct UAkAudioEvent* ActivationAudioEvent; // 0x248(0x08)
	bool bActivationAudioShouldPlay; // 0x250(0x01)
	bool bTriggerOnlyOnPlayers; // 0x251(0x01)
	bool bUseAudioActivationRadius; // 0x252(0x01)
	char pad_253[0x1]; // 0x253(0x01)
	float ActivationRadius; // 0x254(0x04)
	float AudioFadeOutDuration; // 0x258(0x04)
	struct TWeakObjectPtr<struct UShapeComponent> WeakCharacterTrigger; // 0x25c(0x08)
	char pad_264[0x14]; // 0x264(0x14)

	void SetCharacterTriggerComponent(struct UShapeComponent* TriggerComponent); // Function Tiger.TigerActivatedObject.SetCharacterTriggerComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1224910
	void OnObjectDeactivated(); // Function Tiger.TigerActivatedObject.OnObjectDeactivated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnObjectActivated(); // Function Tiger.TigerActivatedObject.OnObjectActivated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnEndCharacterOverlap(struct ATigerCharacter* OverlappingCharacter, int32_t TotalOverlapCount); // Function Tiger.TigerActivatedObject.OnEndCharacterOverlap // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnBeginCharacterOverlap(struct ATigerCharacter* OverlappingCharacter, int32_t TotalOverlapCount); // Function Tiger.TigerActivatedObject.OnBeginCharacterOverlap // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void EndCharacterOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerActivatedObject.EndCharacterOverlap // (Final|Native|Private) // @ game+0x12242f0
	void BeginCharacterOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerActivatedObject.BeginCharacterOverlap // (Final|Native|Private|HasOutParms) // @ game+0x1223de0
};

// Class Tiger.TigerActivatedObjectSubsystem
// Size: 0xc0 (Inherited: 0x30)
struct UTigerActivatedObjectSubsystem : UGameInstanceSubsystem {
	char pad_30[0x90]; // 0x30(0x90)
};

// Class Tiger.TigerCameraBehavior
// Size: 0xe8 (Inherited: 0x28)
struct UTigerCameraBehavior : UObject {
	struct UTigerCameraPreset* CameraPreset; // 0x28(0x08)
	char pad_30[0xb8]; // 0x30(0xb8)
};

// Class Tiger.TigerActiveCameraBehavior
// Size: 0x128 (Inherited: 0xe8)
struct UTigerActiveCameraBehavior : UTigerCameraBehavior {
	char pad_E8[0x40]; // 0xe8(0x40)
};

// Class Tiger.TigerAdditiveCameraBehavior
// Size: 0x128 (Inherited: 0xe8)
struct UTigerAdditiveCameraBehavior : UTigerCameraBehavior {
	char pad_E8[0x40]; // 0xe8(0x40)
};

// Class Tiger.TigerAIAwayFromSuspiciousService
// Size: 0x140 (Inherited: 0x70)
struct UTigerAIAwayFromSuspiciousService : UBTService {
	struct FBox SearchFleeSpotBox; // 0x70(0x1c)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FBlackboardKeySelector FleePoint; // 0x90(0x28)
	struct FBlackboardKeySelector CurrentMasqueradeTarget; // 0xb8(0x28)
	struct FBlackboardKeySelector WantsToReportPlayer; // 0xe0(0x28)
	float KeepFleeingFromSpecificPlayerRadiusSquared; // 0x108(0x04)
	float BoxCenterDistanceFromNPCPosition; // 0x10c(0x04)
	uint32_t NumberOfTimesToRandomForAFleeSpot; // 0x110(0x04)
	bool bShowDebugFeatures; // 0x114(0x01)
	char pad_115[0x3]; // 0x115(0x03)
	struct TWeakObjectPtr<struct ATigerPlayer> PlayerFleeingFrom; // 0x118(0x08)
	char pad_120[0x20]; // 0x120(0x20)
};

// Class Tiger.TigerAiBarkTask
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiBarkTask : UBTTaskNode {
	struct FTigerNpcVoCategory BarkToPlay; // 0x70(0x08)
};

// Class Tiger.TigerAiBaseController
// Size: 0x3b0 (Inherited: 0x330)
struct ATigerAiBaseController : AAIController {
	struct FVector SpawnPoint; // 0x330(0x0c)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct UTigerSightConfigAsset* SightConfigAsset; // 0x340(0x08)
	char pad_348[0x68]; // 0x348(0x68)

	void UnregisterMovementTicket(); // Function Tiger.TigerAiBaseController.UnregisterMovementTicket // (Final|Native|Protected|BlueprintCallable) // @ game+0x1224a30
	float PlayAnimationUnreliable(struct UAnimMontage* Animation); // Function Tiger.TigerAiBaseController.PlayAnimationUnreliable // (Final|Native|Public|BlueprintCallable) // @ game+0x1224870
	float PlayAnimationFromNameUnreliable(struct FName Animation); // Function Tiger.TigerAiBaseController.PlayAnimationFromNameUnreliable // (Final|Native|Public|BlueprintCallable) // @ game+0x12247d0
	bool HasPathToLocation(struct FVector Location); // Function Tiger.TigerAiBaseController.HasPathToLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1224710
	bool GetSightProperties(enum class ETigerNPCType NPCType, struct FTigerSightConfigProperties OutSightProps); // Function Tiger.TigerAiBaseController.GetSightProperties // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12245f0
	struct UAISenseConfig_Sight* GetSightConfig(); // Function Tiger.TigerAiBaseController.GetSightConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12245c0
	struct ATigerBaseNPC* GetBaseNpcPawn(); // Function Tiger.TigerAiBaseController.GetBaseNpcPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1224590
	bool FindPointOnAiNavMeshWithinExtent(struct FVector Origin, struct FVector Extent, struct FVector OutLocation); // Function Tiger.TigerAiBaseController.FindPointOnAiNavMeshWithinExtent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1224450
};

// Class Tiger.TigerAIBenchmarkDiablerizeTask
// Size: 0xa8 (Inherited: 0x98)
struct UTigerAIBenchmarkDiablerizeTask : UBTTask_BlackboardBase {
	float MaximumDiablerizeDistance; // 0x98(0x04)
	char pad_9C[0xc]; // 0x9c(0x0c)
};

// Class Tiger.TigerAiBenchmarkDisciplineTask
// Size: 0xd8 (Inherited: 0x98)
struct UTigerAiBenchmarkDisciplineTask : UBTTask_BlackboardBase {
	struct ATigerLocalAIControllerBase* AIControllerBase; // 0x98(0x08)
	struct ATigerPlayerController* TigerPlayerController; // 0xa0(0x08)
	struct ATigerCharacter* AiTigerCharacter; // 0xa8(0x08)
	struct ATigerPlayer* TigerPlayer; // 0xb0(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0xb8(0x08)
	struct UTigerDisciplineBase* CurrentDisciplineBase; // 0xc0(0x08)
	char pad_C8[0x10]; // 0xc8(0x10)
};

// Class Tiger.TigerAIBenchmarkFindPlayerTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIBenchmarkFindPlayerTask : UBTTask_BlackboardBase {
	bool bUseHeightenedSensesSearchRadius; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float CustomSearchSphereRadius; // 0x9c(0x04)
	bool bDrawSearchSphere; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	float MaxVerticalPositionOffset; // 0xa4(0x04)
	float RaycastDistance; // 0xa8(0x04)
	int32_t SearchLowLevelThreshold; // 0xac(0x04)
	float SearchLowHealthPercentageThreshold; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Tiger.TigerAiCalculateFiringLocationsScoreService
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAiCalculateFiringLocationsScoreService : UBTService {
	struct FBlackboardKeySelector TargetKey; // 0x70(0x28)
	bool bDebugDrawLocations; // 0x98(0x01)
	bool bDebugDrawSweepChecks; // 0x99(0x01)
	bool bDebugDrawInvalidLocationReason; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
};

// Class Tiger.TigerAiCanCrouch
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCanCrouch : UBTDecorator {
	float MinCrouchDistanceBuffer; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Tiger.TigerAiCanFleeDecorator
// Size: 0x68 (Inherited: 0x68)
struct UTigerAiCanFleeDecorator : UBTDecorator {
};

// Class Tiger.TigerAICanInvestigateDecorator
// Size: 0x90 (Inherited: 0x68)
struct UTigerAICanInvestigateDecorator : UBTDecorator {
	struct FBlackboardKeySelector CurrentSuspiciousTarget; // 0x68(0x28)
};

// Class Tiger.TigerAiCanUseWeaponPowerDecorator
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCanUseWeaponPowerDecorator : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAICAPBase
// Size: 0x258 (Inherited: 0x228)
struct ATigerAICAPBase : AActor {
	struct TArray<struct ATigerNPC*> NPCUsingCAP; // 0x228(0x10)
	struct TArray<struct UShapeComponent*> Colliders; // 0x238(0x10)
	float Cooldown; // 0x248(0x04)
	int32_t NumberOfSlots; // 0x24c(0x04)
	bool bShouldAdjustTransform; // 0x250(0x01)
	bool bAllowExternalProps; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)

	bool OnCheckNPCEligibility(struct ATigerNPC* NPC); // Function Tiger.TigerAICAPBase.OnCheckNPCEligibility // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	bool CapIsEmpty(); // Function Tiger.TigerAICAPBase.CapIsEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1224230
	void BeginOverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerAICAPBase.BeginOverlappedActor // (Native|Public|HasOutParms) // @ game+0x1224010
};

// Class Tiger.TigerAICAP
// Size: 0x268 (Inherited: 0x258)
struct ATigerAICAP : ATigerAICAPBase {
	struct TArray<struct UTigerAICommandBase*> Commands; // 0x258(0x10)
};

// Class Tiger.TigerAiCheckCanDiablerize
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCheckCanDiablerize : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAiCheckIsTargetDowned
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCheckIsTargetDowned : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAIClearMasqueradeTargetTask
// Size: 0x70 (Inherited: 0x70)
struct UTigerAIClearMasqueradeTargetTask : UBTTaskNode {
};

// Class Tiger.TigerAICommandBase
// Size: 0x40 (Inherited: 0x28)
struct UTigerAICommandBase : UObject {
	struct ATigerAIController* Owner; // 0x28(0x08)
	struct AActor* WorldReferenceActor; // 0x30(0x08)
	float FailSafeMaxTime; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)

	void DeactivateCommand(bool bHasFinished); // Function Tiger.TigerAICommandBase.DeactivateCommand // (Native|Public|BlueprintCallable) // @ game+0x1224260
};

// Class Tiger.TigerAICommandAbandonCAP
// Size: 0x48 (Inherited: 0x40)
struct UTigerAICommandAbandonCAP : UTigerAICommandBase {
	float ChanceToAbandonCAP; // 0x40(0x04)
	bool bShouldFindSpline; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
};

// Class Tiger.TigerAICommandComponent
// Size: 0x140 (Inherited: 0xb0)
struct UTigerAICommandComponent : UActorComponent {
	char pad_B0[0x40]; // 0xb0(0x40)
	struct ATigerAiPermanentCap* PermanentCap; // 0xf0(0x08)
	struct ATigerNPC* Owner; // 0xf8(0x08)
	struct UTigerAICommandBase* ActiveCommand; // 0x100(0x08)
	struct UAnimMontage* LastPlayedCapMontage; // 0x108(0x08)
	struct FTigerCommandQueue CommandQueue; // 0x110(0x10)
	struct FName ContextBaseIdle; // 0x120(0x08)
	char pad_128[0x18]; // 0x128(0x18)

	void SetContextIdle(struct FName ContextName); // Function Tiger.TigerAICommandComponent.SetContextIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x12249a0
	void InterruptAndClearCommands(); // Function Tiger.TigerAICommandComponent.InterruptAndClearCommands // (Final|Native|Public|BlueprintCallable) // @ game+0x12247b0
	struct UTigerAICommandBase* AddCommand(struct UTigerAICommandBase* Command, struct ATigerAICAPBase* CommandGiver); // Function Tiger.TigerAICommandComponent.AddCommand // (Final|Native|Public|BlueprintCallable) // @ game+0x1223d10
};

// Class Tiger.TigerAICommandContextualAction
// Size: 0x80 (Inherited: 0x40)
struct UTigerAICommandContextualAction : UTigerAICommandBase {
	struct TArray<struct FTigerContextualAnimationWrapper> ContextualAnimations; // 0x40(0x10)
	float WaitTimeBefore; // 0x50(0x04)
	float WaitTimeBeforeRandomDeviation; // 0x54(0x04)
	float WaitTimeAfter; // 0x58(0x04)
	float WaitTimeAfterRandomDeviation; // 0x5c(0x04)
	char pad_60[0x20]; // 0x60(0x20)
};

// Class Tiger.TigerAICommandMoveTo
// Size: 0x68 (Inherited: 0x40)
struct UTigerAICommandMoveTo : UTigerAICommandBase {
	struct FTigerAIMoveToLocationData MoveToData; // 0x40(0x18)
	char pad_58[0x10]; // 0x58(0x10)
};

// Class Tiger.TigerAICommandPlayerProximityWait
// Size: 0x48 (Inherited: 0x40)
struct UTigerAICommandPlayerProximityWait : UTigerAICommandBase {
	float SquaredPlayerProximityRadiusRequired; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerAICommandWaitForOrder
// Size: 0x48 (Inherited: 0x40)
struct UTigerAICommandWaitForOrder : UTigerAICommandBase {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerAIController
// Size: 0x498 (Inherited: 0x3b0)
struct ATigerAIController : ATigerAiBaseController {
	struct FName LureTargetKeyName; // 0x3b0(0x08)
	struct FName CurrentMasqueradeTargetKeyName; // 0x3b8(0x08)
	struct FName TargetPositionKeyName; // 0x3c0(0x08)
	struct FName MasqueradeBreachTargetKey; // 0x3c8(0x08)
	struct FName BehaviorIsActiveKeyName; // 0x3d0(0x08)
	struct FName SpawnPointKeyName; // 0x3d8(0x08)
	struct FName ActiveCAPKeyName; // 0x3e0(0x08)
	struct UBehaviorTree* LureBehaviorTree; // 0x3e8(0x08)
	struct UBehaviorTree* BloodDrainedBehaviorTree; // 0x3f0(0x08)
	struct UBehaviorTree* EmptyBehaviorTree; // 0x3f8(0x08)
	struct UTigerFearValueAsset* FearValueAsset; // 0x400(0x08)
	float OutOfCombatHealthRegenerationDelay; // 0x408(0x04)
	float OutOfCombatHealthRegenerationTickInterval; // 0x40c(0x04)
	float OutOfCombatTickHealthPercentage; // 0x410(0x04)
	float TimeWhenEnteredBloodDrainedState; // 0x414(0x04)
	float CheckForPlayerWeaponsInterval; // 0x418(0x04)
	float CheckForPlayerWeaponsDeviation; // 0x41c(0x04)
	float BaseThreatRadiusForEquippedRanged; // 0x420(0x04)
	float BaseThreatRadiusForEquippedMelee; // 0x424(0x04)
	float FearValue; // 0x428(0x04)
	float MaxFearValue; // 0x42c(0x04)
	float MinCrouchDistanceFromPlayer; // 0x430(0x04)
	float ChanceToFleeWhenEnteringThreatenedState; // 0x434(0x04)
	char pad_438[0x30]; // 0x438(0x30)
	struct UTigerNpcMovementRestrictionBoundsData* MovementRestrictionBoundsData; // 0x468(0x08)
	struct UTigerNpcMovementRestrictionBoundsData* TargetMovementRestrictionBoundsData; // 0x470(0x08)
	char pad_478[0x20]; // 0x478(0x20)

	void SetupData(enum class ETigerNPCType InNPCType); // Function Tiger.TigerAIController.SetupData // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void SetNewReactionData(struct FTigerNpcReactionEvent ReactionEvent); // Function Tiger.TigerAIController.SetNewReactionData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1228dc0
	struct FTigerNpcReactionEvent SetLastReactionData(); // Function Tiger.TigerAIController.SetLastReactionData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1228d10
	void SetFearValue(float InFearValue); // Function Tiger.TigerAIController.SetFearValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1228c90
	void SetCurrentMasqueradeTarget(struct UBlackboardComponent* BBComp, struct ATigerCharacter* InLookAtTarget); // Function Tiger.TigerAIController.SetCurrentMasqueradeTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1228b30
	void RunDefaultBehavior(); // Function Tiger.TigerAIController.RunDefaultBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x1228b10
	void RequestInvestigationTicket(struct ATigerPlayer* TigerPlayer); // Function Tiger.TigerAIController.RequestInvestigationTicket // (Final|Native|Public|BlueprintCallable) // @ game+0x1228a80
	bool IsReacting(); // Function Tiger.TigerAIController.IsReacting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1228980
	struct ATigerNPC* GetTigerPawn(); // Function Tiger.TigerAIController.GetTigerPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1228960
	float GetMaxFearValue(); // Function Tiger.TigerAIController.GetMaxFearValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1228750
	float GetFearValue(); // Function Tiger.TigerAIController.GetFearValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1228730
	float GetFearPercentage(); // Function Tiger.TigerAIController.GetFearPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1228700
	enum class ETigerAIMasqueradeState GetCurrentBehaviorState(); // Function Tiger.TigerAIController.GetCurrentBehaviorState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12286e0
	struct ATigerAICAPBase* GetActiveCAP(); // Function Tiger.TigerAIController.GetActiveCAP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12286b0
	void ClearCurrentMasqueradeTarget(struct UBlackboardComponent* BBComp); // Function Tiger.TigerAIController.ClearCurrentMasqueradeTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1228620
	void CancelLureBehavior(); // Function Tiger.TigerAIController.CancelLureBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x1228530
	void AdjustFearValue(float Adjustment); // Function Tiger.TigerAIController.AdjustFearValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1228310
};

// Class Tiger.TigerAiMovementBudgetAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerAiMovementBudgetAsset : UDataAsset {
	struct TMap<struct FName, struct FTigerAiMovementBudget> MovementBudgets; // 0x30(0x50)
};

// Class Tiger.TigerAICoordinator
// Size: 0x3f0 (Inherited: 0xb0)
struct UTigerAICoordinator : UActorComponent {
	float SprintTimeUntilReport; // 0xb0(0x04)
	float ClimbTimeUntilReport; // 0xb4(0x04)
	float AirTimeUntilReport; // 0xb8(0x04)
	float SuspicionStateTime; // 0xbc(0x04)
	float ThreatStateTime; // 0xc0(0x04)
	float SuspiciousStateEscapeRadiusSquared; // 0xc4(0x04)
	float ThreatenedStateEscapeRadiusSquared; // 0xc8(0x04)
	float MakeNearbyNPCsSuspiciousRadius; // 0xcc(0x04)
	float FearValueDecreasePerSecond; // 0xd0(0x04)
	float CrimeActionCooldownDistance; // 0xd4(0x04)
	char pad_D8[0x4]; // 0xd8(0x04)
	float CrimeActionMasqueradePointThreshold; // 0xdc(0x04)
	float PatrollingHelicopterEventRadius; // 0xe0(0x04)
	float PatrollingHelicopterLowestResponseHeight; // 0xe4(0x04)
	float PatrollingHelicopterEventTimeOut; // 0xe8(0x04)
	float PatrollingHelicopterTimeBetweenGunfireEventPositionUpdate; // 0xec(0x04)
	float TimeInSmokeUntilRemoval; // 0xf0(0x04)
	bool bUseMovementTickets; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	struct UTigerAiMovementBudgetAsset* MovementBudgetAsset; // 0xf8(0x08)
	bool bPatrollingHelicotpersAreActive; // 0x100(0x01)
	char pad_101[0x97]; // 0x101(0x97)
	struct TArray<struct ATigerEntityPatrollingHelicopter*> EntityPatrollingHelicopters; // 0x198(0x10)
	char pad_1A8[0x80]; // 0x1a8(0x80)
	struct TArray<struct UTigerAiEntityPlatoon*> EntityPlatoons; // 0x228(0x10)
	struct TArray<struct UTigerAiSquad*> Squads; // 0x238(0x10)
	char pad_248[0xa0]; // 0x248(0xa0)
	struct ATigerPlayerGrid* PlayerGrid; // 0x2e8(0x08)
	char pad_2F0[0xc8]; // 0x2f0(0xc8)
	struct TArray<struct FTigerPlayerActionProcessData> DelayedPlayerActionProcesses; // 0x3b8(0x10)
	char pad_3C8[0x28]; // 0x3c8(0x28)

	void SetNPCSightModifier(float Modifier); // Function Tiger.TigerAICoordinator.SetNPCSightModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x1228d40
	void SetEnableAICoordinator(bool bEnabled); // Function Tiger.TigerAICoordinator.SetEnableAICoordinator // (Final|Native|Public|BlueprintCallable) // @ game+0x1228c00
	void CacheFearValueThresholds(struct UTigerFearValueAsset* CivFearValueAsset, struct UTigerFearValueAsset* PolFearValueAsset); // Function Tiger.TigerAICoordinator.CacheFearValueThresholds // (Final|Native|Public|BlueprintCallable) // @ game+0x1228460
};

// Class Tiger.TigerAiDisciplineTaskBase
// Size: 0xc8 (Inherited: 0x98)
struct UTigerAiDisciplineTaskBase : UBTTask_BlackboardBase {
	struct ATigerLocalAIController* LocalAIController; // 0x98(0x08)
	struct ATigerCharacter* AiTigerCharacter; // 0xa0(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0xa8(0x08)
	struct UTigerDisciplineBase* CurrentDisciplineBase; // 0xb0(0x08)
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Tiger.TigerAiEntityMovementModeService
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAiEntityMovementModeService : UBTService {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector bCanShootKey; // 0x98(0x28)
	float StartSprintDistanceBuffer; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
};

// Class Tiger.TigerAiEntityPlatoon
// Size: 0x58 (Inherited: 0x28)
struct UTigerAiEntityPlatoon : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Tiger.TigerAIEntityReactPlayersService
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAIEntityReactPlayersService : UBTService {
	struct FBlackboardKeySelector SuspiciousTarget; // 0x70(0x28)
	float ThresholdDistanceSquared; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAiFindFiringLocation
// Size: 0x118 (Inherited: 0x70)
struct UTigerAiFindFiringLocation : UBTTaskNode {
	struct FBlackboardKeySelector TargetKey; // 0x70(0x28)
	struct FBlackboardKeySelector FiringLocationKey; // 0x98(0x28)
	struct FBlackboardKeySelector FiringLocationIndexKey; // 0xc0(0x28)
	struct FBlackboardKeySelector bCanShootKey; // 0xe8(0x28)
	float ClaimedLocationDuration; // 0x110(0x04)
	bool bDebugDraw; // 0x114(0x01)
	char pad_115[0x3]; // 0x115(0x03)
};

// Class Tiger.TigerAIFireAtActorTask
// Size: 0xe8 (Inherited: 0x98)
struct UTigerAIFireAtActorTask : UBTTask_BlackboardBase {
	struct FBlackboardKeySelector TargetToShootActorKey; // 0x98(0x28)
	struct FBlackboardKeySelector CanShootKey; // 0xc0(0x28)
};

// Class Tiger.TigerAIFleeFromThreatService
// Size: 0x140 (Inherited: 0x70)
struct UTigerAIFleeFromThreatService : UBTService {
	struct FBox SearchFleeSpotBox; // 0x70(0x1c)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FBlackboardKeySelector FleePoint; // 0x90(0x28)
	struct FBlackboardKeySelector ClosestThreatPosition; // 0xb8(0x28)
	struct FBlackboardKeySelector CurrentMasqueradeTarget; // 0xe0(0x28)
	float KeepFleeingFromSpecificPlayerRadiusSquared; // 0x108(0x04)
	float BoxCenterDistanceFromNPCPosition; // 0x10c(0x04)
	bool bShowDebugFeatures; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	struct TWeakObjectPtr<struct ATigerPlayer> PlayerFleeingFrom; // 0x114(0x08)
	char pad_11C[0x24]; // 0x11c(0x24)
};

// Class Tiger.TigerAIGetSuspectTargetService
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAIGetSuspectTargetService : UBTService {
	struct FBlackboardKeySelector SuspectPosition; // 0x70(0x28)
	struct FBlackboardKeySelector CurrentSuspectTarget; // 0x98(0x28)
	bool bShowDebugFeatures; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
};

// Class Tiger.TigerAiGiveOrderToSquad
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiGiveOrderToSquad : UBTTaskNode {
	enum class ETigerNpcSquadOrder OrderToGive; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerAiSpawningCap
// Size: 0x290 (Inherited: 0x258)
struct ATigerAiSpawningCap : ATigerAICAPBase {
	struct USceneComponent* SceneComp; // 0x258(0x08)
	struct UChildActorComponent* NPCSpawner; // 0x260(0x08)
	struct FName SpawningGroup; // 0x268(0x08)
	struct FName SpawnedNpcMovementGroup; // 0x270(0x08)
	struct FGuid SpawningSubGroupId; // 0x278(0x10)
	char pad_288[0x8]; // 0x288(0x08)
};

// Class Tiger.TigerAIGroupCAP
// Size: 0x2a0 (Inherited: 0x290)
struct ATigerAIGroupCAP : ATigerAiSpawningCap {
	struct TArray<struct FTigerAiGroupCapSlot> CapSlots; // 0x290(0x10)

	bool TriggerNextCommandForSlot(struct ATigerNPC* NPC, int32_t CapSlotIndex); // Function Tiger.TigerAIGroupCAP.TriggerNextCommandForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1228e50
	bool OnRequestNewCommands(struct ATigerNPC* NPC); // Function Tiger.TigerAIGroupCAP.OnRequestNewCommands // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool OnIsAvailableCheck(); // Function Tiger.TigerAIGroupCAP.OnIsAvailableCheck // (Native|Event|Public|BlueprintEvent) // @ game+0x1228a50
	bool IsSlotAvailable(int32_t Index); // Function Tiger.TigerAIGroupCAP.IsSlotAvailable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12289b0
	int32_t GetSlotAssignedToNPC(struct ATigerNPC* NPC); // Function Tiger.TigerAIGroupCAP.GetSlotAssignedToNPC // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12288c0
	struct UTigerAICommandBase* GetNextCommand(struct FTigerAiGroupCapSlot CapSlot, int32_t CapSlotIndex); // Function Tiger.TigerAIGroupCAP.GetNextCommand // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1228770
	void CapCommandStarted(int32_t CapSlotIndex, int32_t CommandIndex); // Function Tiger.TigerAIGroupCAP.CapCommandStarted // (Final|Native|Public|BlueprintCallable) // @ game+0x1228550
	bool AssignNpcToSlot(int32_t SlotIndex, struct ATigerNPC* NPC); // Function Tiger.TigerAIGroupCAP.AssignNpcToSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1228390
};

// Class Tiger.TigerAiHasCurrentSquadOrder
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiHasCurrentSquadOrder : UBTDecorator {
	enum class ETigerNpcSquadOrder SquadOrderToCompare; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAiHasPlayerInSightDecorator
// Size: 0x68 (Inherited: 0x68)
struct UTigerAiHasPlayerInSightDecorator : UBTDecorator {
};

// Class Tiger.TigerAiIsHeightElevationBlockingVision
// Size: 0xc0 (Inherited: 0x68)
struct UTigerAiIsHeightElevationBlockingVision : UBTDecorator {
	struct FBlackboardKeySelector TargetLocationKey; // 0x68(0x28)
	struct FBlackboardKeySelector bCanSeeTargetKey; // 0x90(0x28)
	float MaxVerticalAngleToTarget; // 0xb8(0x04)
	float LargeEnoughHeightDifference; // 0xbc(0x04)
};

// Class Tiger.TigerAiIsInMovementRestrictionBoundsArea
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiIsInMovementRestrictionBoundsArea : UBTDecorator {
	enum class ETigerNpcMovementRestrictionBoundsArea AreaToCompare; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAiIsMovingOutOfBounds
// Size: 0x98 (Inherited: 0x68)
struct UTigerAiIsMovingOutOfBounds : UBTDecorator {
	struct FBlackboardKeySelector TargetPositionKey; // 0x68(0x28)
	float OutOfBoundsDistance; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Tiger.TigerAIIsReactingDecorator
// Size: 0x68 (Inherited: 0x68)
struct UTigerAIIsReactingDecorator : UBTDecorator {
};

// Class Tiger.TigerAiIsSquadCaptain
// Size: 0x68 (Inherited: 0x68)
struct UTigerAiIsSquadCaptain : UBTDecorator {
};

// Class Tiger.TigerAiJudgeController
// Size: 0x3f0 (Inherited: 0x3b0)
struct ATigerAiJudgeController : ATigerAiBaseController {
	struct UTigerAiJudgeSmComponent* JudgeStateMachineComp; // 0x3b0(0x08)
	struct FTigerSightConfigProperties StandardSightProperties; // 0x3b8(0x1c)
	struct FTigerSightConfigProperties CombatSightProperties; // 0x3d4(0x1c)

	void PlayTimedAnimationTriggers(struct TArray<struct FTigerTimedAnimationTrigger> AnimationTriggers); // Function Tiger.TigerAiJudgeController.PlayTimedAnimationTriggers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x122cf30
	struct ATigerJudge* GetJudgePawn(); // Function Tiger.TigerAiJudgeController.GetJudgePawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1228960
};

// Class Tiger.TigerAiJudgeSmComponent
// Size: 0x178 (Inherited: 0xb0)
struct UTigerAiJudgeSmComponent : UActorComponent {
	struct TArray<struct ATigerPlayer*> CurrentlyPerceivedPlayersBySight; // 0xb0(0x10)
	struct TArray<struct ATigerPlayer*> BloodhuntedPlayersWithinCombatRadius; // 0xc0(0x10)
	struct UTigerJudgeBaseState* StartingState; // 0xd0(0x08)
	struct UTigerJudgeBaseState* DownedState; // 0xd8(0x08)
	struct UTigerJudgeBaseState* FeedingState; // 0xe0(0x08)
	struct UTigerJudgeBaseState* ActiveState; // 0xe8(0x08)
	struct TMap<struct UTigerJudgeBaseState*, struct UTigerJudgeBaseState*> InstancedStates; // 0xf0(0x50)
	float CombatRadiusSq; // 0x140(0x04)
	bool bIsSeeingAnyBloodhuntedPlayer; // 0x144(0x01)
	char pad_145[0x33]; // 0x145(0x33)

	void SwitchToState(struct UTigerJudgeBaseState* NewStateType); // Function Tiger.TigerAiJudgeSmComponent.SwitchToState // (Native|Public|BlueprintCallable) // @ game+0x122cfe0
	void AddMasqueradePointsToSeenPlayers(float AdjustAmount, float TimeBetweenAddingPoints); // Function Tiger.TigerAiJudgeSmComponent.AddMasqueradePointsToSeenPlayers // (Final|Native|Public|BlueprintCallable) // @ game+0x122ca80
};

// Class Tiger.TigerAimingCameraBehavior
// Size: 0x168 (Inherited: 0x128)
struct UTigerAimingCameraBehavior : UTigerActiveCameraBehavior {
	char pad_128[0x18]; // 0x128(0x18)
	float MaxWorldDistanceForFindingTarget; // 0x140(0x04)
	float AimAssistStrengthMultiplier; // 0x144(0x04)
	float PassiveAimAssistStrength; // 0x148(0x04)
	float YawRotationMultiplier; // 0x14c(0x04)
	float PitchRotationMultiplier; // 0x150(0x04)
	float MaximumFollowDegrees; // 0x154(0x04)
	float AimAssistTargetLeadAmount; // 0x158(0x04)
	float AimAssistStrengthByVelocityMultiplier; // 0x15c(0x04)
	char pad_160[0x8]; // 0x160(0x08)
};

// Class Tiger.TigerAiMoveAsyncTask
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAiMoveAsyncTask : UBTTask_BlackboardBase {
	float AcceptableRadiusSq; // 0x98(0x04)
	float ObservedBlackboardValueToleranceSq; // 0x9c(0x04)
};

// Class Tiger.TigerAiMoveToTask
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerAiMoveToTask : UBTTask_MoveTo {
	bool bResetMoveTargetOnEnd; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
};

// Class Tiger.TigerAiPathToTargetService
// Size: 0x158 (Inherited: 0x70)
struct UTigerAiPathToTargetService : UBTService {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector SuitableEdgeLocationKey; // 0x98(0x28)
	struct FBlackboardKeySelector IsTargetOutOfBoundsKey; // 0xc0(0x28)
	struct FBlackboardKeySelector HasPathToTargetKey; // 0xe8(0x28)
	struct FBlackboardKeySelector IsPathOutOfBoundsKey; // 0x110(0x28)
	float OutOfBoundsDistance; // 0x138(0x04)
	float HeightDifferenceOutOfBounds; // 0x13c(0x04)
	bool bDebugDraw; // 0x140(0x01)
	char pad_141[0x17]; // 0x141(0x17)
};

// Class Tiger.TigerAIPerceptionSystem
// Size: 0x130 (Inherited: 0x130)
struct UTigerAIPerceptionSystem : UAIPerceptionSystem {
};

// Class Tiger.TigerAiPerfBenchUseWeapon
// Size: 0x90 (Inherited: 0x70)
struct UTigerAiPerfBenchUseWeapon : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
};

// Class Tiger.TigerAiPermanentCap
// Size: 0x2c8 (Inherited: 0x290)
struct ATigerAiPermanentCap : ATigerAiSpawningCap {
	struct TArray<struct UTigerAICommandBase*> Commands; // 0x290(0x10)
	enum class ETigerCivilianEmotionalState EmotionalState; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	struct FName CapContextBase; // 0x2a4(0x08)
	int32_t CapContextStartingIndex; // 0x2ac(0x04)
	struct UTigerNPCAsset* NpcAssetToSpawn; // 0x2b0(0x08)
	int32_t LoopingStartIndex; // 0x2b8(0x04)
	struct TWeakObjectPtr<struct ATigerNPC> PermanentNpc; // 0x2bc(0x08)
	char pad_2C4[0x4]; // 0x2c4(0x04)
};

// Class Tiger.TigerAIPetClearPathToMaster
// Size: 0x70 (Inherited: 0x70)
struct UTigerAIPetClearPathToMaster : UBTTaskNode {
};

// Class Tiger.TigerAIPetComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerAIPetComponent : UActorComponent {
	char pad_B0[0x40]; // 0xb0(0x40)

	bool HasGotEndPoint(); // Function Tiger.TigerAIPetComponent.HasGotEndPoint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x122cc10
	struct TArray<struct FVector> GetMasterPlayersStoredPath(); // Function Tiger.TigerAIPetComponent.GetMasterPlayersStoredPath // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x122cb80
	struct FVector GetEndPoint(); // Function Tiger.TigerAIPetComponent.GetEndPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x122cb50
};

// Class Tiger.TigerAIPetFindEndOfMastersPath
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIPetFindEndOfMastersPath : UBTTaskNode {
	struct FBlackboardKeySelector MasterPlayer; // 0x70(0x28)
};

// Class Tiger.TigerAIPetPreparePathContinuing
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIPetPreparePathContinuing : UBTTaskNode {
	struct FBlackboardKeySelector MasterPlayer; // 0x70(0x28)
};

// Class Tiger.TigerAIPetStoreValidMasterPos
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIPetStoreValidMasterPos : UBTTaskNode {
	struct FBlackboardKeySelector MasterPlayer; // 0x70(0x28)
};

// Class Tiger.TigerAIPlayAnimationTask
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAIPlayAnimationTask : UBTTaskNode {
	struct UAnimMontage* AnimationToPlay; // 0x70(0x08)
	struct FBlackboardKeySelector ContextualActionPointKey; // 0x78(0x28)
	struct UBehaviorTreeComponent* MyOwnerComp; // 0xa0(0x08)
	char pad_A8[0x20]; // 0xa8(0x20)
};

// Class Tiger.TigerAiPlayerAtWpRangeDecorator
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiPlayerAtWpRangeDecorator : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAIPlayerClearPrioritiesTask
// Size: 0x98 (Inherited: 0x98)
struct UTigerAIPlayerClearPrioritiesTask : UBTTask_BlackboardBase {
};

// Class Tiger.TigerAIPlayerClimbIfPossibleTask
// Size: 0xd0 (Inherited: 0x70)
struct UTigerAIPlayerClimbIfPossibleTask : UBTTaskNode {
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x70(0x08)
	struct ATigerPlayerController* PlayerController; // 0x78(0x08)
	struct ATigerPlayerCameraManager* PlayerCamera; // 0x80(0x08)
	struct ATigerPlayer* CurrentPawn; // 0x88(0x08)
	struct UTigerCharacterMovementComponent* PlayerMovementComponent; // 0x90(0x08)
	struct UTigerTraversalClimbState* ClimbState; // 0x98(0x08)
	struct UTigerTraversalStateClimbingConfig* ClimbConfig; // 0xa0(0x08)
	float AngleFromForward; // 0xa8(0x04)
	char pad_AC[0x24]; // 0xac(0x24)
};

// Class Tiger.TigerAiPlayerCombatService
// Size: 0xe0 (Inherited: 0x70)
struct UTigerAiPlayerCombatService : UBTService {
	struct TMap<enum class ETigerWeaponType, struct FWeaponDistanceDesc> WeaponRanges; // 0x70(0x50)
	struct ATigerLocalAIController* LocalAIController; // 0xc0(0x08)
	struct AActor* CurrentLureTarget; // 0xc8(0x08)
	char pad_D0[0x10]; // 0xd0(0x10)
};

// Class Tiger.TigerAiPlayerDiablerizeTask
// Size: 0xc0 (Inherited: 0x98)
struct UTigerAiPlayerDiablerizeTask : UBTTask_BlackboardBase {
	float MaximumDiablerizeDistance; // 0x98(0x04)
	char pad_9C[0x24]; // 0x9c(0x24)
};

// Class Tiger.TigerAIPlayerFeeding
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAIPlayerFeeding : UBTTask_BlackboardBase {
	float MaximumFeedingDistance; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAIPlayerFindBloodHuntedTask
// Size: 0x70 (Inherited: 0x70)
struct UTigerAIPlayerFindBloodHuntedTask : UBTTaskNode {
};

// Class Tiger.TigerAIPlayerFindCivilianTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIPlayerFindCivilianTask : UBTTask_BlackboardBase {
	bool bUseHeightenedSensesSearchRadius; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float CustomSearchSphereRadius; // 0x9c(0x04)
	bool bDrawSearchSphere; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	float MaxVerticalPositionOffset; // 0xa4(0x04)
	float RaycastDistance; // 0xa8(0x04)
	int32_t SearchLowResonanceThreshold; // 0xac(0x04)
	float SearchLowHealthPercentageThreshold; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Tiger.TigerAIPlayerFindClosestItemTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIPlayerFindClosestItemTask : UBTTask_BlackboardBase {
	float MaxVerticalPositionOffset; // 0x98(0x04)
	float RaycastDistance; // 0x9c(0x04)
	float SearchSphereRadius; // 0xa0(0x04)
	char pad_A4[0x14]; // 0xa4(0x14)
};

// Class Tiger.TigerAIPlayerFindNewPointTask
// Size: 0xb0 (Inherited: 0x98)
struct UTigerAIPlayerFindNewPointTask : UBTTask_BlackboardBase {
	float NavigablePointRadius; // 0x98(0x04)
	float MaxCenterDistance; // 0x9c(0x04)
	char pad_A0[0x10]; // 0xa0(0x10)
};

// Class Tiger.TigerAiPlayerMainStateService
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAiPlayerMainStateService : UBTService {
	struct ATigerLocalAIController* LocalAIController; // 0x70(0x08)
	struct ATigerPlayer* AiPlayer; // 0x78(0x08)
	struct ATigerCharacter* TargetCharacter; // 0x80(0x08)
	struct UTigerInventoryComponent* LocalAiInventory; // 0x88(0x08)
	struct ATigerCharacter* CharacterFromWhichFleeing; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
	float FleeAttackDistance; // 0xb0(0x04)
	char pad_B4[0x14]; // 0xb4(0x14)

	void OnPerceptionUpdated(struct AActor* InActor, struct FAIStimulus InStimulus); // Function Tiger.TigerAiPlayerMainStateService.OnPerceptionUpdated // (Final|Native|Private) // @ game+0x122cd80
	void OnDiablerizeStateChanged(bool InIsDiablerizeActive, bool InIsTarget); // Function Tiger.TigerAiPlayerMainStateService.OnDiablerizeStateChanged // (Final|Native|Private) // @ game+0x122cc30
};

// Class Tiger.TigerAIPlayerMoveToTask
// Size: 0x150 (Inherited: 0xb0)
struct UTigerAIPlayerMoveToTask : UBTTask_MoveTo {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct UTigerAIPlayerClimbIfPossibleTask* ClimbTask; // 0xb8(0x08)
	struct UTigerAIPlayerSlideIfPossibleTask* SlideTask; // 0xc0(0x08)
	struct UTigerAIPlayerWallGrindTask* WallGrindTask; // 0xc8(0x08)
	float CheckStuckDelay; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	float CheckClimbTaskTransitionsDelay; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	float CheckSlideTaskTransitionsDelay; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	float JumpGapTransitionsDelay; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0xf0(0x08)
	struct ATigerPlayer* CurrentTigerPlayer; // 0xf8(0x08)
	char pad_100[0x50]; // 0x100(0x50)

	void OnLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerAIPlayerMoveToTask.OnLifeStatusChanged // (Final|Native|Public) // @ game+0x122cd00
};

// Class Tiger.TigerAIPlayerPickPriorityTask
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAIPlayerPickPriorityTask : UBTTask_BlackboardBase {
	float MaxVerticalPositionOffset; // 0x98(0x04)
	float RaycastDistance; // 0x9c(0x04)
};

// Class Tiger.TigerAIPlayerPickUpItemTask
// Size: 0xc0 (Inherited: 0x98)
struct UTigerAIPlayerPickUpItemTask : UBTTask_BlackboardBase {
	float MaximumLootingDistance; // 0x98(0x04)
	char pad_9C[0x24]; // 0x9c(0x24)
};

// Class Tiger.TigerAIPlayerSlideIfPossibleTask
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAIPlayerSlideIfPossibleTask : UBTTaskNode {
	float MinimumSlideDistanceSqrd; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct ATigerLocalAIController* LocalAIController; // 0x78(0x08)
	struct ATigerPlayerController* PlayerController; // 0x80(0x08)
	struct ATigerPlayer* CurrentPawn; // 0x88(0x08)
	struct UTigerCharacterMovementComponent* PlayerMovementComponent; // 0x90(0x08)
	struct UTigerTraversalSlideState* SlideState; // 0x98(0x08)
};

// Class Tiger.TigerAIPlayerTravelBloodVeinTask
// Size: 0xd8 (Inherited: 0x98)
struct UTigerAIPlayerTravelBloodVeinTask : UBTTask_BlackboardBase {
	struct UCurveFloat* JumpProbabilityDistribution; // 0x98(0x08)
	char pad_A0[0x8]; // 0xa0(0x08)
	enum class ETigerJumpDistribution JumpDistributionType; // 0xa8(0x01)
	char pad_A9[0x2f]; // 0xa9(0x2f)
};

// Class Tiger.TigerAIPlayerUseHealingItem
// Size: 0x90 (Inherited: 0x70)
struct UTigerAIPlayerUseHealingItem : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
};

// Class Tiger.TigerAiPlayerUseWeapon
// Size: 0x90 (Inherited: 0x70)
struct UTigerAiPlayerUseWeapon : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
};

// Class Tiger.TigerAiPlayerUseWeaponPower
// Size: 0x98 (Inherited: 0x70)
struct UTigerAiPlayerUseWeaponPower : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
	struct UTigerDisciplineBase* WeaponAbility; // 0x90(0x08)
};

// Class Tiger.TigerAIPlayerWallGrindTask
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAIPlayerWallGrindTask : UBTTaskNode {
	char pad_70[0x8]; // 0x70(0x08)
	struct ATigerLocalAIController* LocalAIController; // 0x78(0x08)
	struct ATigerPlayerController* PlayerController; // 0x80(0x08)
	struct ATigerPlayer* CurrentPawn; // 0x88(0x08)
	struct UTigerCharacterMovementComponent* PlayerMovementComponent; // 0x90(0x08)
	struct UTigerTraversalWallGrindState* GrindState; // 0x98(0x08)
};

// Class Tiger.TigerAiReloadWeaponTask
// Size: 0x80 (Inherited: 0x70)
struct UTigerAiReloadWeaponTask : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)

	void OnReloadAborted(); // Function Tiger.TigerAiReloadWeaponTask.OnReloadAborted // (Final|Native|Private) // @ game+0x122cf10
};

// Class Tiger.TigerAiReportNewThreatTask
// Size: 0x98 (Inherited: 0x70)
struct UTigerAiReportNewThreatTask : UBTTaskNode {
	struct FBlackboardKeySelector PlayerToReportKey; // 0x70(0x28)
};

// Class Tiger.TigerAIReportSuspciousPlayer
// Size: 0xe8 (Inherited: 0x70)
struct UTigerAIReportSuspciousPlayer : UBTTaskNode {
	struct FBlackboardKeySelector PoliceTarget; // 0x70(0x28)
	struct FBlackboardKeySelector CurrentMasqueradeTarget; // 0x98(0x28)
	struct FBlackboardKeySelector PlayerNeedsToBeReported; // 0xc0(0x28)
};

// Class Tiger.TigerAiRequestOutOfBoundsPursuitSquad
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAiRequestOutOfBoundsPursuitSquad : UBTTaskNode {
	struct FBlackboardKeySelector TargetPlayer; // 0x70(0x28)
	float NearbySquadDistance; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAISense_Masquerade
// Size: 0x90 (Inherited: 0x80)
struct UTigerAISense_Masquerade : UAISense {
	struct TArray<struct FTigerAIMasqueradeEvent> MasqueradeEvents; // 0x80(0x10)

	void ReportPlayerAction(struct ATigerPlayer* Instigator, struct FTigerAIPlayerAction PlayerAction); // Function Tiger.TigerAISense_Masquerade.ReportPlayerAction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1231af0
};

// Class Tiger.TigerAISenseConfig_Masquerade
// Size: 0x50 (Inherited: 0x48)
struct UTigerAISenseConfig_Masquerade : UAISenseConfig {
	struct UTigerAISense_Masquerade* Implementation; // 0x48(0x08)
};

// Class Tiger.TigerAISense_Sight
// Size: 0x170 (Inherited: 0x170)
struct UTigerAISense_Sight : UAISense_Sight {
};

// Class Tiger.TigerAISenseConfig_Sight
// Size: 0x78 (Inherited: 0x48)
struct UTigerAISenseConfig_Sight : UAISenseConfig {
	struct UTigerAISense_Sight* Implementation; // 0x48(0x08)
	float SightRadius; // 0x50(0x04)
	float LoseSightRadius; // 0x54(0x04)
	float PeripheralVisionAngleDegrees; // 0x58(0x04)
	float CloseSightRadius; // 0x5c(0x04)
	float CloseLoseSightRadius; // 0x60(0x04)
	float ClosePeripheralVisionAngleDegrees; // 0x64(0x04)
	float HeightDifference; // 0x68(0x04)
	struct FAISenseAffiliationFilter DetectionByAffiliation; // 0x6c(0x04)
	float AutoSuccessRangeFromLastSeenLocation; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Tiger.TigerSightConfigAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerSightConfigAsset : UDataAsset {
	struct TMap<enum class ETigerNPCType, struct FTigerSightConfigData> SightData; // 0x30(0x50)
};

// Class Tiger.TigerAiSetCrouchedTask
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiSetCrouchedTask : UBTTaskNode {
	bool bShouldCrouch; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerAiSetMovementMode
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiSetMovementMode : UBTTaskNode {
	enum class ETigerAIAnimationMode MovementMode; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerAiShouldFireFleeDecorator
// Size: 0x98 (Inherited: 0x90)
struct UTigerAiShouldFireFleeDecorator : UBTDecorator_BlackboardBase {
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerAiShouldReloadDecorator
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiShouldReloadDecorator : UBTDecorator {
	bool bBaseUponFullAmmoPercentage; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float ReloadAmmoPercentage; // 0x6c(0x04)
};

// Class Tiger.TigerAiShouldReportNewThreatDecorator
// Size: 0x90 (Inherited: 0x68)
struct UTigerAiShouldReportNewThreatDecorator : UBTDecorator {
	struct FBlackboardKeySelector PlayerToReportKey; // 0x68(0x28)
};

// Class Tiger.TigerAiShouldRequestOutOfBoundsPursuitSquad
// Size: 0x98 (Inherited: 0x68)
struct UTigerAiShouldRequestOutOfBoundsPursuitSquad : UBTDecorator {
	struct FBlackboardKeySelector CurrentTargetKey; // 0x68(0x28)
	float MaxDistanceFromCurrentSquad; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Tiger.TigerAiShouldUseDisciplineBase
// Size: 0x98 (Inherited: 0x68)
struct UTigerAiShouldUseDisciplineBase : UBTDecorator {
	float LowHealthPercentage; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct ATigerLocalAIController* LocalAIController; // 0x70(0x08)
	struct ATigerPlayerController* LocalAiPlayerController; // 0x78(0x08)
	struct ATigerPlayer* AiTigerPlayer; // 0x80(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x88(0x08)
	struct ATigerCharacter* AiTigerCharacter; // 0x90(0x08)
};

// Class Tiger.TigerAiShouldUseArchDiscipline
// Size: 0xb0 (Inherited: 0x98)
struct UTigerAiShouldUseArchDiscipline : UTigerAiShouldUseDisciplineBase {
	float ShockwavePunchMinimumTargetDistance; // 0x98(0x04)
	float EarthshockUseWithoutJumpChance; // 0x9c(0x04)
	float TrapsAndScoutsUseNearLootDistance; // 0xa0(0x04)
	float ScoutsRedeployChance; // 0xa4(0x04)
	float RejuvenatingVoiceLowHealthPercentage; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class Tiger.TigerAiShouldUseClanDiscipline
// Size: 0xa8 (Inherited: 0x98)
struct UTigerAiShouldUseClanDiscipline : UTigerAiShouldUseDisciplineBase {
	float SoaringLeapRayClearance; // 0x98(0x04)
	float VanishCombatUseChance; // 0x9c(0x04)
	float ProjectionDashUseDistance; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Tiger.TigerNPCSpawningBase
// Size: 0x260 (Inherited: 0x228)
struct ATigerNPCSpawningBase : AActor {
	struct ATigerAISplinePath* AISplinePath; // 0x228(0x08)
	struct FName SpawningGroup; // 0x230(0x08)
	int32_t SpawnAmount; // 0x238(0x04)
	struct FGuid SpawningSubGroupId; // 0x23c(0x10)
	float Prio; // 0x24c(0x04)
	bool bShouldBeManuallyActivated; // 0x250(0x01)
	char pad_251[0x3]; // 0x251(0x03)
	struct FName MovementGroup; // 0x254(0x08)
	char pad_25C[0x4]; // 0x25c(0x04)

	struct TArray<struct ATigerBaseNPC*> ManuallySpawnNPCs(int32_t Budget, int32_t OverrideSpawnAmount); // Function Tiger.TigerNPCSpawningBase.ManuallySpawnNPCs // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0c60
};

// Class Tiger.TigerAISpawner
// Size: 0x268 (Inherited: 0x260)
struct ATigerAISpawner : ATigerNPCSpawningBase {
	struct UTigerNPCAsset* NPCAsset; // 0x260(0x08)
};

// Class Tiger.TigerAISplinePath
// Size: 0x2d0 (Inherited: 0x228)
struct ATigerAISplinePath : AActor {
	struct FTigerAISplinePathData PathData; // 0x228(0xa0)
	char pad_2C8[0x8]; // 0x2c8(0x08)
};

// Class Tiger.TigerAiSplinePathHub
// Size: 0x240 (Inherited: 0x228)
struct ATigerAiSplinePathHub : AActor {
	struct TArray<struct FTigerAISplinePathConnection> SplineConnections; // 0x228(0x10)
	float ConnectionRadius; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
};

// Class Tiger.TigerAiSquad
// Size: 0x68 (Inherited: 0x28)
struct UTigerAiSquad : UObject {
	char pad_28[0x40]; // 0x28(0x40)
};

// Class Tiger.TigerAiSquadFormationService
// Size: 0xb0 (Inherited: 0x70)
struct UTigerAiSquadFormationService : UBTService {
	struct FBlackboardKeySelector FormationLocationKey; // 0x70(0x28)
	bool bDebugDraw; // 0x98(0x01)
	char pad_99[0x17]; // 0x99(0x17)
};

// Class Tiger.TigerAIsRespondingToRoar
// Size: 0x68 (Inherited: 0x68)
struct UTigerAIsRespondingToRoar : UBTDecorator {
};

// Class Tiger.TigerAiStopActiveCapTask
// Size: 0x70 (Inherited: 0x70)
struct UTigerAiStopActiveCapTask : UBTTaskNode {
};

// Class Tiger.TigerAiTargetOutOfBounds
// Size: 0xe0 (Inherited: 0x68)
struct UTigerAiTargetOutOfBounds : UBTDecorator {
	struct FBlackboardKeySelector IsTargetOutOfBoundsKey; // 0x68(0x28)
	struct FBlackboardKeySelector HasPathToTargetKey; // 0x90(0x28)
	struct FBlackboardKeySelector IsPathOutOfBoundsKey; // 0xb8(0x28)
};

// Class Tiger.TigerAIThreateningTargetService
// Size: 0x148 (Inherited: 0x70)
struct UTigerAIThreateningTargetService : UBTService {
	struct FBlackboardKeySelector ThreatPosition; // 0x70(0x28)
	struct FBlackboardKeySelector CurrentThreatTarget; // 0x98(0x28)
	struct FBlackboardKeySelector SuggestedNonObstructedPosition; // 0xc0(0x28)
	struct FBlackboardKeySelector bIsAllowedToChaseKey; // 0xe8(0x28)
	struct FBlackboardKeySelector bCanShoot; // 0x110(0x28)
	bool bUseAttackPermissions; // 0x138(0x01)
	bool bShowDebugFeatures; // 0x139(0x01)
	char pad_13A[0xe]; // 0x13a(0x0e)
};

// Class Tiger.TigerAIThreateningTargetEntityService
// Size: 0x170 (Inherited: 0x148)
struct UTigerAIThreateningTargetEntityService : UTigerAIThreateningTargetService {
	struct FBlackboardKeySelector MasqueradeBreachTargetKey; // 0x148(0x28)
};

// Class Tiger.TigerAiTryFindLocationAgainstElevatedTarget
// Size: 0xd0 (Inherited: 0x70)
struct UTigerAiTryFindLocationAgainstElevatedTarget : UBTTaskNode {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector SuggestedLocationKey; // 0x98(0x28)
	float MaxStepbackDistance; // 0xc0(0x04)
	float MinStepbackDistance; // 0xc4(0x04)
	float DesiredMaxVerticalAngle; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// Class Tiger.TigerAIUpdateBloodDrainedService
// Size: 0x78 (Inherited: 0x70)
struct UTigerAIUpdateBloodDrainedService : UBTService {
	float MaxTimeInBloodDrainedState; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Tiger.TigerAIUpdateWaypoint
// Size: 0xf0 (Inherited: 0x70)
struct UTigerAIUpdateWaypoint : UBTService {
	struct FBlackboardKeySelector Index; // 0x70(0x28)
	struct FBlackboardKeySelector Waypoint; // 0x98(0x28)
	struct FBlackboardKeySelector bWaypointDirectionIsForward; // 0xc0(0x28)
	float Distance; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
};

// Class Tiger.TigerAiUseArchetypeDisciplineTask
// Size: 0xc8 (Inherited: 0xc8)
struct UTigerAiUseArchetypeDisciplineTask : UTigerAiDisciplineTaskBase {
};

// Class Tiger.TigerAiUseClanDisciplineTask
// Size: 0xc8 (Inherited: 0xc8)
struct UTigerAiUseClanDisciplineTask : UTigerAiDisciplineTaskBase {
};

// Class Tiger.TigerFearValueAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerFearValueAsset : UDataAsset {
	struct TMap<enum class ETigerAIMasqueradeState, float> FearValueThresholds; // 0x30(0x50)
};

// Class Tiger.TigerNpcPropAsset
// Size: 0x58 (Inherited: 0x30)
struct UTigerNpcPropAsset : UDataAsset {
	struct TArray<struct FName> TagsToAddToNpc; // 0x30(0x10)
	struct UTigerAnimationSetAsset* PropAnimationSet; // 0x40(0x08)
	struct TArray<struct FName> HeldPropAttachments; // 0x48(0x10)
};

// Class Tiger.TigerNPCVisualAsset
// Size: 0x150 (Inherited: 0x30)
struct UTigerNPCVisualAsset : UDataAsset {
	struct FName MainTag; // 0x30(0x08)
	struct TArray<struct FName> AdditionalTags; // 0x38(0x10)
	struct USkeletalMesh* SkeletalMesh; // 0x48(0x08)
	struct TArray<struct USkeletalMesh*> HeadSkeletalMeshes; // 0x50(0x10)
	struct TArray<struct USkeletalMesh*> HairSkeletalMeshes; // 0x60(0x10)
	struct TArray<struct UTigerColorSetAsset*> ColorSetAssets; // 0x70(0x10)
	struct TArray<struct UTigerLinearColorSetAsset*> HairColorSetAssets; // 0x80(0x10)
	struct UMaterialInstance* DefaultMaterial; // 0x90(0x08)
	bool bShowHeart; // 0x98(0x01)
	enum class ETigerGender Gender; // 0x99(0x01)
	char pad_9A[0x6]; // 0x9a(0x06)
	struct UAnimInstance* HairAnimationBlueprint; // 0xa0(0x08)
	bool bUseCharacterPreset; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct TSoftObjectPtr<struct UTigerCharacterPreset> CharacterPreset; // 0xb0(0x28)
	struct UAnimInstance* AnimationInstanceClass; // 0xd8(0x08)
	enum class ETigerCivilianEmotionalState EmotionalState; // 0xe0(0x01)
	char pad_E1[0x3]; // 0xe1(0x03)
	float ChanceForProp; // 0xe4(0x04)
	struct TMap<struct UTigerNpcPropAsset*, float> PossibleNpcProps; // 0xe8(0x50)
	float WalkSpeed; // 0x138(0x04)
	float WalkTurnSpeed; // 0x13c(0x04)
	float SprintSpeed; // 0x140(0x04)
	float SprintTurnSpeed; // 0x144(0x04)
	float StrafeSpeed; // 0x148(0x04)
	float StrafeTurnSpeed; // 0x14c(0x04)
};

// Class Tiger.TigerNPCBehaviorAsset
// Size: 0x228 (Inherited: 0x30)
struct UTigerNPCBehaviorAsset : UDataAsset {
	struct ATigerBaseNPC* NPCBlueprint; // 0x30(0x08)
	struct UTigerMasqueradeActionResponse* MasqueradeActionResponseClass; // 0x38(0x08)
	struct UBehaviorTree* DefaultBehaviorTree; // 0x40(0x08)
	struct TMap<enum class ETigerAIMasqueradeState, struct UBehaviorTree*> BehaviorTrees; // 0x48(0x50)
	struct TArray<struct UActorComponent*> AdditionalComponentClasses; // 0x98(0x10)
	struct UTigerWeapon* WeaponClass; // 0xa8(0x08)
	enum class ETigerNPCType NPCType; // 0xb0(0x01)
	enum class ETigerAIAnimationMode AnimationMode; // 0xb1(0x01)
	char pad_B2[0x2]; // 0xb2(0x02)
	struct FTigerCharacterStatModification BaseStatModifications; // 0xb4(0xb4)
	struct FTigerCharacterStatModification BaseGroupStatModifications; // 0x168(0xb4)
	bool bUseGroupStats; // 0x21c(0x01)
	char pad_21D[0x3]; // 0x21d(0x03)
	float OverrideBaseMaxHealth; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
};

// Class Tiger.TigerNPCAsset
// Size: 0x50 (Inherited: 0x30)
struct UTigerNPCAsset : UDataAsset {
	struct TArray<struct FTigerRandomVisualAsset> NormalizedVisualAssets; // 0x30(0x10)
	struct UTigerNPCBehaviorAsset* BehaviorAsset; // 0x40(0x08)
	struct UTigerGrimoireEntry* GrimoireEntry; // 0x48(0x08)
};

// Class Tiger.TigerColorSetAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerColorSetAsset : UDataAsset {
	struct TMap<struct FName, struct FColor> ColorSets; // 0x30(0x50)
	struct TMap<struct FName, float> ScalarParameters; // 0x80(0x50)
};

// Class Tiger.TigerNPCCheatCommandsAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerNPCCheatCommandsAsset : UDataAsset {
	struct TMap<struct FName, struct UTigerNPCAsset*> Commands; // 0x30(0x50)
};

// Class Tiger.TigerLinearColorSetAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerLinearColorSetAsset : UDataAsset {
	struct TMap<struct FName, struct FLinearColor> ColorSets; // 0x30(0x50)
	struct TMap<struct FName, float> ScalarParameters; // 0x80(0x50)
};

// Class Tiger.TigerAIWithinMovementBoundsServices
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIWithinMovementBoundsServices : UBTService {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
};

// Class Tiger.TigerDisciplineMetaData
// Size: 0x30 (Inherited: 0x28)
struct UTigerDisciplineMetaData : UAnimMetaData {
	enum class ETigerDisciplinesEnum DisicplineType; // 0x28(0x01)
	bool bAllowRotationLerp; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// Class Tiger.TigerAnimationSet
// Size: 0x360 (Inherited: 0x28)
struct UTigerAnimationSet : UObject {
	struct TArray<struct UTigerAnimationSetAsset*> ParentSets; // 0x28(0x10)
	struct TMap<struct FName, struct UAnimSequence*> Sequences; // 0x38(0x50)
	struct TMap<struct FName, struct UAnimMontage*> Montages; // 0x88(0x50)
	struct TMap<struct FName, struct UTigerMontageList*> MontageLists; // 0xd8(0x50)
	struct TMap<struct FName, struct UBlendSpace*> BlendSpaces; // 0x128(0x50)
	struct TMap<struct FName, struct UBlendSpace1D*> BlendSpaces1D; // 0x178(0x50)
	struct TMap<struct FName, struct UTigerRandomSequenceList*> RandomSequenceLists; // 0x1c8(0x50)
	struct TMap<struct FName, struct UTigerCustomSequenceList*> CustomSequences; // 0x218(0x50)
	struct TMap<struct FName, struct UTigerCustomMontageList*> CustomMontages; // 0x268(0x50)
	struct TMap<struct FName, struct UTigerCustomBlendSpaceList*> CustomBlendSpaces; // 0x2b8(0x50)
	struct TMap<struct FName, struct UTigerCustomBlendSpace1DList*> CustomBlendSpaces1D; // 0x308(0x50)
	int32_t Priority; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
};

// Class Tiger.TigerAnimationSetAsset
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimationSetAsset : UDataAsset {
	struct UTigerAnimationSet* Set; // 0x30(0x08)
};

// Class Tiger.TigerAnimationSetCollection
// Size: 0x40 (Inherited: 0x28)
struct UTigerAnimationSetCollection : UObject {
	struct UTigerAnimationSet* ResultSet; // 0x28(0x08)
	struct TArray<struct UTigerAnimationSet*> AnimationSets; // 0x30(0x10)

	void AddSet(struct UTigerAnimationSetAsset* Asset); // Function Tiger.TigerAnimationSetCollection.AddSet // (Final|Native|Public|BlueprintCallable) // @ game+0x12355a0
};

// Class Tiger.TigerMontageList
// Size: 0x38 (Inherited: 0x28)
struct UTigerMontageList : UObject {
	struct TArray<struct UAnimMontage*> MontageList; // 0x28(0x10)

	struct UAnimMontage* GetRandomMontage(); // Function Tiger.TigerMontageList.GetRandomMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235e00
};

// Class Tiger.TigerCustomSequenceList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomSequenceList : UObject {
};

// Class Tiger.TigerCustomSequenceListClan
// Size: 0x40 (Inherited: 0x28)
struct UTigerCustomSequenceListClan : UTigerCustomSequenceList {
	struct UAnimSequence* Sequences[0x3]; // 0x28(0x18)
};

// Class Tiger.TigerCustomSequenceListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomSequenceListGender : UTigerCustomSequenceList {
	struct UAnimSequence* Sequences[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomSequenceListClanAndGender
// Size: 0x58 (Inherited: 0x28)
struct UTigerCustomSequenceListClanAndGender : UTigerCustomSequenceList {
	struct FTigerPlayerSequenceByClan SequencesByClan[0x2]; // 0x28(0x30)
};

// Class Tiger.TigerCustomMontageList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomMontageList : UObject {
};

// Class Tiger.TigerCustomMontageListClan
// Size: 0x40 (Inherited: 0x28)
struct UTigerCustomMontageListClan : UTigerCustomMontageList {
	struct UAnimMontage* Montages[0x3]; // 0x28(0x18)
};

// Class Tiger.TigerCustomMontageListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomMontageListGender : UTigerCustomMontageList {
	struct UAnimMontage* Montages[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomMontageListClanAndGender
// Size: 0x58 (Inherited: 0x28)
struct UTigerCustomMontageListClanAndGender : UTigerCustomMontageList {
	struct FTigerPlayerMontageByClan MontagesByClan[0x2]; // 0x28(0x30)
};

// Class Tiger.TigerCustomMontageListMeleeWeapon
// Size: 0x78 (Inherited: 0x28)
struct UTigerCustomMontageListMeleeWeapon : UTigerCustomMontageList {
	struct TMap<struct UTigerMeleeWeapon*, struct UAnimMontage*> Montages; // 0x28(0x50)
};

// Class Tiger.TigerCustomBlendSpaceList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomBlendSpaceList : UObject {
};

// Class Tiger.TigerCustomBlendSpaceListClan
// Size: 0x40 (Inherited: 0x28)
struct UTigerCustomBlendSpaceListClan : UTigerCustomBlendSpaceList {
	struct UBlendSpace* BlendSpaces[0x3]; // 0x28(0x18)
};

// Class Tiger.TigerCustomBlendSpaceListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomBlendSpaceListGender : UTigerCustomBlendSpaceList {
	struct UBlendSpace* BlendSpaces[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomBlendSpaceListClanAndGender
// Size: 0x58 (Inherited: 0x28)
struct UTigerCustomBlendSpaceListClanAndGender : UTigerCustomBlendSpaceList {
	struct FTigerPlayerBlendSpaceByClan BlendSpacesByClan[0x2]; // 0x28(0x30)
};

// Class Tiger.TigerCustomBlendSpace1DList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DList : UObject {
};

// Class Tiger.TigerCustomBlendSpace1DListClan
// Size: 0x40 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DListClan : UTigerCustomBlendSpace1DList {
	struct UBlendSpace1D* BlendSpaces[0x3]; // 0x28(0x18)
};

// Class Tiger.TigerCustomBlendSpace1DListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DListGender : UTigerCustomBlendSpace1DList {
	struct UBlendSpace1D* BlendSpaces[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomBlendSpace1DListClanAndGender
// Size: 0x58 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DListClanAndGender : UTigerCustomBlendSpace1DList {
	struct FTigerPlayerBlendSpace1DByClan BlendSpacesByClan[0x2]; // 0x28(0x30)
};

// Class Tiger.TigerAnimIKWindow
// Size: 0x78 (Inherited: 0x30)
struct UTigerAnimIKWindow : UAnimNotifyState {
	struct FName SocketName; // 0x30(0x08)
	struct FName SocketToLineTraceFrom; // 0x38(0x08)
	enum class ETigerIKDirection IKSearchDirection; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName TargetJoint; // 0x44(0x08)
	float TargetJointVerticalOffsetAmount; // 0x4c(0x04)
	float TargetJointHorizontalOffsetAmount; // 0x50(0x04)
	float TargetJointDepthOffsetAmount; // 0x54(0x04)
	float IKResultVerticalAdjustment; // 0x58(0x04)
	float IKResultHorizontalAdjustment; // 0x5c(0x04)
	float IKResultDepthAdjustment; // 0x60(0x04)
	float IKResultAlpha; // 0x64(0x04)
	bool bIKShouldRemainActiveWhenAnimationLoops; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float InOutBlendSpeed; // 0x6c(0x04)
	bool bShouldBlendInAndOut; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerFaceCurvesAnimationMap
// Size: 0xc8 (Inherited: 0x28)
struct UTigerFaceCurvesAnimationMap : UObject {
	struct TMap<struct FName, struct UAnimSequence*> CurveAnimations; // 0x28(0x50)
	struct TMap<struct FName, struct UAnimMontage*> FaceMontages; // 0x78(0x50)
};

// Class Tiger.TigerAnimInstance
// Size: 0x3c0 (Inherited: 0x2c0)
struct UTigerAnimInstance : UAnimInstance {
	enum class ETigerEquippedWeaponType EquippedWeaponType; // 0x2b8(0x01)
	bool bOwnerIsLocked; // 0x2b9(0x01)
	struct UPoseAsset* FacePoseAsset; // 0x2c0(0x08)
	struct UAnimSequence* FacePoseAnimation; // 0x2c8(0x08)
	struct UBlendSpace* BlockStanceBlendSpace; // 0x2d0(0x08)
	char pad_2DA[0x4e]; // 0x2da(0x4e)
	struct UTigerAnimationSetAsset* DefaultAnimationSet; // 0x328(0x08)
	struct UTigerFaceCurvesAnimationMap* FaceCurvesAnimationMap; // 0x330(0x08)
	struct TArray<struct FName> AvailableFaceCurves; // 0x338(0x10)
	struct UTigerAnimationFilter* FacialAnimationFilter; // 0x348(0x08)
	struct UTigerAnimationSetCollection* AnimationSetCollection; // 0x350(0x08)
	struct UTigerAnimationSetCollection* PreviousAnimationSetCollection; // 0x358(0x08)
	struct UAnimMontage* LatestFacialAnim; // 0x360(0x08)
	struct FVector Velocity; // 0x368(0x0c)
	struct FVector PreviousVelocity; // 0x374(0x0c)
	float Speed; // 0x380(0x04)
	float Direction; // 0x384(0x04)
	float AimAnglePitch; // 0x388(0x04)
	float AimAngleYaw; // 0x38c(0x04)
	char pad_390[0x4]; // 0x390(0x04)
	bool bIsDead; // 0x394(0x01)
	bool bShooting; // 0x395(0x01)
	bool bIsBlocking; // 0x396(0x01)
	bool bIsMontagePlaying; // 0x397(0x01)
	char pad_398[0x4]; // 0x398(0x04)
	float MaxRootYawOffset; // 0x39c(0x04)
	float MaxAimingRootYawOffset; // 0x3a0(0x04)
	float RootYawOffset; // 0x3a4(0x04)
	float SmoothCharacterYaw; // 0x3a8(0x04)
	float CharacterYawLastTick; // 0x3ac(0x04)
	float CharacterYawChangeOverFrame; // 0x3b0(0x04)
	float CharacterDeltaYawSmooth; // 0x3b4(0x04)
	char pad_3B8[0x8]; // 0x3b8(0x08)

	void WeaponTypeBranch(enum class ETigerEquippedWeaponType WeaponType); // Function Tiger.TigerAnimInstance.WeaponTypeBranch // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1236150
	void UpdateAnimNotifyIKAlphaBlendOnBones(float DeltaTime); // Function Tiger.TigerAnimInstance.UpdateAnimNotifyIKAlphaBlendOnBones // (Final|Native|Public|BlueprintCallable) // @ game+0x12360d0
	void TurnInPlace(bool bInIsStandingOnGround); // Function Tiger.TigerAnimInstance.TurnInPlace // (Final|Native|Public|BlueprintCallable) // @ game+0x1236040
	void OnSuccessfulMeleeHit(); // Function Tiger.TigerAnimInstance.OnSuccessfulMeleeHit // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnSettle(struct FTigerSettleEvent SettleEvent); // Function Tiger.TigerAnimInstance.OnSettle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnMeleeAttack(int32_t InAttackIndex); // Function Tiger.TigerAnimInstance.OnMeleeAttack // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnInitiateAnimationBlueprint(); // Function Tiger.TigerAnimInstance.OnInitiateAnimationBlueprint // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFootstep(bool bIsLeftFoot, float FootstepDuration); // Function Tiger.TigerAnimInstance.OnFootstep // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFiredWeapon(bool bInSecondaryWeaponFired); // Function Tiger.TigerAnimInstance.OnFiredWeapon // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnChangeAnimationSet(); // Function Tiger.TigerAnimInstance.OnChangeAnimationSet // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsActiveMontageRootMotion(); // Function Tiger.TigerAnimInstance.IsActiveMontageRootMotion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235f40
	struct UAnimSequence* GetSequence(struct FName SequenceName); // Function Tiger.TigerAnimInstance.GetSequence // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235ea0
	struct UAnimMontage* GetRandomMontage(struct FName MontageListName); // Function Tiger.TigerAnimInstance.GetRandomMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235d60
	struct UTigerRandomSequenceList* GetRandomAnimationSequenceList(struct FName SequenceListName); // Function Tiger.TigerAnimInstance.GetRandomAnimationSequenceList // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235cc0
	struct UTigerRandomSequenceList* GetPreviousRandomAnimationSequenceList(struct FName SequenceListName); // Function Tiger.TigerAnimInstance.GetPreviousRandomAnimationSequenceList // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235c20
	struct UBlendSpace* GetPreviousBlendSpace(struct FName BlendSpaceName); // Function Tiger.TigerAnimInstance.GetPreviousBlendSpace // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235b80
	struct UAnimMontage* GetMontage(struct FName InMontageName); // Function Tiger.TigerAnimInstance.GetMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235ae0
	void GetFaceAnimSlotsWithActiveCurves(struct FName OutSlot0, struct FName OutSlot1, struct FName OutSlot2, struct FName OutSlot3); // Function Tiger.TigerAnimInstance.GetFaceAnimSlotsWithActiveCurves // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12358a0
	struct UAnimSequence* GetFaceAnimationForCurve(struct FName CurveName); // Function Tiger.TigerAnimInstance.GetFaceAnimationForCurve // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235a40
	struct UBlendSpace1D* GetBlendSpace1D(struct FName BlendSpace1DName); // Function Tiger.TigerAnimInstance.GetBlendSpace1D // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235760
	struct UBlendSpace* GetBlendSpace(struct FName BlendSpaceName); // Function Tiger.TigerAnimInstance.GetBlendSpace // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235800
	struct UTigerAnimationSetAsset* GetAnimSetAssetFromWeaponClass(struct UTigerWeapon* InWeaponClass); // Function Tiger.TigerAnimInstance.GetAnimSetAssetFromWeaponClass // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool GetAnimNotifyIKDataForBone(struct FName BoneName, struct FTigerAnimNotifyIKData IKData); // Function Tiger.TigerAnimInstance.GetAnimNotifyIKDataForBone // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1235630
	void AddSets(struct UTigerAnimationSetCollection* SetCollection); // Function Tiger.TigerAnimInstance.AddSets // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void AbortFacialAnimCallback(); // Function Tiger.TigerAnimInstance.AbortFacialAnimCallback // (Final|Native|Public) // @ game+0x1235580
};

// Class Tiger.TigerAnimNotiftyStateFlying
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotiftyStateFlying : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotify_AddProps
// Size: 0x50 (Inherited: 0x38)
struct UTigerAnimNotify_AddProps : UAnimNotify {
	struct ATigerPropDummy* PropDummyClass; // 0x38(0x08)
	struct TArray<struct FName> PropsToSpawn; // 0x40(0x10)
};

// Class Tiger.TigerAnimNotify_CameraAnimation
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_CameraAnimation : UAnimNotify {
	struct UCameraAnim* CameraAnimation; // 0x38(0x08)
	float AnimationRate; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotify_CameraShake
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_CameraShake : UAnimNotify {
	struct UMatineeCameraShake* ShakeType; // 0x38(0x08)
	float ShakeScale; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotify_Discipline
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Discipline : UAnimNotify {
	enum class ETigerDisciplinesEnum Discipline; // 0x38(0x01)
	enum class ETigerDisciplineEvent DisciplineEvent; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)
};

// Class Tiger.TigerAnimNotify_DropProps
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_DropProps : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_Footstep
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Footstep : UAnimNotify {
	bool bIsLeftFoot; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float FootstepDuration; // 0x3c(0x04)

	void SetData(bool bIsLeftFootIn, float FootstepDurationIn); // Function Tiger.TigerAnimNotify_Footstep.SetData // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x1235f70
};

// Class Tiger.TigerAnimNotify_Melee
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Melee : UAnimNotify {
	struct FName EventName; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_NiagaraEffect
// Size: 0x80 (Inherited: 0x38)
struct UTigerAnimNotify_NiagaraEffect : UAnimNotify {
	struct FSoftObjectPath NiagaraPath; // 0x38(0x18)
	struct UNiagaraSystem* CachedNiagaraEffect; // 0x50(0x08)
	struct FName AttachPointName; // 0x58(0x08)
	struct FVector EffectLocation; // 0x60(0x0c)
	struct FRotator EffectRotation; // 0x6c(0x0c)
	enum class EAttachLocation AttachLocationRule; // 0x78(0x01)
	bool bOnlySpawnOnLocalPlayer; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// Class Tiger.TigerAnimNotify_ParticleEffect
// Size: 0xd0 (Inherited: 0x90)
struct UTigerAnimNotify_ParticleEffect : UAnimNotify_PlayParticleEffect {
	struct UParticleSystem* IndoorPSTemplate; // 0x90(0x08)
	struct UParticleSystem* OutdoorPSTemplate; // 0x98(0x08)
	enum class ETigerPlayOnClients PlayOnClients; // 0xa0(0x01)
	char pad_A1[0x1f]; // 0xa1(0x1f)
	struct UTigerParticleStrategyChooseSystem* ChooseParticleSystemOverride; // 0xc0(0x08)
	struct UTigerParticleStrategyPostSpawn* ParticlePostSpawnModification; // 0xc8(0x08)
};

// Class Tiger.TigerAnimNotify_PlayCharEffect
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_PlayCharEffect : UAnimNotify {
	struct UTigerCharacterEffect* Effect; // 0x38(0x08)
	struct FName SocketToUse; // 0x40(0x08)
};

// Class Tiger.TigerAnimNotify_PlayVoEvent
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_PlayVoEvent : UAnimNotify {
	struct FTigerNpcVoCategory VoCategory; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_PrimeWeapon
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_PrimeWeapon : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_Ragdoll
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_Ragdoll : UAnimNotify {
	struct FName RagdollOnlyBelowBone; // 0x38(0x08)
	bool bIncludeNamedBone; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float VelocityScale; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotify_Recklessness
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Recklessness : UAnimNotify {
	bool bActivate; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerAnimNotify_ReloadComplete
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_ReloadComplete : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_ReloadFull
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_ReloadFull : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_ReloadSingle
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_ReloadSingle : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_SetCapContext
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_SetCapContext : UAnimNotify {
	struct FName ContextName; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_SpawnMesh
// Size: 0x70 (Inherited: 0x38)
struct UTigerAnimNotify_SpawnMesh : UAnimNotify {
	struct UStaticMesh* MeshToSpawn; // 0x38(0x08)
	struct FName SocketToSpawnFrom; // 0x40(0x08)
	struct FVector Direction[0x2]; // 0x48(0x18)
	float Speed[0x2]; // 0x60(0x08)
	float RandomAngularImpulseStrength; // 0x68(0x04)
	bool bShowInEditor; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
};

// Class Tiger.TigerAnimNotify_TriggerUpdateWpnAppearance
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_TriggerUpdateWpnAppearance : UAnimNotify {
};

// Class Tiger.TigerAnimNotifyState_AbortAnimationOnInput
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_AbortAnimationOnInput : UAnimNotifyState {
	float BlendOutTime; // 0x30(0x04)
	bool bShouldAbortOnMovement; // 0x34(0x01)
	bool bShouldAbortOnHeldBlock; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
};

// Class Tiger.TigerAnimNotifyState_CameraPresetOverride
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_CameraPresetOverride : UAnimNotifyState {
	struct UTigerCameraPreset* CameraPreset; // 0x30(0x08)
};

// Class Tiger.TigerAnimNotifyState_CancelReactionIfThreatened
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_CancelReactionIfThreatened : UAnimNotifyState {
	enum class ETigerAIAnimationMode StateToCancelFor; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)

	void OnReactionCanceled(struct ATigerNPC* NPC); // Function Tiger.TigerAnimNotifyState_CancelReactionIfThreatened.OnReactionCanceled // (Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerAnimNotifyState_DamageImmunity
// Size: 0x40 (Inherited: 0x30)
struct UTigerAnimNotifyState_DamageImmunity : UAnimNotifyState {
	struct TArray<struct UDamageType*> ImmunityTo; // 0x30(0x10)
};

// Class Tiger.TigerAnimNotifyState_EnableTurnStart
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_EnableTurnStart : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_EnableWeaponHitbox
// Size: 0x50 (Inherited: 0x30)
struct UTigerAnimNotifyState_EnableWeaponHitbox : UAnimNotifyState {
	char pad_30[0x10]; // 0x30(0x10)
	struct UCurveFloat* pitchOffsetCurve; // 0x40(0x08)
	int32_t WeaponIndex; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Tiger.TigerAnimNotifyState_FaceCameraDirection
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_FaceCameraDirection : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_HeavyAttackRange
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_HeavyAttackRange : UAnimNotifyState {

	void OnChargeUpEnded(struct ATigerPlayer* Player, struct UTigerMeleeWeapon* EquippedWeapon, float ChargeUpRatio); // Function Tiger.TigerAnimNotifyState_HeavyAttackRange.OnChargeUpEnded // (Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
	struct UTigerMeleeWeapon* GetEquippedWeapon(struct USkeletalMeshComponent* MeshComp); // Function Tiger.TigerAnimNotifyState_HeavyAttackRange.GetEquippedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1239e90
};

// Class Tiger.TigerAnimNotifyState_HideWeapon
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_HideWeapon : UAnimNotifyState {
	enum class ETigerTriggerUpdateWpnAppearance WeaponAppearanceUpdate; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerAnimNotifyState_Invulnerability
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_Invulnerability : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_LockOwner
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_LockOwner : UAnimNotifyState {
	bool bStopActiveMovement; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerAnimNotifyState_MeleeRecoveryEnableMove
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_MeleeRecoveryEnableMove : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_OverrideCanInteractInDodge
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_OverrideCanInteractInDodge : UAnimNotifyState {
	struct UTigerMeleeWeapon* RequiredWeapon; // 0x30(0x08)
};

// Class Tiger.TigerAnimNotifyState_RangedHitAnimInterruptRange
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_RangedHitAnimInterruptRange : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_ResetCloth
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_ResetCloth : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_TimedIndoorOutDoorParticleEffect
// Size: 0x78 (Inherited: 0x30)
struct UTigerAnimNotifyState_TimedIndoorOutDoorParticleEffect : UAnimNotifyState {
	struct UParticleSystem* IndoorPSTemplate; // 0x30(0x08)
	struct UParticleSystem* OutdoorPSTemplate; // 0x38(0x08)
	enum class ETigerPlayOnClients PlayOnClients; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName SocketName; // 0x44(0x08)
	struct FVector LocationOffset; // 0x4c(0x0c)
	struct FRotator RotationOffset; // 0x58(0x0c)
	bool bDestroyAtEnd; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	struct UTigerParticleStrategyChooseSystem* ChooseParticleSystemOverride; // 0x68(0x08)
	struct UTigerParticleStrategyPostSpawn* ParticlePostSpawnModification; // 0x70(0x08)
};

// Class Tiger.TigerAnimNotifyState_WallGrindFX
// Size: 0x40 (Inherited: 0x30)
struct UTigerAnimNotifyState_WallGrindFX : UAnimNotifyState {
	struct TArray<struct FName> SocketsToUse; // 0x30(0x10)
};

// Class Tiger.TigerAnimNotifyState_WeaponGlow
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_WeaponGlow : UAnimNotifyState {

	void OnWeaponGlowEnd(struct USkeletalMeshComponent* WeaponMeshComponent, struct UTigerMeleeWeaponTrailConfig* WeaponEffectsConfig); // Function Tiger.TigerAnimNotifyState_WeaponGlow.OnWeaponGlowEnd // (Event|Protected|BlueprintEvent|Const) // @ game+0x16c0340
	void OnWeaponGlowBegin(struct USkeletalMeshComponent* WeaponMeshComponent, struct UTigerMeleeWeaponTrailConfig* WeaponEffectsConfig); // Function Tiger.TigerAnimNotifyState_WeaponGlow.OnWeaponGlowBegin // (Event|Protected|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerAnimNotifyState_WeaponTrail
// Size: 0x58 (Inherited: 0x30)
struct UTigerAnimNotifyState_WeaponTrail : UAnimNotifyState {
	int32_t WeaponIndex; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct UParticleSystem* PSTemplate; // 0x38(0x08)
	struct FName FirstSocketName; // 0x40(0x08)
	struct FName SecondSocketName; // 0x48(0x08)
	enum class ETrailWidthMode WidthScaleMode; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float WidthScale; // 0x54(0x04)

	void OnWeaponTrailsEnd(struct USkeletalMeshComponent* WeaponMeshComponent, struct UParticleSystemComponent* TrailParticleSystemComponent, struct ATigerCharacter* Character); // Function Tiger.TigerAnimNotifyState_WeaponTrail.OnWeaponTrailsEnd // (Event|Protected|BlueprintEvent|Const) // @ game+0x16c0340
	void OnWeaponTrailsBegin(struct USkeletalMeshComponent* WeaponMeshComponent, struct UParticleSystemComponent* TrailParticleSystemComponent, struct ATigerCharacter* Character, struct UTigerMeleeWeaponTrailConfig* WeaponTrailConfig); // Function Tiger.TigerAnimNotifyState_WeaponTrail.OnWeaponTrailsBegin // (Event|Protected|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerAnimNotifyStateAttachMesh
// Size: 0x48 (Inherited: 0x30)
struct UTigerAnimNotifyStateAttachMesh : UAnimNotifyState {
	struct UStaticMesh* MeshToSpawn; // 0x30(0x08)
	struct FName SocketName; // 0x38(0x08)
	bool bShowInEditor; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float PropTimeout; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotifyStateJdgSword
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyStateJdgSword : UAnimNotifyState {
};

// Class Tiger.TigerANS_DeltaCorrectionWindow
// Size: 0x30 (Inherited: 0x30)
struct UTigerANS_DeltaCorrectionWindow : UAnimNotifyState {
};

// Class Tiger.TigerAnsSidewaysClimbBlocker
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnsSidewaysClimbBlocker : UAnimNotifyState {
};

// Class Tiger.TigerApartmentArchetype
// Size: 0x250 (Inherited: 0x228)
struct ATigerApartmentArchetype : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USceneComponent* Min; // 0x230(0x08)
	struct USceneComponent* Max; // 0x238(0x08)
	struct TArray<struct UMaterialInterface*> PossibleWallpapers; // 0x240(0x10)
};

// Class Tiger.TigerApartmentLight
// Size: 0x228 (Inherited: 0x228)
struct ATigerApartmentLight : AActor {
};

// Class Tiger.TigerWidget
// Size: 0x280 (Inherited: 0x260)
struct UTigerWidget : UUserWidget {
	char pad_260[0x8]; // 0x260(0x08)
	struct UTigerTooltipWidget* TigerTooltipWidget; // 0x268(0x08)
	struct TArray<struct FTigerTooltipAction> TooltipActions; // 0x270(0x10)

	void UpdateScrollOffsetFromGamepadInput(struct UScrollBox* ScrollBox); // Function Tiger.TigerWidget.UpdateScrollOffsetFromGamepadInput // (Final|Native|Public|BlueprintCallable) // @ game+0x1371ea0
	bool ShouldIgnoreVisibilityChanges(); // Function Tiger.TigerWidget.ShouldIgnoreVisibilityChanges // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1371e40
	struct UTigerTooltipWidget* ReuseOrCreateNewTooltipWidget(struct UTigerTooltipWidget* InTooltipClass); // Function Tiger.TigerWidget.ReuseOrCreateNewTooltipWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1371da0
	void PostAkEvent(struct UAkAudioEvent* AudioEvent); // Function Tiger.TigerWidget.PostAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1371c80
	void OnPlayerStateReceived(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerWidget.OnPlayerStateReceived // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsSharkmobAccountLoginsEnabled(); // Function Tiger.TigerWidget.IsSharkmobAccountLoginsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x13717b0
	void IncrementCollapseVisibility(); // Function Tiger.TigerWidget.IncrementCollapseVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x1371790
	struct ATigerPlayer* GetViewTargetTigerPlayer(); // Function Tiger.TigerWidget.GetViewTargetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13714b0
	struct ATigerSpectatorPawn* GetTigerSpectator(); // Function Tiger.TigerWidget.GetTigerSpectator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371480
	struct ATigerPlayerState* GetTigerPlayerState(); // Function Tiger.TigerWidget.GetTigerPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371450
	struct ATigerPlayerController* GetTigerPlayerController(); // Function Tiger.TigerWidget.GetTigerPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371420
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerWidget.GetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13713f0
	struct UTigerPersistentPlayerState* GetTigerPersistentPlayerState(); // Function Tiger.TigerWidget.GetTigerPersistentPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13713c0
	struct ATigerMatchHUD* GetTigerMatchHUD(); // Function Tiger.TigerWidget.GetTigerMatchHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371390
	struct ATigerMatchGameState* GetTigerMatchGameState(); // Function Tiger.TigerWidget.GetTigerMatchGameState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371360
	struct ATigerElysiumHUD* GetTigerElysiumHUD(); // Function Tiger.TigerWidget.GetTigerElysiumHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371330
	struct ATigerHUD* GetTigerBaseHUD(); // Function Tiger.TigerWidget.GetTigerBaseHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371300
	struct ATigerPlayer* GetSpectatedTigerPlayer(); // Function Tiger.TigerWidget.GetSpectatedTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13712d0
	float GetScrollOffsetFromGamepadInput(); // Function Tiger.TigerWidget.GetScrollOffsetFromGamepadInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13712a0
	struct UWidget* GetRootWidget(); // Function Tiger.TigerWidget.GetRootWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371270
	struct UTigerPartyManager* GetPartyManager(); // Function Tiger.TigerWidget.GetPartyManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371240
	void DecrementCollapseVisibility(); // Function Tiger.TigerWidget.DecrementCollapseVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x1371220
	struct UTigerTooltipWidget* ConstructTooltipWidget(); // Function Tiger.TigerWidget.ConstructTooltipWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void CallReleasedForAction(struct FName InputAction); // Function Tiger.TigerWidget.CallReleasedForAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13710a0
	void CallPressedForAction(struct FName InputAction); // Function Tiger.TigerWidget.CallPressedForAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1371010
	void AddTooltipAction(struct FTigerTooltipAction NewTooltipAction, struct FDelegate OnPressed, struct FDelegate OnReleased); // Function Tiger.TigerWidget.AddTooltipAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1370da0
};

// Class Tiger.TigerArchetypeLevelWidget
// Size: 0x290 (Inherited: 0x280)
struct UTigerArchetypeLevelWidget : UTigerWidget {
	int32_t ArchetypeLevel; // 0x280(0x04)
	struct TWeakObjectPtr<struct ATigerPlayer> RepresentedPlayer; // 0x284(0x08)
	char pad_28C[0x4]; // 0x28c(0x04)

	void UpdateArchetypeLevel(); // Function Tiger.TigerArchetypeLevelWidget.UpdateArchetypeLevel // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerArchetypeLevelWidget.OnSelectedCharacterChanged // (Final|Native|Protected) // @ game+0x123a390
	void OnArchetypeChanged(struct UTigerPlayerClanData* InClanData, struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeLevelWidget.OnArchetypeChanged // (Final|Native|Protected) // @ game+0x1239fc0
	void Init(struct ATigerPlayer* InRepresentedPlayer); // Function Tiger.TigerArchetypeLevelWidget.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x1239f30
};

// Class Tiger.TigerMenuWidget
// Size: 0x290 (Inherited: 0x280)
struct UTigerMenuWidget : UTigerWidget {
	struct UTigerSharedMouseCursor* SharedMouseCursor; // 0x280(0x08)
	bool bStopPlayerInteractionsOnOpen; // 0x288(0x01)
	char pad_289[0x1]; // 0x289(0x01)
	bool bShouldCloseOtherMenusOnOpen; // 0x28a(0x01)
	char pad_28B[0x5]; // 0x28b(0x05)

	bool TryMakeDateTime(int32_t InYear, int32_t InMonth, int32_t InDay, struct FDateTime OutDateTime); // Function Tiger.TigerMenuWidget.TryMakeDateTime // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d27f0
	void Open(); // Function Tiger.TigerMenuWidget.Open // (Native|Public|BlueprintCallable) // @ game+0x12d2210
	void OnPersistentPlayerStateInitialized(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerMenuWidget.OnPersistentPlayerStateInitialized // (Native|Event|Protected|BlueprintEvent) // @ game+0x12d2040
	void OnPersistentPlayerInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerMenuWidget.OnPersistentPlayerInitialized // (Final|Native|Protected) // @ game+0x12d1fb0
	void OnOpen(); // Function Tiger.TigerMenuWidget.OnOpen // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnClose(); // Function Tiger.TigerMenuWidget.OnClose // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsOpen(); // Function Tiger.TigerMenuWidget.IsOpen // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d1ea0
	void Close(); // Function Tiger.TigerMenuWidget.Close // (Native|Public|BlueprintCallable) // @ game+0x12c9fd0
};

// Class Tiger.TigerIngameSubmenuWidget
// Size: 0x2b8 (Inherited: 0x290)
struct UTigerIngameSubmenuWidget : UTigerMenuWidget {
	struct FText MenuName; // 0x290(0x18)
	struct UTigerIngameMenuWidget* MenuContainer; // 0x2a8(0x08)
	bool InGameMenuEnabled; // 0x2b0(0x01)
	enum class ETigerNewNotificationMenuOptions NewNotificationMenuOption; // 0x2b1(0x01)
	char pad_2B2[0x6]; // 0x2b2(0x06)

	void UnregisterSharedInputs(); // Function Tiger.TigerIngameSubmenuWidget.UnregisterSharedInputs // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void RegisterSharedInputs(); // Function Tiger.TigerIngameSubmenuWidget.RegisterSharedInputs // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerSceneBackgroundUI
// Size: 0x3b0 (Inherited: 0x2b8)
struct UTigerSceneBackgroundUI : UTigerIngameSubmenuWidget {
	struct TSoftObjectPtr<struct UWorld> DefaultSubLevel; // 0x2b8(0x28)
	char pad_2E0[0x8]; // 0x2e0(0x08)
	struct UTigerSubLevelList* SubLevelList; // 0x2e8(0x08)
	struct FName DefaultCameraTag; // 0x2f0(0x08)
	struct FName SpawnLocationTag; // 0x2f8(0x08)
	struct FViewTargetTransitionParams CameraTransitionParams; // 0x300(0x10)
	struct TSoftObjectPtr<struct UTigerItemPreviewAsset> ItemPreviews; // 0x310(0x28)
	struct FName ItemParentTag; // 0x338(0x08)
	struct ATigerSingleChildActor* ItemParentActor; // 0x340(0x08)
	SoftClassProperty CurrentPreviewItem; // 0x348(0x28)
	struct TArray<struct ACineCameraActor*> CinematicCameras; // 0x370(0x10)
	char pad_380[0x20]; // 0x380(0x20)
	struct FMulticastInlineDelegate OnBackgroundShown; // 0x3a0(0x10)

	bool TransitionToCameraWithTag(struct FName CameraTag, bool bUseCameraTransition); // Function Tiger.TigerSceneBackgroundUI.TransitionToCameraWithTag // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x132f3f0
	void ShowDefaultBackgroundScene(); // Function Tiger.TigerSceneBackgroundUI.ShowDefaultBackgroundScene // (Final|Native|Protected|BlueprintCallable) // @ game+0x132f320
	void ShowBackgroundScene(int32_t InSubLevelIndex); // Function Tiger.TigerSceneBackgroundUI.ShowBackgroundScene // (Final|Native|Protected|BlueprintCallable) // @ game+0x132f290
	void RetryPreviewItem(); // Function Tiger.TigerSceneBackgroundUI.RetryPreviewItem // (Final|Native|Protected) // @ game+0x132f270
	void PreviewReward(struct FTigerItemId ItemId); // Function Tiger.TigerSceneBackgroundUI.PreviewReward // (Final|Native|Protected|BlueprintCallable) // @ game+0x132f1e0
	void PreviewItem(SoftClassProperty InItemClassPath); // Function Tiger.TigerSceneBackgroundUI.PreviewItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x132f120
	void OnPreviewItemUpdated(struct UTigerInventoryItemBase* InPreviewItem, struct ATigerBattlepassRewardPreview* InPreviewActor, struct UTigerInventoryItemBase* InCombinedItemParent); // Function Tiger.TigerSceneBackgroundUI.OnPreviewItemUpdated // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnBackgroundSceneShownNative(); // Function Tiger.TigerSceneBackgroundUI.OnBackgroundSceneShownNative // (Native|Protected) // @ game+0x12c9380
	void OnBackgroundSceneShown(); // Function Tiger.TigerSceneBackgroundUI.OnBackgroundSceneShown // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void HidePreviewItem(); // Function Tiger.TigerSceneBackgroundUI.HidePreviewItem // (Final|Native|Protected|BlueprintCallable) // @ game+0x132f070
	struct TArray<struct AActor*> GetCurrentPaperDollArray(struct FName InBattlePassSubLevelName); // Function Tiger.TigerSceneBackgroundUI.GetCurrentPaperDollArray // (Final|Native|Protected|BlueprintCallable) // @ game+0x132ef40
};

// Class Tiger.TigerArchetypeSelectElysiumUI
// Size: 0x3d0 (Inherited: 0x3b0)
struct UTigerArchetypeSelectElysiumUI : UTigerSceneBackgroundUI {
	struct TArray<struct FTigerPersistentPlayerCharacter> PlayerCharacters; // 0x3b0(0x10)
	struct FTigerItemId AdditionalCharacterSlotItem; // 0x3c0(0x08)
	char NumCharacterSlots; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)

	void SelectCharacter(struct FTigerPersistentCharacterID InCharacterId); // Function Tiger.TigerArchetypeSelectElysiumUI.SelectCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x123a4b0
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerArchetypeSelectElysiumUI.OnSelectedCharacterChanged // (Final|Native|Protected) // @ game+0x123a420
	void OnPlayerInventoryChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerArchetypeSelectElysiumUI.OnPlayerInventoryChanged // (Final|Native|Protected) // @ game+0x123a300
	void OnGotPlayerCharacters(struct TArray<struct FTigerPersistentPlayerCharacter> InCharacters, struct FString InErrorString); // Function Tiger.TigerArchetypeSelectElysiumUI.OnGotPlayerCharacters // (Final|Native|Protected|HasOutParms) // @ game+0x123a1d0
	void OnBuyCharacterSlotServerResponse(bool bInSuccess, struct FTigerItemId InItemId, struct FString InErrorMessage); // Function Tiger.TigerArchetypeSelectElysiumUI.OnBuyCharacterSlotServerResponse // (Final|Native|Protected|HasOutParms) // @ game+0x123a090
	void OnBuyCharacterSlotResults(bool bInSuccess, struct FString InErrorString); // Function Tiger.TigerArchetypeSelectElysiumUI.OnBuyCharacterSlotResults // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnArchetypeChanged(struct UTigerPowerKit* InArchetypeData, struct TArray<int32_t> InPlayerArchetypeCharacterIndices); // Function Tiger.TigerArchetypeSelectElysiumUI.OnArchetypeChanged // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	struct FTigerItemIdWithPrice GetAdditionalSlotPrice(); // Function Tiger.TigerArchetypeSelectElysiumUI.GetAdditionalSlotPrice // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1239e50
	void CreateNewCharacter(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeSelectElysiumUI.CreateNewCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x1239dc0
	void ChangeArchetype(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeSelectElysiumUI.ChangeArchetype // (Final|Native|Protected|BlueprintCallable) // @ game+0x1239d30
	void BuyAdditionalCharacterSlot(); // Function Tiger.TigerArchetypeSelectElysiumUI.BuyAdditionalCharacterSlot // (Final|Native|Protected|BlueprintCallable) // @ game+0x1239d10
};

// Class Tiger.TigerArchetypeSelectPragueUI
// Size: 0x2f8 (Inherited: 0x290)
struct UTigerArchetypeSelectPragueUI : UTigerMenuWidget {
	int32_t GroupSize; // 0x290(0x04)
	int32_t PreGameStateEndTime; // 0x294(0x04)
	struct FString PreHighlightTag; // 0x298(0x10)
	float TimeLeftUntilStateChange; // 0x2a8(0x04)
	enum class ETigerArchetypeSelectUiState UiState; // 0x2ac(0x01)
	char pad_2AD[0x3]; // 0x2ad(0x03)
	struct TArray<struct FTigerPersistentPlayerCharacter> PlayerCharacters; // 0x2b0(0x10)
	enum class ETigerPowerKitType SelectedArchetypeType; // 0x2c0(0x01)
	char pad_2C1[0x7]; // 0x2c1(0x07)
	struct UTigerPreMatchPaperDollComponent* PreMatchPaperDollComp; // 0x2c8(0x08)
	char pad_2D0[0x28]; // 0x2d0(0x28)

	void SelectCharacterForArchetype(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeSelectPragueUI.SelectCharacterForArchetype // (Final|Native|Protected|BlueprintCallable) // @ game+0x123e190
	void OnUiStateChanged(enum class ETigerArchetypeSelectUiState InPreviousUiState); // Function Tiger.TigerArchetypeSelectPragueUI.OnUiStateChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnPlayerCharactersReceived(struct TArray<struct FTigerPersistentPlayerCharacter> InCharacters, struct FString InErrorString); // Function Tiger.TigerArchetypeSelectPragueUI.OnPlayerCharactersReceived // (Final|Native|Protected|HasOutParms) // @ game+0x123de70
	void OnPlayerChangedSelection(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerArchetypeSelectPragueUI.OnPlayerChangedSelection // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnGroupMembersChanged(struct UTigerGroupStateComponent* InGroupStateComponent, struct TArray<struct ATigerPlayerState*> InPreviousGroupMembers); // Function Tiger.TigerArchetypeSelectPragueUI.OnGroupMembersChanged // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnArchetypeSelectionLocked(struct ATigerPlayerState* InPlayerState, enum class ETigerPowerKitType InArchetype); // Function Tiger.TigerArchetypeSelectPragueUI.OnArchetypeSelectionLocked // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	float GetSecondsLeftUntilPlayerSelection(enum class ETigerArchetypeSelectUiState InPlayerUiState); // Function Tiger.TigerArchetypeSelectPragueUI.GetSecondsLeftUntilPlayerSelection // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x123db40
	void EnablePaperDollHighlight(struct ATigerPaperDoll* InPaperDoll, bool bInEnable); // Function Tiger.TigerArchetypeSelectPragueUI.EnablePaperDollHighlight // (Final|Native|Protected|BlueprintCallable) // @ game+0x123d8f0
};

// Class Tiger.TigerAreaEffect
// Size: 0x4c0 (Inherited: 0x228)
struct ATigerAreaEffect : AActor {
	struct UParticleSystem* StartParticleType; // 0x228(0x08)
	struct UParticleSystem* LoopedParticleType; // 0x230(0x08)
	struct UParticleSystem* EndParticleType; // 0x238(0x08)
	struct UDamageType* DamageType; // 0x240(0x08)
	enum class ETigerDamageCauser DamageCauserType; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct FRuntimeFloatCurve TimeDamageModifierCurve; // 0x250(0x88)
	struct FRuntimeFloatCurve RangeDamageModifierCurve; // 0x2d8(0x88)
	struct FRuntimeFloatCurve TimeHealingModifierCurve; // 0x360(0x88)
	struct FRuntimeFloatCurve RangeHealingModifierCurve; // 0x3e8(0x88)
	float Range; // 0x470(0x04)
	float InitialDamageAmount; // 0x474(0x04)
	float DamageAmount; // 0x478(0x04)
	float InitialHealAmount; // 0x47c(0x04)
	float HealAmount; // 0x480(0x04)
	float TickRate; // 0x484(0x04)
	float Duration; // 0x488(0x04)
	float Delay; // 0x48c(0x04)
	bool bShouldAffectCivilians; // 0x490(0x01)
	char pad_491[0x7]; // 0x491(0x07)
	struct UParticleSystemComponent* LoopedParticleComponent; // 0x498(0x08)
	char pad_4A0[0x20]; // 0x4a0(0x20)

	void Trigger(); // Function Tiger.TigerAreaEffect.Trigger // (Final|Native|Public) // @ game+0x123e220
	void OnVehicleHit(struct AActor* InActor); // Function Tiger.TigerAreaEffect.OnVehicleHit // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnTriggerClient(); // Function Tiger.TigerAreaEffect.OnTriggerClient // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerSimpleTextPrompt
// Size: 0x2a8 (Inherited: 0x280)
struct UTigerSimpleTextPrompt : UTigerWidget {
	struct FText DisplayText; // 0x280(0x18)
	float PromptLifetimeFailsafe; // 0x298(0x04)
	bool bIsVisible; // 0x29c(0x01)
	char pad_29D[0xb]; // 0x29d(0x0b)

	void SetText(struct FText Text); // Function Tiger.TigerSimpleTextPrompt.SetText // (Final|Native|Public|BlueprintCallable) // @ game+0x1337eb0
	void OnShowPrompt(); // Function Tiger.TigerSimpleTextPrompt.OnShowPrompt // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnHidePrompt(); // Function Tiger.TigerSimpleTextPrompt.OnHidePrompt // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Hide(); // Function Tiger.TigerSimpleTextPrompt.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x1337a70
	void FailsafeHide(); // Function Tiger.TigerSimpleTextPrompt.FailsafeHide // (Final|Native|Private) // @ game+0x1337940
	bool CanBeShown(); // Function Tiger.TigerSimpleTextPrompt.CanBeShown // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x13378f0
};

// Class Tiger.TigerArtifactPickedupPrompt
// Size: 0x2b0 (Inherited: 0x2a8)
struct UTigerArtifactPickedupPrompt : UTigerSimpleTextPrompt {
	struct UTigerArtifactAsset* ArtifactAsset; // 0x2a8(0x08)

	void OnArtifactAssetSet(struct UTigerArtifactAsset* InArtifactAsset); // Function Tiger.TigerArtifactPickedupPrompt.OnArtifactAssetSet // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerAsyncChooseNextWaypoint
// Size: 0xf8 (Inherited: 0x70)
struct UTigerAsyncChooseNextWaypoint : UBTTaskNode {
	struct FBlackboardKeySelector Index; // 0x70(0x28)
	struct FBlackboardKeySelector Waypoint; // 0x98(0x28)
	struct FBlackboardKeySelector bWaypointDirectionIsForward; // 0xc0(0x28)
	char pad_E8[0x10]; // 0xe8(0x10)
};

// Class Tiger.TigerAudioVisualizationSpawnerComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerAudioVisualizationSpawnerComponent : UActorComponent {
	struct UParticleSystem* ParticleSystemToSpawn; // 0xb0(0x08)
	int32_t MaxSimultaneousVisualizations; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TArray<struct FTigerHeightenedSensesAudioVisualization> ActiveVisualizations; // 0xc0(0x10)
	char pad_D0[0x8]; // 0xd0(0x08)

	void VisualizeAudioEvent(struct FVector InLocation, bool InShowOnlyInHeightenedSenses); // Function Tiger.TigerAudioVisualizationSpawnerComponent.VisualizeAudioEvent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x123e240
};

// Class Tiger.TigerAuthenticationManager
// Size: 0x168 (Inherited: 0x38)
struct UTigerAuthenticationManager : UTigerAuthenticationManagerBase {
	char pad_38[0x30]; // 0x38(0x30)
	bool bEnableSharkmobAccountLogin; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UTigerGameInstance* GameInstance; // 0x70(0x08)
	char pad_78[0xf0]; // 0x78(0xf0)

	bool IsSharkmobAccountLoginsEnabled(); // Function Tiger.TigerAuthenticationManager.IsSharkmobAccountLoginsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x123dc80
	struct FString GetUserLocation(); // Function Tiger.TigerAuthenticationManager.GetUserLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x123dc00
	enum class EShAccountChannel GetAuthenticatedChannel(); // Function Tiger.TigerAuthenticationManager.GetAuthenticatedChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x123d9c0
};

// Class Tiger.TigerBalconyVolumeDefaultValues
// Size: 0x40 (Inherited: 0x30)
struct UTigerBalconyVolumeDefaultValues : UDataAsset {
	struct TArray<struct FTigerBuildingSystemBalconyVolumeDefaults> DefaultBalconyVolumeSets; // 0x30(0x10)
};

// Class Tiger.TigerNPCFacePoseMap
// Size: 0x38 (Inherited: 0x28)
struct UTigerNPCFacePoseMap : UObject {
	struct TArray<struct FTigerFacePoseData> HeadMeshsPoseAssets; // 0x28(0x10)
};

// Class Tiger.TigerCharacter
// Size: 0x780 (Inherited: 0x4c0)
struct ATigerCharacter : ACharacter {
	struct UTigerCharacterMeshManager* MeshManager; // 0x4c0(0x08)
	struct UTigerRangedWeaponComponent* RangedWeaponComponent; // 0x4c8(0x08)
	struct UTigerMeleeWeaponComponent* MeleeWeaponComponent; // 0x4d0(0x08)
	struct UTigerCombatComponent* CombatComponent; // 0x4d8(0x08)
	struct UTigerFeedingComponent* FeedingComponent; // 0x4e0(0x08)
	struct UTigerBuffComponent* BuffComponent; // 0x4e8(0x08)
	struct UTigerOutlineComponent* OutlineComponent; // 0x4f0(0x08)
	struct UAkComponent* AudioComponent; // 0x4f8(0x08)
	struct UAkComponent* NonOccludedAudioComponent; // 0x500(0x08)
	struct USceneComponent* AdditionalMeshes; // 0x508(0x08)
	struct USkeletalMeshComponent* HeadMesh; // 0x510(0x08)
	struct USkeletalMeshComponent* HoodieMesh; // 0x518(0x08)
	struct USkeletalMeshComponent* HairMesh; // 0x520(0x08)
	struct USkeletalMeshComponent* HeadgearMesh; // 0x528(0x08)
	struct USkeletalMeshComponent* EyewearMesh; // 0x530(0x08)
	struct USkeletalMeshComponent* BodyAdditionalMesh; // 0x538(0x08)
	char pad_540[0x18]; // 0x540(0x18)
	struct FMulticastInlineDelegate OnCharacterAction; // 0x558(0x10)
	bool bIsRootMotionDisabled; // 0x568(0x01)
	char pad_569[0x3]; // 0x569(0x03)
	float BaseMaxHealth; // 0x56c(0x04)
	struct USkeletalMeshComponent* ThirdPersonWeaponMeshRef; // 0x570(0x08)
	struct USkeletalMeshComponent* SecondaryWeaponMeshRef; // 0x578(0x08)
	struct USceneComponent* ProjectileSpawnRef; // 0x580(0x08)
	struct USceneComponent* SecondaryProjectileSpawnRef; // 0x588(0x08)
	struct FTigerReplicatedCharacterStats ReplicatedCharacterStats; // 0x590(0x18)
	char pad_5A8[0x9c]; // 0x5a8(0x9c)
	bool bBlueprintReferencesSetup; // 0x644(0x01)
	bool bShouldRestrictOffensiveActionsInElysium; // 0x645(0x01)
	char pad_646[0x2]; // 0x646(0x02)
	struct FMulticastInlineDelegate OnCharacterDeath; // 0x648(0x10)
	char pad_658[0x30]; // 0x658(0x30)
	float CurrentHealth; // 0x688(0x04)
	char pad_68C[0x4]; // 0x68c(0x04)
	struct FMulticastInlineDelegate OnMaxShieldReplicated; // 0x690(0x10)
	uint16_t MaxShield; // 0x6a0(0x02)
	uint16_t CurrentShield; // 0x6a2(0x02)
	float LowHealthThreshold; // 0x6a4(0x04)
	char pad_6A8[0x4]; // 0x6a8(0x04)
	float HitAnimationInterval; // 0x6ac(0x04)
	char pad_6B0[0xc]; // 0x6b0(0x0c)
	struct FVector HealthBarOffset; // 0x6bc(0x0c)
	enum class ETigerGender BodyType; // 0x6c8(0x01)
	bool bIsKindred; // 0x6c9(0x01)
	enum class ETigerCharacterType CharacterType; // 0x6ca(0x01)
	char pad_6CB[0x1]; // 0x6cb(0x01)
	struct FName RangedHitAnimationListName; // 0x6cc(0x08)
	struct FName MeleeHitAnimationListName; // 0x6d4(0x08)
	char pad_6DC[0x4]; // 0x6dc(0x04)
	struct UPhysicsAsset* HitboxPhysicsAsset; // 0x6e0(0x08)
	struct UPhysicsAsset* RagdollPhysicsAsset; // 0x6e8(0x08)
	char pad_6F0[0x10]; // 0x6f0(0x10)
	struct FTimerHandle RagdollTimer; // 0x700(0x08)
	struct UAnimMontage* TimedMontageLoop; // 0x708(0x08)
	struct FTimerHandle TimedMontageLoopTimer; // 0x710(0x08)
	char pad_718[0x10]; // 0x718(0x10)
	struct TArray<struct TWeakObjectPtr<struct ATigerCharacter>> CharmedByCharacters; // 0x728(0x10)
	bool bIsDodging; // 0x738(0x01)
	char pad_739[0x7]; // 0x739(0x07)
	float SmoothYawInterpSpeed; // 0x740(0x04)
	char pad_744[0x4]; // 0x744(0x04)
	struct UWidgetComponent* HealthBarComponent; // 0x748(0x08)
	struct USkeletalMeshSocket* WidgetSocket; // 0x750(0x08)
	char pad_758[0x28]; // 0x758(0x28)

	void TriggerLimitedHitAnimation(bool bIsRangedHit); // Function Tiger.TigerCharacter.TriggerLimitedHitAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x12564a0
	float TriggerHitAnimation(bool bInIsRangedHit); // Function Tiger.TigerCharacter.TriggerHitAnimation // (Native|Public|BlueprintCallable) // @ game+0x1256400
	float TriggerAnimationByName(struct FName AnimationMontageName, float PlayRate); // Function Tiger.TigerCharacter.TriggerAnimationByName // (Final|Native|Public|BlueprintCallable) // @ game+0x1256330
	void TigerOnMaxShieldReplicated__DelegateSignature(); // DelegateFunction Tiger.TigerCharacter.TigerOnMaxShieldReplicated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnCharacterDeath__DelegateSignature(); // DelegateFunction Tiger.TigerCharacter.TigerOnCharacterDeath__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnCharacterAction__DelegateSignature(enum class ETigerCharacterAction InCharacterAction); // DelegateFunction Tiger.TigerCharacter.TigerOnCharacterAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void SpawnBloodDecal(); // Function Tiger.TigerCharacter.SpawnBloodDecal // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool ShouldHealthbarBeVisible(); // Function Tiger.TigerCharacter.ShouldHealthbarBeVisible // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1256300
	void SetBaseMaxHealth(float NewMaxHealth); // Function Tiger.TigerCharacter.SetBaseMaxHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1256280
	void ReportCharacterAction(enum class ETigerCharacterAction Action); // Function Tiger.TigerCharacter.ReportCharacterAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1256200
	void RefreshCharacterStats(); // Function Tiger.TigerCharacter.RefreshCharacterStats // (Final|Native|Public|BlueprintCallable) // @ game+0x12561e0
	int32_t PostAkEvent(struct UAkAudioEvent* AudioEvent, bool bEnableOcclusion); // Function Tiger.TigerCharacter.PostAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1256110
	void OnWeaponVisualChangedEvent(); // Function Tiger.TigerCharacter.OnWeaponVisualChangedEvent // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnWeaponFired(bool bSecondaryWeaponFired); // Function Tiger.TigerCharacter.OnWeaponFired // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnShowDamageAmount(struct FVector InHitLocation, struct FLinearColor InDamageColor, int32_t InTotalDamageAmount, int32_t InHealthDamageAmount, bool bInHasExtraHealth, bool bInHasShield, float InRangedDamageFalloffPercent); // Function Tiger.TigerCharacter.OnShowDamageAmount // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnRep_MaxShieldChanged(uint16_t InOldMaxShield); // Function Tiger.TigerCharacter.OnRep_MaxShieldChanged // (Final|Native|Protected) // @ game+0x1255e10
	void OnRep_CurrentShieldChanged(); // Function Tiger.TigerCharacter.OnRep_CurrentShieldChanged // (Final|Native|Protected) // @ game+0x1255df0
	void OnRep_CurrentHealth(float InOldHealth); // Function Tiger.TigerCharacter.OnRep_CurrentHealth // (Native|Protected) // @ game+0x1255d60
	void OnPlayMeleeHitEffects(struct UTigerMeleeWeapon* WeaponHitBy, struct FVector ImpactLocation, struct FVector HitDirection); // Function Tiger.TigerCharacter.OnPlayMeleeHitEffects // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnLocalDisciplineUseFailed(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerCharacter.OnLocalDisciplineUseFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnLocalDisciplineUse(struct FDisciplineUse DisciplineUse, float ExpectedDuration); // Function Tiger.TigerCharacter.OnLocalDisciplineUse // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnLocalDisciplineReleaseFailed(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerCharacter.OnLocalDisciplineReleaseFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnLocalDisciplineRelease(struct FDisciplineUse DisciplineUse, float ExpectedDuration); // Function Tiger.TigerCharacter.OnLocalDisciplineRelease // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnDodged(bool IsControllingPlayer, bool bLaunchedInAir, struct FVector LaunchDirection, char DodgeStage); // Function Tiger.TigerCharacter.OnDodged // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnDisciplineUseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerCharacter.OnDisciplineUseSucceeded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnDisciplineReleaseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerCharacter.OnDisciplineReleaseSucceeded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnChangedAkAlignment(enum class ETigerCharacterAkAlignmentType InAlignment); // Function Tiger.TigerCharacter.OnChangedAkAlignment // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Multicast_SetRagdollDeath(bool bEnableRagdoll); // Function Tiger.TigerCharacter.Multicast_SetRagdollDeath // (Net|Native|Event|NetMulticast|Public) // @ game+0x1255bc0
	void Multicast_PostAkEvent(struct UAkAudioEvent* AudioEvent, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_PostAkEvent // (Net|Native|Event|NetMulticast|Public) // @ game+0x1255af0
	void Multicast_PlaySoundAtActorLocation(struct USoundBase* SoundBase); // Function Tiger.TigerCharacter.Multicast_PlaySoundAtActorLocation // (Net|Native|Event|NetMulticast|Public) // @ game+0x1255a60
	void Multicast_PlayAnimationBroadcastUnreliable(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_PlayAnimationBroadcastUnreliable // (Net|Native|Event|NetMulticast|Public) // @ game+0x1255990
	void Multicast_PlayAnimationBroadcast(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_PlayAnimationBroadcast // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12558c0
	void Multicast_OnJumped(int32_t InJumpCount); // Function Tiger.TigerCharacter.Multicast_OnJumped // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1255830
	void Multicast_ApplyEffectWithTarget(struct UTigerCharacterEffect* Effect, struct ATigerCharacter* Target); // Function Tiger.TigerCharacter.Multicast_ApplyEffectWithTarget // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1255760
	void Multicast_ApplyEffectWithSocket(struct UTigerCharacterEffect* Effect, struct FName SocketName); // Function Tiger.TigerCharacter.Multicast_ApplyEffectWithSocket // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1255690
	void Multicast_ApplyEffect(struct UTigerCharacterEffect* Effect); // Function Tiger.TigerCharacter.Multicast_ApplyEffect // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1255600
	void Multicast_AbortAnimationBroadcastUnreliable(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_AbortAnimationBroadcastUnreliable // (Net|Native|Event|NetMulticast|Public) // @ game+0x1255530
	void Multicast_AbortAnimationBroadcast(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_AbortAnimationBroadcast // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1255460
	void LocalApplyEffectWithTarget(struct UTigerCharacterEffect* Effect, struct ATigerCharacter* Target); // Function Tiger.TigerCharacter.LocalApplyEffectWithTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1255390
	void LocalApplyEffectWithSocket(struct UTigerCharacterEffect* Effect, struct FName SocketName); // Function Tiger.TigerCharacter.LocalApplyEffectWithSocket // (Final|Native|Public|BlueprintCallable) // @ game+0x12552c0
	void LocalApplyEffect(struct UTigerCharacterEffect* Effect); // Function Tiger.TigerCharacter.LocalApplyEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1255230
	bool IsSprinting(); // Function Tiger.TigerCharacter.IsSprinting // (Final|Native|Public|BlueprintCallable) // @ game+0x1255200
	bool IsSimulatedProxy(); // Function Tiger.TigerCharacter.IsSimulatedProxy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12551d0
	bool IsPlayingAnimationMontage(); // Function Tiger.TigerCharacter.IsPlayingAnimationMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12551a0
	bool IsInvulnerable(); // Function Tiger.TigerCharacter.IsInvulnerable // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1255170
	bool IsInJump(); // Function Tiger.TigerCharacter.IsInJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1255140
	bool IsInAir(); // Function Tiger.TigerCharacter.IsInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1255110
	bool IsFriendlyWith(struct ATigerCharacter* OtherCharacter); // Function Tiger.TigerCharacter.IsFriendlyWith // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1255070
	bool IsDowned(); // Function Tiger.TigerCharacter.IsDowned // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1255040
	bool IsDead(); // Function Tiger.TigerCharacter.IsDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1255020
	bool IsClimbing(); // Function Tiger.TigerCharacter.IsClimbing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254ff0
	bool IsCharacterVisible(); // Function Tiger.TigerCharacter.IsCharacterVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254fd0
	bool IsBelowLowHealthThreshold(float InHealthOffset); // Function Tiger.TigerCharacter.IsBelowLowHealthThreshold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254f40
	struct UTigerCharacterMovementComponent* GetTigerCharacterMovement(); // Function Tiger.TigerCharacter.GetTigerCharacterMovement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254730
	struct UTigerAnimInstance* GetTigerAnimInstance(); // Function Tiger.TigerCharacter.GetTigerAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254700
	float GetSmoothYaw(); // Function Tiger.TigerCharacter.GetSmoothYaw // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12546d0
	struct FTigerReplicatedCharacterStats GetReplicatedStats(); // Function Tiger.TigerCharacter.GetReplicatedStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254690
	struct FTigerNonReplicatedCharacterStats GetNonReplicatedStats(); // Function Tiger.TigerCharacter.GetNonReplicatedStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12545f0
	float GetMaxShield(); // Function Tiger.TigerCharacter.GetMaxShield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12545c0
	float GetMaxHealth(); // Function Tiger.TigerCharacter.GetMaxHealth // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254580
	float GetHeartVisibility(); // Function Tiger.TigerCharacter.GetHeartVisibility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254560
	float GetCurrentShield(); // Function Tiger.TigerCharacter.GetCurrentShield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254530
	float GetCurrentHealthPercentage(); // Function Tiger.TigerCharacter.GetCurrentHealthPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254500
	float GetCurrentHealth(); // Function Tiger.TigerCharacter.GetCurrentHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12544d0
	float GetBaseMaxHealth(); // Function Tiger.TigerCharacter.GetBaseMaxHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12544a0
	enum class ETigerCharacterAkAlignmentType GetAkCharacterAlignment(); // Function Tiger.TigerCharacter.GetAkCharacterAlignment // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12543f0
	struct FRotator GetAimRotation(); // Function Tiger.TigerCharacter.GetAimRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12543b0
	float GetAimAnglePitch(); // Function Tiger.TigerCharacter.GetAimAnglePitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254380
	float ChangeHealth(float InHealAmount, bool bInOnlyHealRecentDamage); // Function Tiger.TigerCharacter.ChangeHealth // (Native|Public|BlueprintCallable) // @ game+0x12542a0
	void CalculateCharacterStats(struct FTigerCharacterStatModification AccumulatedStats); // Function Tiger.TigerCharacter.CalculateCharacterStats // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12541d0
	void AuthorityApplyEffectWithTarget(struct UTigerCharacterEffect* Effect, struct ATigerCharacter* Target); // Function Tiger.TigerCharacter.AuthorityApplyEffectWithTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1254100
	void AuthorityApplyEffectWithSocket(struct UTigerCharacterEffect* Effect, struct FName SocketName); // Function Tiger.TigerCharacter.AuthorityApplyEffectWithSocket // (Final|Native|Public|BlueprintCallable) // @ game+0x1254030
	void AuthorityApplyEffect(struct UTigerCharacterEffect* Effect); // Function Tiger.TigerCharacter.AuthorityApplyEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1253fa0
};

// Class Tiger.TigerBaseNPC
// Size: 0x9a0 (Inherited: 0x780)
struct ATigerBaseNPC : ATigerCharacter {
	char pad_780[0x10]; // 0x780(0x10)
	struct UTigerHSensesTargetComponent* HeightenedSensesTargetComponent; // 0x790(0x08)
	struct UTigerNPCAsset* NPCAsset; // 0x798(0x08)
	struct UTigerBloodPotencyComponent* BloodPotencyComponent; // 0x7a0(0x08)
	struct UTigerNPCVisualAsset* VisualAsset; // 0x7a8(0x08)
	struct UTigerNpcPropAsset* PropAsset; // 0x7b0(0x08)
	struct UTigerMasqueradeActionResponse* MasqueradeActionResponse; // 0x7b8(0x08)
	struct UTigerNPCFacePoseMap* HeadMeshsPoseAssetsClass; // 0x7c0(0x08)
	enum class ETigerNPCType NPCType; // 0x7c8(0x01)
	char pad_7C9[0x7]; // 0x7c9(0x07)
	struct UTigerInteractiveNpcComponent* InteractiveNpcComponent; // 0x7d0(0x08)
	struct FTigerMeshCollection ReplicatedMeshCollection; // 0x7d8(0xf0)
	struct UObject* ReplicatedAnimationInstanceClass; // 0x8c8(0x08)
	struct ATigerAISplinePath* ActiveSplinePath; // 0x8d0(0x08)
	struct ATigerNPCSpawningBase* Spawner; // 0x8d8(0x08)
	struct USkeletalMeshComponent* HeightenedSensesHeartMesh; // 0x8e0(0x08)
	struct USkeletalMeshComponent* InWorldHeartMesh; // 0x8e8(0x08)
	float LastTimeReactingToLocalPlayerAction; // 0x8f0(0x04)
	int32_t LastPlayedVoEventId; // 0x8f4(0x04)
	bool bHasSightOfLocalPlayer; // 0x8f8(0x01)
	char pad_8F9[0x7]; // 0x8f9(0x07)
	enum class ETigerBloodType BloodType; // 0x900(0x01)
	enum class ETigerBloodPotency BloodPotency; // 0x901(0x01)
	char pad_902[0x6]; // 0x902(0x06)
	struct TArray<struct ATigerAISplinePath*> StoredSplines; // 0x908(0x10)
	struct ATigerWorldCompositionGrid* StreamingGrid; // 0x918(0x08)
	char pad_920[0x80]; // 0x920(0x80)

	void QueueVoEvent(struct FName InVoCategory, bool bInShouldMulticast); // Function Tiger.TigerBaseNPC.QueueVoEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x123e020
	void PickHeartMeshes(); // Function Tiger.TigerBaseNPC.PickHeartMeshes // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OverrideBloodPotency(enum class ETigerBloodPotency InNewBloodPotency); // Function Tiger.TigerBaseNPC.OverrideBloodPotency // (Final|Native|Public|BlueprintCallable) // @ game+0x123d7d0
	void OnStoppedBeingClosestNpcWithPotencyInHeightenedSenses(); // Function Tiger.TigerBaseNPC.OnStoppedBeingClosestNpcWithPotencyInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnSawLocalPlayerBreachMasquerade(); // Function Tiger.TigerBaseNPC.OnSawLocalPlayerBreachMasquerade // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnRep_ReplicatedAnimationInstanceClassChanged(); // Function Tiger.TigerBaseNPC.OnRep_ReplicatedAnimationInstanceClassChanged // (Final|Native|Protected) // @ game+0x123e000
	void OnRep_BloodType(); // Function Tiger.TigerBaseNPC.OnRep_BloodType // (Final|Native|Protected) // @ game+0x123dfe0
	void OnRep_BloodPotency(); // Function Tiger.TigerBaseNPC.OnRep_BloodPotency // (Final|Native|Protected) // @ game+0x123dfc0
	void OnRep_AdditionalMeshCollectionChanged(); // Function Tiger.TigerBaseNPC.OnRep_AdditionalMeshCollectionChanged // (Final|Native|Protected) // @ game+0x123dfa0
	void OnLostSightOfLocalPlayer(struct ATigerPlayer* InPlayer); // Function Tiger.TigerBaseNPC.OnLostSightOfLocalPlayer // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnGainedSightOfLocalPlayer(struct ATigerPlayer* InPlayer); // Function Tiger.TigerBaseNPC.OnGainedSightOfLocalPlayer // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnBloodTypeChanged(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBaseNPC.OnBloodTypeChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnBloodPotencyChanged(enum class ETigerBloodPotency InBloodPotency); // Function Tiger.TigerBaseNPC.OnBloodPotencyChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnBecameClosestNpcWithPotencyInHeightenedSenses(); // Function Tiger.TigerBaseNPC.OnBecameClosestNpcWithPotencyInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Multicast_VerifySimulationLocation(struct FVector InAuthorityLocation); // Function Tiger.TigerBaseNPC.Multicast_VerifySimulationLocation // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x123ddf0
	void Multicast_QueueVoEvent(int8_t InVoCategoryIndex); // Function Tiger.TigerBaseNPC.Multicast_QueueVoEvent // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x123dd70
	void Multicast_ChangeBlood(enum class ETigerBloodPotency InNewBloodPotency, enum class ETigerBloodType InNewBloodType); // Function Tiger.TigerBaseNPC.Multicast_ChangeBlood // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x123dca0
	struct ATigerAiBaseController* GetTigerAiBaseController(); // Function Tiger.TigerBaseNPC.GetTigerAiBaseController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x123dbd0
	enum class ETigerBloodType GetBloodType(); // Function Tiger.TigerBaseNPC.GetBloodType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x123da00
	enum class ETigerBloodPotency GetBloodPotency(); // Function Tiger.TigerBaseNPC.GetBloodPotency // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x123d9e0
	void DeactivateHeightenedSensesVisualization(); // Function Tiger.TigerBaseNPC.DeactivateHeightenedSensesVisualization // (Final|Native|Protected|BlueprintCallable) // @ game+0x123d8d0
	void AuthoritySetBloodType(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBaseNPC.AuthoritySetBloodType // (Final|Native|Public|BlueprintCallable) // @ game+0x123d850
	void AuthoritySetBloodPotency(enum class ETigerBloodPotency InNewBloodPotency); // Function Tiger.TigerBaseNPC.AuthoritySetBloodPotency // (Final|Native|Public|BlueprintCallable) // @ game+0x123d7d0
	void AuthoritySetBlood(enum class ETigerBloodPotency InNewBloodPotency, enum class ETigerBloodType InNewBloodType); // Function Tiger.TigerBaseNPC.AuthoritySetBlood // (Final|Native|Public|BlueprintCallable) // @ game+0x123d700
	void ActivateHeightenedSensesVisualization(); // Function Tiger.TigerBaseNPC.ActivateHeightenedSensesVisualization // (Final|Native|Protected|BlueprintCallable) // @ game+0x123d6e0
};

// Class Tiger.TigerBaseThrallData
// Size: 0xc8 (Inherited: 0x30)
struct UTigerBaseThrallData : UDataAsset {
	enum class ETigerThrallId ThrallId; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FText ThrallName; // 0x38(0x18)
	struct FText ThrallDescription; // 0x50(0x18)
	struct FText ThrallHintText; // 0x68(0x18)
	struct TArray<struct UTexture2D*> ThrallPortraits; // 0x80(0x10)
	struct FText ThrallKeepsakeName; // 0x90(0x18)
	struct UTexture2D* ThrallKeepsakePortrait; // 0xa8(0x08)
	struct FTigerThrallStats StartingStats; // 0xb0(0x10)
	struct UTigerGrimoireEntry* GrimoireEntry; // 0xc0(0x08)
};

// Class Tiger.TigerBattlepassUI
// Size: 0x3e0 (Inherited: 0x3b0)
struct UTigerBattlepassUI : UTigerSceneBackgroundUI {
	int32_t MaxPageItems; // 0x3b0(0x04)
	char pad_3B4[0x4]; // 0x3b4(0x04)
	struct TArray<int32_t> PageSizes; // 0x3b8(0x10)
	int32_t CurrentPageIndex; // 0x3c8(0x04)
	char pad_3CC[0x4]; // 0x3cc(0x04)
	struct TArray<struct UTigerClientSeasonalRewardTier*> RewardTiers; // 0x3d0(0x10)

	void GetPageItemIndices(int32_t PageIndex, int32_t FirstItemIndex, int32_t LastItemIndex); // Function Tiger.TigerBattlepassUI.GetPageItemIndices // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x123da20
};

// Class Tiger.TigerBelowBalconyEntryTrigger
// Size: 0x268 (Inherited: 0x260)
struct ATigerBelowBalconyEntryTrigger : ATriggerVolume {
	struct FName EnterBalconyFromBelowAnimName; // 0x260(0x08)
};

// Class Tiger.TigerBlindingBeautyEffectActor
// Size: 0x238 (Inherited: 0x228)
struct ATigerBlindingBeautyEffectActor : AActor {
	struct ATigerPlayer* Player; // 0x228(0x08)
	float TriggerTime; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)

	void OnDashExit(bool bInShouldTrigger); // Function Tiger.TigerBlindingBeautyEffectActor.OnDashExit // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnDashEnter(); // Function Tiger.TigerBlindingBeautyEffectActor.OnDashEnter // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerBloodDecalTrail
// Size: 0x230 (Inherited: 0x228)
struct ATigerBloodDecalTrail : AActor {
	char pad_228[0x8]; // 0x228(0x08)
};

// Class Tiger.TigerBloodPotencyVisualizationConfig
// Size: 0x80 (Inherited: 0x30)
struct UTigerBloodPotencyVisualizationConfig : UDataAsset {
	struct TArray<struct UMaterialInstance*> HeartMeshMaterialTarget; // 0x30(0x10)
	struct TSoftObjectPtr<struct UNiagaraSystem> NiagaraPath; // 0x40(0x28)
	struct UParticleSystem* ParticleSystem; // 0x68(0x08)
	struct FName ParticleSystemAttachmentSocket; // 0x70(0x08)
	bool bParticleSystemAbsoluteRotation; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Tiger.TigerBloodPotencyComponent
// Size: 0x220 (Inherited: 0xb0)
struct UTigerBloodPotencyComponent : UActorComponent {
	float BloodTypeWeights[0x4]; // 0xb0(0x10)
	bool bEnableBloodTypeEffects; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
	struct UTigerBloodPotencyVisualizationConfig* CurrentHeightenedSensesConfig; // 0xc8(0x08)
	struct UTigerBloodPotencyVisualizationConfig* CurrentInWorldConfig; // 0xd0(0x08)
	struct UTigerBloodPotencyVisualizationConfig* HeightenedSensesVisualConfiguration[0x4]; // 0xd8(0x20)
	struct UTigerBloodPotencyVisualizationConfig* HeightenedSensesVisualConfigurationByBloodType[0x4]; // 0xf8(0x20)
	struct UTigerBloodPotencyVisualizationConfig* InWorldVisualConfiguration[0x4]; // 0x118(0x20)
	struct UTigerBloodPotencyVisualizationConfig* InWorldVisualConfigurationByBloodType[0x4]; // 0x138(0x20)
	struct FName HeartMeshMaximumVisibilityDistanceName; // 0x158(0x08)
	struct TArray<struct UMaterialInstance*> HsMeshPreviousMaterials; // 0x160(0x10)
	struct TArray<struct UMaterialInstance*> HsMeshTargetMaterials; // 0x170(0x10)
	struct TArray<struct UMaterialInstanceDynamic*> HsMeshCurrentMaterials; // 0x180(0x10)
	struct USkeletalMeshComponent* HsSkeletalMeshComponent; // 0x190(0x08)
	struct UParticleSystemComponent* HsParticleSystemComponent; // 0x198(0x08)
	struct UNiagaraComponent* HsNiagaraComponent; // 0x1a0(0x08)
	struct TArray<struct UMaterialInstance*> InWorldMeshPreviousMaterials; // 0x1a8(0x10)
	struct TArray<struct UMaterialInstance*> InWorldMeshTargetMaterials; // 0x1b8(0x10)
	struct TArray<struct UMaterialInstanceDynamic*> InWorldMeshCurrentMaterials; // 0x1c8(0x10)
	struct USkeletalMeshComponent* InWorldSkeletalMeshComponent; // 0x1d8(0x08)
	struct UParticleSystemComponent* InWorldParticleSystemComponent; // 0x1e0(0x08)
	struct UNiagaraComponent* InWorldNiagaraComponent; // 0x1e8(0x08)
	struct ATigerBaseNPC* NpcOwner; // 0x1f0(0x08)
	char pad_1F8[0x10]; // 0x1f8(0x10)
	float MaterialInterpolationDuration; // 0x208(0x04)
	char pad_20C[0x14]; // 0x20c(0x14)

	void RefreshBloodPotencyVisualization(bool bInForceRefresh); // Function Tiger.TigerBloodPotencyComponent.RefreshBloodPotencyVisualization // (Final|Native|Public|BlueprintCallable) // @ game+0x123e100
};

// Class Tiger.TigerBloodResonanceAsset
// Size: 0x1f8 (Inherited: 0x30)
struct UTigerBloodResonanceAsset : UDataAsset {
	struct FText ResonanceName; // 0x30(0x18)
	struct FText InventoryLevel1Description; // 0x48(0x18)
	struct FText InventoryLevel2Description; // 0x60(0x18)
	struct FText InventoryLevel3Description; // 0x78(0x18)
	struct FText FeedRewardLevel1Description; // 0x90(0x18)
	struct FText FeedRewardLevel2Description; // 0xa8(0x18)
	struct FText FeedRewardLevel3Description; // 0xc0(0x18)
	struct FColor ResonanceColor; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct TSoftObjectPtr<struct UTexture2D> ResonanceLevel1; // 0xe0(0x28)
	struct TSoftObjectPtr<struct UTexture2D> ResonanceLevel2; // 0x108(0x28)
	struct TSoftObjectPtr<struct UTexture2D> ResonanceLevel3; // 0x130(0x28)
	struct TSoftObjectPtr<struct UTexture2D> SlotLevel1; // 0x158(0x28)
	struct TSoftObjectPtr<struct UTexture2D> SlotLevel2; // 0x180(0x28)
	struct TSoftObjectPtr<struct UTexture2D> SlotLevel3; // 0x1a8(0x28)
	struct TSoftObjectPtr<struct UMaterial> ResonanceVfx; // 0x1d0(0x28)
};

// Class Tiger.TigerBloodResonanceComponent
// Size: 0x1f0 (Inherited: 0xb0)
struct UTigerBloodResonanceComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBloodResonanceBlockedByCap; // 0xb0(0x10)
	float BloodCapIncreasePerEvent[0x1d]; // 0xc0(0x74)
	char pad_134[0x4]; // 0x134(0x04)
	struct FTigerBloodResonanceBuffs BloodResonanceBuffs[0x4]; // 0x138(0x40)
	int32_t StartingBloodCap; // 0x178(0x04)
	int32_t BloodTypeCap; // 0x17c(0x04)
	int32_t MaxBloodCap; // 0x180(0x04)
	int32_t CurrentBloodCap; // 0x184(0x04)
	struct FMulticastInlineDelegate OnBloodCapChanged; // 0x188(0x10)
	struct FMulticastInlineDelegate OnBloodResonanceAdded; // 0x198(0x10)
	char pad_1A8[0x48]; // 0x1a8(0x48)

	void OnPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerBloodResonanceComponent.OnPlayerEvent // (Final|Native|Private) // @ game+0x1242410
	void OnLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerBloodResonanceComponent.OnLifeStatusChanged // (Final|Native|Private) // @ game+0x12422c0
	int32_t GetTotalBloodResonanceNum(); // Function Tiger.TigerBloodResonanceComponent.GetTotalBloodResonanceNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241fb0
	int32_t GetMaxBloodCap(); // Function Tiger.TigerBloodResonanceComponent.GetMaxBloodCap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241f00
	int32_t GetCurrentBloodResonanceOfType(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBloodResonanceComponent.GetCurrentBloodResonanceOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241d40
	struct TArray<enum class ETigerBloodType> GetCurrentBloodResonance(); // Function Tiger.TigerBloodResonanceComponent.GetCurrentBloodResonance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241cb0
	int32_t GetCurrentBloodCap(); // Function Tiger.TigerBloodResonanceComponent.GetCurrentBloodCap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241c90
	void Client_IncreaseBloodCap(float InBloodCapIncrease); // Function Tiger.TigerBloodResonanceComponent.Client_IncreaseBloodCap // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1241bc0
	void Client_AddBloodResonance(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBloodResonanceComponent.Client_AddBloodResonance // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1241b40
};

// Class Tiger.TigerPassiveConfig
// Size: 0x138 (Inherited: 0x30)
struct UTigerPassiveConfig : UDataAsset {
	struct FText Name; // 0x30(0x18)
	struct FText Description; // 0x48(0x18)
	struct UTexture2D* Icon; // 0x60(0x08)
	struct UMediaSource* PreviewVideo; // 0x68(0x08)
	struct UTigerWidget* CustomWidget; // 0x70(0x08)
	struct UTigerPassiveComponent* LogicComponent; // 0x78(0x08)
	struct FTigerCharacterStatModification PassiveStatChanges; // 0x80(0xb4)
	char PowerIncrease; // 0x134(0x01)
	char pad_135[0x3]; // 0x135(0x03)
};

// Class Tiger.TigerBloodTrackPassiveConfig
// Size: 0x140 (Inherited: 0x138)
struct UTigerBloodTrackPassiveConfig : UTigerPassiveConfig {
	enum class ETigerBloodTrackPassiveCategory Category; // 0x138(0x01)
	bool bCanBeMoved; // 0x139(0x01)
	char pad_13A[0x6]; // 0x13a(0x06)
};

// Class Tiger.TigerBloodTrackPreset
// Size: 0x40 (Inherited: 0x30)
struct UTigerBloodTrackPreset : UDataAsset {
	struct FTigerBloodTrack BloodTrack; // 0x30(0x10)

	bool VerifyCustomization(struct FTigerBloodTrack Customization, struct UTigerPowerKit* PowerKit); // Function Tiger.TigerBloodTrackPreset.VerifyCustomization // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1242890
	struct TArray<int32_t> CalculateBloodTrackSlotMovement(struct TArray<struct UTigerBloodTrackPassiveConfig*> BloodTrackToModify, int32_t IndexToMove, int32_t IndexToMoveTo); // Function Tiger.TigerBloodTrackPreset.CalculateBloodTrackSlotMovement // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12419a0
};

// Class Tiger.TigerBloodTrackPassiveList
// Size: 0x40 (Inherited: 0x30)
struct UTigerBloodTrackPassiveList : UDataAsset {
	struct TArray<struct UTigerBloodTrackPassiveConfig*> PassivesAvailableToAll; // 0x30(0x10)
};

// Class Tiger.TigerBloodTrackHealthUpgradePassiveConfig
// Size: 0x140 (Inherited: 0x140)
struct UTigerBloodTrackHealthUpgradePassiveConfig : UTigerBloodTrackPassiveConfig {
};

// Class Tiger.TigerBloodTrackPassiveUltimatePredatorConfig
// Size: 0x140 (Inherited: 0x140)
struct UTigerBloodTrackPassiveUltimatePredatorConfig : UTigerBloodTrackPassiveConfig {
};

// Class Tiger.TigerBloodTrackPassiveUnlockPowersConfig
// Size: 0x140 (Inherited: 0x140)
struct UTigerBloodTrackPassiveUnlockPowersConfig : UTigerBloodTrackPassiveConfig {
};

// Class Tiger.TigerBloodVein
// Size: 0x278 (Inherited: 0x228)
struct ATigerBloodVein : AActor {
	struct FMulticastInlineDelegate OnEndOfVeinReached; // 0x228(0x10)
	struct USplineComponent* Spline; // 0x238(0x08)
	struct USceneComponent* CurrentPlayerSpot; // 0x240(0x08)
	float EarliestDisconnectPoint; // 0x248(0x04)
	float LatestDisconnectPoint; // 0x24c(0x04)
	float VeinMovementSpeed; // 0x250(0x04)
	bool bIsVeinActive; // 0x254(0x01)
	char pad_255[0x3]; // 0x255(0x03)
	struct ATigerHolyIncense* HolyIncense; // 0x258(0x08)
	char pad_260[0xc]; // 0x260(0x0c)
	float StartSynchronizedTime; // 0x26c(0x04)
	char pad_270[0x8]; // 0x270(0x08)

	void TigerOnEndOfVeinReached__DelegateSignature(); // DelegateFunction Tiger.TigerBloodVein.TigerOnEndOfVeinReached__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnVeinActivated(); // Function Tiger.TigerBloodVein.OnVeinActivated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnRep_IsVeinActive(); // Function Tiger.TigerBloodVein.OnRep_IsVeinActive // (Final|Native|Private) // @ game+0x1242520
	void Multicast_StartMovement(float ServerTime); // Function Tiger.TigerBloodVein.Multicast_StartMovement // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1242230
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerBloodVein.MatchStateChanged // (Final|Native|Private) // @ game+0x12420e0
	struct FVector GetCurrentPlayerLocation(); // Function Tiger.TigerBloodVein.GetCurrentPlayerLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241e10
	struct FVector GetCurrentPlayerDirection(); // Function Tiger.TigerBloodVein.GetCurrentPlayerDirection // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241dd0
};

// Class Tiger.TigerBloodVeinBranch
// Size: 0x288 (Inherited: 0x228)
struct ATigerBloodVeinBranch : AActor {
	struct FMulticastInlineDelegate OnReachedEndOfBloodVeinBranch; // 0x228(0x10)
	struct UStaticMesh* VeinSplineMesh; // 0x238(0x08)
	struct ATigerBloodVeinPawn* ControllingPawn; // 0x240(0x08)
	struct USceneComponent* CurrentPlayerSpot; // 0x248(0x08)
	float LandSoundEventTimeOffset; // 0x250(0x04)
	float SplineMeshDistance; // 0x254(0x04)
	float SplineScale; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct TArray<struct USplineMeshComponent*> GeneratedSplineMeshes; // 0x260(0x10)
	struct UTigerBloodVeinBranchMovementComponent* MovementComponent; // 0x270(0x08)
	char pad_278[0x10]; // 0x278(0x10)

	void TigerDelegateReachedEndOfBloodVeinBranch__DelegateSignature(); // DelegateFunction Tiger.TigerBloodVeinBranch.TigerDelegateReachedEndOfBloodVeinBranch__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void PostLandingSoundEvent(); // Function Tiger.TigerBloodVeinBranch.PostLandingSoundEvent // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsLocalPlayerInThisBranch(); // Function Tiger.TigerBloodVeinBranch.IsLocalPlayerInThisBranch // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1242070
	void HitGround(); // Function Tiger.TigerBloodVeinBranch.HitGround // (Final|Native|Private) // @ game+0x1242030
	void HideGeneratedMeshes(); // Function Tiger.TigerBloodVeinBranch.HideGeneratedMeshes // (Final|Native|Protected|BlueprintCallable) // @ game+0x1242010
	struct TArray<struct USplineMeshComponent*> GetGeneratedSplineMeshes(); // Function Tiger.TigerBloodVeinBranch.GetGeneratedSplineMeshes // (Final|Native|Protected|BlueprintCallable) // @ game+0x1241e50
};

// Class Tiger.TigerBloodVeinBranchMovementComponent
// Size: 0x170 (Inherited: 0xb0)
struct UTigerBloodVeinBranchMovementComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct ACharacter* PlayerPawn; // 0xc0(0x08)
	struct ATigerGameState* GameState; // 0xc8(0x08)
	struct TArray<struct FVector> MovementTargets; // 0xd0(0x10)
	float StartSimulationTime; // 0xe0(0x04)
	bool bHitGround; // 0xe4(0x01)
	char pad_E5[0x3]; // 0xe5(0x03)
	float SecondsPerStep; // 0xe8(0x04)
	struct FTigerBloodVeinBranchMovementSettings PrimaryMovementSettings; // 0xec(0x24)
	struct FTigerBloodVeinBranchMovementSettings SecondaryMovementSettings; // 0x110(0x24)
	char pad_134[0xc]; // 0x134(0x0c)
	struct ATigerBloodVeinBranch* Branch; // 0x140(0x08)
	struct ATigerHolyIncense* HolyIncense; // 0x148(0x08)
	char pad_150[0x20]; // 0x150(0x20)

	void TigerDelegateBloodVeinBranchHitGround__DelegateSignature(); // DelegateFunction Tiger.TigerBloodVeinBranchMovementComponent.TigerDelegateBloodVeinBranchHitGround__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void Multicast_AddBranchPoint(struct FVector InNewTarget); // Function Tiger.TigerBloodVeinBranchMovementComponent.Multicast_AddBranchPoint // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x12421b0
	void HitGround(); // Function Tiger.TigerBloodVeinBranchMovementComponent.HitGround // (Final|Native|Private) // @ game+0x1242050
};

// Class Tiger.TigerBloodVeinPawn
// Size: 0x2f8 (Inherited: 0x288)
struct ATigerBloodVeinPawn : APawn {
	struct FMulticastInlineDelegate OnIsCoterieNavigatorChanged; // 0x288(0x10)
	struct ATigerBloodVein* BloodVein; // 0x298(0x08)
	bool bIsCoterieNavigator; // 0x2a0(0x01)
	bool bWantsToLaunchSolo; // 0x2a1(0x01)
	char pad_2A2[0x6]; // 0x2a2(0x06)
	struct UStaticMeshComponent* StaticMesh; // 0x2a8(0x08)
	struct UTigerSpringArmComponent* SpringArm; // 0x2b0(0x08)
	struct UCameraComponent* Camera; // 0x2b8(0x08)
	enum class ETigerBloodVeinAlternateAction AlternateAction; // 0x2c0(0x01)
	char pad_2C1[0x17]; // 0x2c1(0x17)
	struct ATigerBloodVeinBranch* BranchClass; // 0x2d8(0x08)
	float AlternateActionHoldTime; // 0x2e0(0x04)
	char pad_2E4[0x14]; // 0x2e4(0x14)

	void SpawnPlayer(); // Function Tiger.TigerBloodVeinPawn.SpawnPlayer // (Final|Native|Private) // @ game+0x1242870
	void Server_SetLaunchSolo(bool bInWantsToLaunchSolo); // Function Tiger.TigerBloodVeinPawn.Server_SetLaunchSolo // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12427b0
	void Server_SendInputData(char InPackedInputVector, char InCompressedCameraYaw, char InCompressedCameraPitch); // Function Tiger.TigerBloodVeinPawn.Server_SendInputData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1242660
	void Server_PassCoterieNavigator(); // Function Tiger.TigerBloodVeinPawn.Server_PassCoterieNavigator // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1242610
	void Server_LaunchBranch(struct FRotator InCameraRotation); // Function Tiger.TigerBloodVeinPawn.Server_LaunchBranch // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x1242540
	void OnRep_IsCoterieNavigator(); // Function Tiger.TigerBloodVeinPawn.OnRep_IsCoterieNavigator // (Final|Native|Private) // @ game+0x1242500
	void OnRep_BloodVein(); // Function Tiger.TigerBloodVeinPawn.OnRep_BloodVein // (Final|Native|Private) // @ game+0x12424e0
	void OnMatchStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerBloodVeinPawn.OnMatchStateChanged // (Final|Native|Private) // @ game+0x1242340
	void OnIsCoterieNavigatorChanged__DelegateSignature(bool bInIsCoterieNavigator); // DelegateFunction Tiger.TigerBloodVeinPawn.OnIsCoterieNavigatorChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnConnectedToMainVein(); // Function Tiger.TigerBloodVeinPawn.OnConnectedToMainVein // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnBranchedOffFromMainVein(); // Function Tiger.TigerBloodVeinPawn.OnBranchedOffFromMainVein // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsNavigatingBranch(); // Function Tiger.TigerBloodVeinPawn.IsNavigatingBranch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12420a0
	bool HasBranchedOff(); // Function Tiger.TigerBloodVeinPawn.HasBranchedOff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241fe0
	void EndOfVeinReached(); // Function Tiger.TigerBloodVeinPawn.EndOfVeinReached // (Final|Native|Private) // @ game+0x1241c70
	void Client_OnDetachedFromMainVein(); // Function Tiger.TigerBloodVeinPawn.Client_OnDetachedFromMainVein // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1241c50
	bool CanDoSecondaryLaunch(); // Function Tiger.TigerBloodVeinPawn.CanDoSecondaryLaunch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241b10
};

// Class Tiger.TigerBloodVeinTooltipLocation
// Size: 0x230 (Inherited: 0x228)
struct ATigerBloodVeinTooltipLocation : AActor {
	float MaximumDistance; // 0x228(0x04)
	bool bIsVisible; // 0x22c(0x01)
	char pad_22D[0x3]; // 0x22d(0x03)

	void OnVisiblityChanged(); // Function Tiger.TigerBloodVeinTooltipLocation.OnVisiblityChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerBloodVeinTrackWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerBloodVeinTrackWidget : UTigerWidget {
};

// Class Tiger.TigerBlueprintLootComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerBlueprintLootComponent : UActorComponent {
	struct UTigerItemLootTable* LootTable; // 0xb0(0x08)
	struct TArray<struct AActor*> SpawnedItemActors; // 0xb8(0x10)

	struct TArray<struct AActor*> GetSpawnedItemActors(); // Function Tiger.TigerBlueprintLootComponent.GetSpawnedItemActors // (Final|Native|Public|Const) // @ game+0x1241f20
	struct UTigerItemLootTable* GetLootTable(); // Function Tiger.TigerBlueprintLootComponent.GetLootTable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241ee0
};

// Class Tiger.TigerBlueprintLootLocationComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerBlueprintLootLocationComponent : UActorComponent {
	struct UTigerLootLocationConfiguration* Configuration; // 0xb0(0x08)
	char GameTypeFilter; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// Class Tiger.TigerBootGameMode
// Size: 0x2e0 (Inherited: 0x2c8)
struct ATigerBootGameMode : AGameModeBase {
	enum class ESessionType SessionTraveledFrom; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct UTigerGameFlowStateMap* GameFlowStateMap; // 0x2d0(0x08)
	struct UTigerGameFlowStateMap* BotGameFlowStateMap; // 0x2d8(0x08)
};

// Class Tiger.TigerBrujahBaneRecklessness
// Size: 0x140 (Inherited: 0x138)
struct UTigerBrujahBaneRecklessness : UTigerPassiveConfig {
	float DamageTakenMultiplier; // 0x138(0x04)
	float AutoDeactivateTimer; // 0x13c(0x04)
};

// Class Tiger.TigerPassiveComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerPassiveComponent : UActorComponent {
	struct ATigerPlayer* PlayerOwner; // 0xb0(0x08)
	struct UTigerWidget* PassiveWidget; // 0xb8(0x08)

	void SetPassiveWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerPassiveComponent.SetPassiveWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12e6190
	void OnCreated(struct ATigerPlayer* InPlayer, bool InHasAuthority); // Function Tiger.TigerPassiveComponent.OnCreated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsPassiveActive(); // Function Tiger.TigerPassiveComponent.IsPassiveActive // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12e5f70
	struct UTigerWidget* GetPassiveWidget(); // Function Tiger.TigerPassiveComponent.GetPassiveWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e5c90
};

// Class Tiger.TigerBrujahBaneRecklessnessLogic
// Size: 0x190 (Inherited: 0xc0)
struct UTigerBrujahBaneRecklessnessLogic : UTigerPassiveComponent {
	struct UTigerBrujahBaneRecklessness* Config; // 0xc0(0x08)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	char pad_D0[0xc0]; // 0xd0(0xc0)
};

// Class Tiger.TigerBrujahTraitMomentum
// Size: 0x158 (Inherited: 0x138)
struct UTigerBrujahTraitMomentum : UTigerPassiveConfig {
	float MomentumActiveTimer; // 0x138(0x04)
	float GroundSlamRadiusMultiplier; // 0x13c(0x04)
	float MightyLeapVelocityMultiplier; // 0x140(0x04)
	float FOTTKnockbackDistanceMultiplier; // 0x144(0x04)
	float FOTTWallImpactDamageMultiplier; // 0x148(0x04)
	char pad_14C[0x4]; // 0x14c(0x04)
	struct UAkAudioEvent* MomentumStartedAudioEvent; // 0x150(0x08)
};

// Class Tiger.TigerBrujahTraitMomentumLogic
// Size: 0xe0 (Inherited: 0xc0)
struct UTigerBrujahTraitMomentumLogic : UTigerPassiveComponent {
	struct UTigerBrujahTraitMomentum* Config; // 0xc0(0x08)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	char pad_D0[0x10]; // 0xd0(0x10)

	bool IsMomentumActive(); // Function Tiger.TigerBrujahTraitMomentumLogic.IsMomentumActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1247080
};

// Class Tiger.TigerBuffInstance
// Size: 0x88 (Inherited: 0x28)
struct UTigerBuffInstance : UObject {
	struct FTigerBuffReplicatedInstanceData BuffReplicatedInstanceData; // 0x28(0x20)
	struct TWeakObjectPtr<struct ATigerCharacter> OwnerCharacter; // 0x48(0x08)
	struct UTigerBuff* Buff; // 0x50(0x08)
	char pad_58[0x10]; // 0x58(0x10)
	struct UParticleSystemComponent* ActiveBuffParticles; // 0x68(0x08)
	struct UNiagaraComponent* ActiveNiagaraParticles; // 0x70(0x08)
	struct TArray<struct UNiagaraComponent*> AdditionalActiveNiagaraParticles; // 0x78(0x10)

	struct ATigerCharacter* GetOwningCharacter(); // Function Tiger.TigerBuffInstance.GetOwningCharacter // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246f10
	struct UNiagaraComponent* GetActiveNiagaraParticles(); // Function Tiger.TigerBuffInstance.GetActiveNiagaraParticles // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246ef0
	struct UParticleSystemComponent* GetActiveBuffParticles(); // Function Tiger.TigerBuffInstance.GetActiveBuffParticles // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246ed0
};

// Class Tiger.TigerBuffAdrenalineRushInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffAdrenalineRushInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffAdrenalineRush
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffAdrenalineRush : UTigerBuff {
};

// Class Tiger.TigerBuffAnarchHuntingKnife
// Size: 0x290 (Inherited: 0x270)
struct UTigerBuffAnarchHuntingKnife : UTigerBuff {
	struct UCurveFloat* EffectStrengthBasedOnDistance; // 0x270(0x08)
	struct UCurveFloat* EffectStrengthBasedOnKills; // 0x278(0x08)
	struct UCurveFloat* DamageBasedOnEnemiesKilled; // 0x280(0x08)
	float MaxDistanceToCheckForEnemies; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
};

// Class Tiger.TigerBuffAnarchHuntingKnifeInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffAnarchHuntingKnifeInstance : UTigerBuffInstance {
	struct UTigerBuffAnarchHuntingKnife* HuntingKnifeBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffAnarchHuntingKnifeStack
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffAnarchHuntingKnifeStack : UTigerBuff {
};

// Class Tiger.TigerBuffAnarchHuntingKnifeStackInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffAnarchHuntingKnifeStackInstance : UTigerBuffInstance {
	struct ATigerPlayer* Player; // 0x88(0x08)
};

// Class Tiger.TigerBuffArtifactFeedingBonus
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffArtifactFeedingBonus : UTigerBuff {
	float FeedBonusHealthMultiplier; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class Tiger.TigerBuffArtifactFeedingBonusInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffArtifactFeedingBonusInstance : UTigerBuffInstance {
	struct UTigerBuffArtifactFeedingBonus* ArtifactFeedingBonusBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffHealthRegenBase
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffHealthRegenBase : UTigerBuff {
	float HealthToHeal; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class Tiger.TigerBuffArtifactHealthRegen
// Size: 0x278 (Inherited: 0x278)
struct UTigerBuffArtifactHealthRegen : UTigerBuffHealthRegenBase {
};

// Class Tiger.TigerBuffHealthRegenBaseInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffHealthRegenBaseInstance : UTigerBuffInstance {
	struct UTigerBuffHealthRegenBase* HealthRegenBuff; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffArtifactHealthRegenInstance
// Size: 0x98 (Inherited: 0x98)
struct UTigerBuffArtifactHealthRegenInstance : UTigerBuffHealthRegenBaseInstance {
};

// Class Tiger.TigerBuffBlindingBeautyInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffBlindingBeautyInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)
};

// Class Tiger.TigerBuffBlindingBeauty
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffBlindingBeauty : UTigerBuff {
	float BlockJumpDuration; // 0x270(0x04)
	float TurnRateCap; // 0x274(0x04)
};

// Class Tiger.TigerBuffClanReducesCooldown
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffClanReducesCooldown : UTigerBuff {
	float AbilityCooldownReduction; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class Tiger.TigerBuffClanReducesCooldownInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffClanReducesCooldownInstance : UTigerBuffInstance {
	struct UTigerBuffClanReducesCooldown* ClanReduceCooldownBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffClimbInterrupt
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffClimbInterrupt : UTigerBuffDisableClimbing {
};

// Class Tiger.TigerBuffClimbInterruptInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffClimbInterruptInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffComponent
// Size: 0x140 (Inherited: 0xb0)
struct UTigerBuffComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBuffAdded; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnBuffRemoved; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnBuffRefreshed; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnClientBuffIdUpdated; // 0xe0(0x10)
	bool bDrawDebugString; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct TArray<struct UTigerBuffInstance*> BuffInstances; // 0xf8(0x10)
	struct TArray<struct UTigerBuffInstance*> NonVerifiedBuffInstances; // 0x108(0x10)
	struct TArray<struct FTigerDeferredBuffInstantiation> DeferredBuffs; // 0x118(0x10)
	char pad_128[0x18]; // 0x128(0x18)

	void Server_RequestRemoveBuffIfNonExistentFor(struct ATigerCharacter* Target, struct UTigerBuff* BuffType, int32_t BuffID, struct ATigerCharacter* BuffCaster, float BuffEndTime); // Function Tiger.TigerBuffComponent.Server_RequestRemoveBuffIfNonExistentFor // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1247490
	void RemoveBuffByID(int32_t BuffID); // Function Tiger.TigerBuffComponent.RemoveBuffByID // (Final|Native|Public|BlueprintCallable) // @ game+0x1247400
	void OnRep_BuffInstances(); // Function Tiger.TigerBuffComponent.OnRep_BuffInstances // (Final|Native|Private) // @ game+0x12473e0
	void Multicast_ClearBuff(int32_t BuffID); // Function Tiger.TigerBuffComponent.Multicast_ClearBuff // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1247270
	void Multicast_ClearAllBuffs(); // Function Tiger.TigerBuffComponent.Multicast_ClearAllBuffs // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1247250
	void Multicast_AddBuff(struct UTigerBuff* BuffType, int32_t BuffID, struct ATigerCharacter* BuffCaster, float Length, float BuffStrength); // Function Tiger.TigerBuffComponent.Multicast_AddBuff // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12470b0
	bool HasBuff(struct UTigerBuff* BuffType); // Function Tiger.TigerBuffComponent.HasBuff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246fe0
	float GetTimeLeft(struct UTigerBuff* BuffType); // Function Tiger.TigerBuffComponent.GetTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246f40
	struct UTigerBuffInstance* FindExistingBuffOfType(struct UTigerBuff* BuffType, struct ATigerCharacter* Caster); // Function Tiger.TigerBuffComponent.FindExistingBuffOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246e00
	void Client_ClearBuffFor(struct ATigerCharacter* Target, int32_t BuffID); // Function Tiger.TigerBuffComponent.Client_ClearBuffFor // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1246c60
	void Client_ClearAllBuffs(); // Function Tiger.TigerBuffComponent.Client_ClearAllBuffs // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1246c40
	void Client_AddBuff(struct UTigerBuff* BuffType, int32_t BuffID, struct ATigerCharacter* BuffCaster, float Length, float BuffStrength); // Function Tiger.TigerBuffComponent.Client_AddBuff // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1246aa0
	int32_t ApplyStun(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyStun // (Final|Native|Public|BlueprintCallable) // @ game+0x12469d0
	int32_t ApplyInvulnerable(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyInvulnerable // (Final|Native|Public|BlueprintCallable) // @ game+0x1246900
	int32_t ApplyImmobilized(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyImmobilized // (Final|Native|Public|BlueprintCallable) // @ game+0x1246830
	int32_t ApplyGrounded(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyGrounded // (Final|Native|Public|BlueprintCallable) // @ game+0x1246760
	int32_t ApplyBuff(struct UTigerBuff* BuffType, struct ATigerCharacter* BuffCaster, float OverrideLength, float OverrideBuffStrength, bool bDoLagCompensation); // Function Tiger.TigerBuffComponent.ApplyBuff // (Final|Native|Public|BlueprintCallable) // @ game+0x12465c0
};

// Class Tiger.TigerBuffDOT
// Size: 0x280 (Inherited: 0x270)
struct UTigerBuffDOT : UTigerBuff {
	struct UDamageType* DamageType; // 0x270(0x08)
	float DamagePerTick; // 0x278(0x04)
	bool bPlayHitAnimation; // 0x27c(0x01)
	bool bSpawnBloodDecals; // 0x27d(0x01)
	char pad_27E[0x2]; // 0x27e(0x02)
};

// Class Tiger.TigerBuffDOTInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffDOTInstance : UTigerBuffInstance {
	struct UTigerBuffDOT* BuffDOT; // 0x88(0x08)
};

// Class Tiger.TigerBufferedAction
// Size: 0x48 (Inherited: 0x28)
struct UTigerBufferedAction : UObject {
	struct ATigerPlayerController* OwnerPlayerController; // 0x28(0x08)
	struct UTigerActionBuffer* OwnerActionBuffer; // 0x30(0x08)
	char pad_38[0x10]; // 0x38(0x10)
};

// Class Tiger.TigerBufferedActionQuickAttack
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionQuickAttack : UTigerBufferedAction {
};

// Class Tiger.TigerBuffExtraArtifacts
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffExtraArtifacts : UTigerBuff {
};

// Class Tiger.TigerBuffExtraArtifactsInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffExtraArtifactsInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffFOTTChargeup
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffFOTTChargeup : UTigerBuff {
};

// Class Tiger.TigerBuffFOTTChargeupInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffFOTTChargeupInstance : UTigerBuffInstance {
	struct UTigerBuffFOTTChargeup* FOTTChargeupBuff; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffFOTTKnockbackWallStun
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffFOTTKnockbackWallStun : UTigerBuff {
	float WallStunnedTimer; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class Tiger.TigerBuffFOTTKnockbackWallStunInstance
// Size: 0xa0 (Inherited: 0x88)
struct UTigerBuffFOTTKnockbackWallStunInstance : UTigerBuffInstance {
	struct UTigerBuffFOTTKnockbackWallStun* FOTTKnockbackWallStun; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
	struct ATigerCharacter* Target; // 0x98(0x08)
};

// Class Tiger.TigerBuffFrenzy
// Size: 0x280 (Inherited: 0x270)
struct UTigerBuffFrenzy : UTigerBuff {
	float HPRegenPercentPerSecond; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct UTigerWeapon* WeaponClassToEquip; // 0x278(0x08)
};

// Class Tiger.TigerBuffFrenzyInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffFrenzyInstance : UTigerBuffInstance {
	struct UTigerBuffFrenzy* FrenzyBuff; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffInAirMomentumLossInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffInAirMomentumLossInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)

	void OnLandedDelegate(struct FHitResult InHit); // Function Tiger.TigerBuffInAirMomentumLossInstance.OnLandedDelegate // (Final|Native|Public|HasOutParms) // @ game+0x1247300
};

// Class Tiger.TigerBuffInAirMomentumLoss
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffInAirMomentumLoss : UTigerBuff {
	float MinimumHorizontalSpeed; // 0x270(0x04)
	float TimeToDecelerate; // 0x274(0x04)
};

// Class Tiger.TigerBuffKindredCharmInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffKindredCharmInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffKindredCharm
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffKindredCharm : UTigerBuff {
};

// Class Tiger.TigerBuffMasqueradeKeepingMovement
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffMasqueradeKeepingMovement : UTigerBuff {
};

// Class Tiger.TigerBuffMasqueradeKeepingMovementInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffMasqueradeKeepingMovementInstance : UTigerBuffInstance {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class Tiger.TigerBuffMeleeCharge
// Size: 0x280 (Inherited: 0x270)
struct UTigerBuffMeleeCharge : UTigerBuff {
	float TimeRunningBeforeBuffIsActive; // 0x270(0x04)
	float MaxDeviationAllowedInDegrees; // 0x274(0x04)
	struct UTigerBuff* AttackBuff; // 0x278(0x08)
};

// Class Tiger.TigerBuffMeleeChargeInstance
// Size: 0xb0 (Inherited: 0x88)
struct UTigerBuffMeleeChargeInstance : UTigerBuffInstance {
	struct UTigerBuffMeleeCharge* MeleeChargeBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Tiger.TigerBuffMeleeChargeAttack
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffMeleeChargeAttack : UTigerBuff {
	struct UParticleSystem* AttackParticleEffect; // 0x270(0x08)
};

// Class Tiger.TigerBuffMeleeChargeAttackInstance
// Size: 0xa8 (Inherited: 0x88)
struct UTigerBuffMeleeChargeAttackInstance : UTigerBuffInstance {
	struct UTigerBuffMeleeChargeAttack* MeleeChargeAttackBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	struct UParticleSystemComponent* ActiveAttackParticles; // 0x98(0x08)
	char pad_A0[0x8]; // 0xa0(0x08)

	void SwingFinished(); // Function Tiger.TigerBuffMeleeChargeAttackInstance.SwingFinished // (Final|Native|Private) // @ game+0x124be10
};

// Class Tiger.TigerBuffApathy
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffApathy : UTigerBuff {
};

// Class Tiger.TigerBuffApathyInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffApathyInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffWrath
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffWrath : UTigerBuff {
};

// Class Tiger.TigerBuffWrathInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffWrathInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffPostProcess
// Size: 0x238 (Inherited: 0x228)
struct ATigerBuffPostProcess : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct UPostProcessComponent* PostProcess; // 0x230(0x08)
};

// Class Tiger.TigerBuffPreventMasqueradeBreak
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffPreventMasqueradeBreak : UTigerBuff {
	struct UAkAudioEvent* ArtifactBreakAudioEvent; // 0x270(0x08)
};

// Class Tiger.TigerBuffPreventMasqueradeBreakInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffPreventMasqueradeBreakInstance : UTigerBuffInstance {
	struct UTigerBuffPreventMasqueradeBreak* PreventMasqueradeBreakBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffRejuvenatingVoiceInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffRejuvenatingVoiceInstance : UTigerBuffInstance {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class Tiger.TigerBuffRejuvenatingVoice
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffRejuvenatingVoice : UTigerBuff {

	void OnHealStop(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuffRejuvenatingVoice.OnHealStop // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnHealStart(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuffRejuvenatingVoice.OnHealStart // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerBuffShackles
// Size: 0x288 (Inherited: 0x270)
struct UTigerBuffShackles : UTigerBuff {
	struct UTigerCharacterEffect* ActiveEffect; // 0x270(0x08)
	struct FName ShacklesStaggerAnimationName; // 0x278(0x08)
	float DamageToDeal; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
};

// Class Tiger.TigerBuffShacklesInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffShacklesInstance : UTigerBuffInstance {
	struct UTigerBuffShackles* ShacklesBuff; // 0x88(0x08)
};

// Class Tiger.TigerBuffShark
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffShark : UTigerBuff {
};

// Class Tiger.TigerBuffSharkInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffSharkInstance : UTigerBuffInstance {
	struct UTigerBuffShark* SharkBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffShieldBase
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffShieldBase : UTigerBuff {
	float MaxShield; // 0x270(0x04)
	float InitialShield; // 0x274(0x04)
};

// Class Tiger.TigerBuffShieldAdrenalineRush
// Size: 0x288 (Inherited: 0x278)
struct UTigerBuffShieldAdrenalineRush : UTigerBuffShieldBase {
	float TimeBeforeDecay; // 0x278(0x04)
	float DecayPerSecond; // 0x27c(0x04)
	float DamageToShieldScale; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
};

// Class Tiger.TigerBuffShieldBaseInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffShieldBaseInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)
};

// Class Tiger.TigerBuffShieldAdrenalineRushInstance
// Size: 0xa0 (Inherited: 0x98)
struct UTigerBuffShieldAdrenalineRushInstance : UTigerBuffShieldBaseInstance {
	char pad_98[0x8]; // 0x98(0x08)
};

// Class Tiger.TigerBuffSingleSwing
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffSingleSwing : UTigerBuff {
};

// Class Tiger.TigerBuffSingleSwingInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffSingleSwingInstance : UTigerBuffInstance {
	struct ATigerPlayer* Player; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)

	void SwingFinished(); // Function Tiger.TigerBuffSingleSwingInstance.SwingFinished // (Final|Native|Private) // @ game+0x124be30
};

// Class Tiger.TigerBuffStunBaton
// Size: 0x290 (Inherited: 0x270)
struct UTigerBuffStunBaton : UTigerBuff {
	float StunBonusDamage; // 0x270(0x04)
	float ChargeGainedOnHit; // 0x274(0x04)
	float ChargeGainedPerUpdate; // 0x278(0x04)
	float PassiveChargeRate; // 0x27c(0x04)
	bool bRegisterMultipleHitsOnChargeUp; // 0x280(0x01)
	bool bRegisterMultipleHitsOnStun; // 0x281(0x01)
	char pad_282[0x6]; // 0x282(0x06)
	struct UTigerBuffInstance* TBPInstanceBuff; // 0x288(0x08)
};

// Class Tiger.TigerBuffStunBatonInstance
// Size: 0xa8 (Inherited: 0x88)
struct UTigerBuffStunBatonInstance : UTigerBuffInstance {
	struct UTigerBuffStunBaton* StunBatonBuff; // 0x88(0x08)
	char pad_90[0x10]; // 0x90(0x10)
	struct ATigerPlayer* Player; // 0xa0(0x08)

	void TargetHitShockConsumed(struct ATigerCharacter* Target); // Function Tiger.TigerBuffStunBatonInstance.TargetHitShockConsumed // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void SwingStarted(bool bWasHeavyAttack); // Function Tiger.TigerBuffStunBatonInstance.SwingStarted // (Final|Native|Public) // @ game+0x124be70
	void SwingFinished(); // Function Tiger.TigerBuffStunBatonInstance.SwingFinished // (Final|Native|Public) // @ game+0x124be50
	void MaxChargeReachedEvent(); // Function Tiger.TigerBuffStunBatonInstance.MaxChargeReachedEvent // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsStunReady(); // Function Tiger.TigerBuffStunBatonInstance.IsStunReady // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124bcd0
	void HitTarget(struct ATigerCharacter* InTarget); // Function Tiger.TigerBuffStunBatonInstance.HitTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x124bc40
	void ChargeGainedEvent(float CurrentChargeValue); // Function Tiger.TigerBuffStunBatonInstance.ChargeGainedEvent // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void AddCharge(float ValueToAdd); // Function Tiger.TigerBuffStunBatonInstance.AddCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x124bbc0
};

// Class Tiger.TigerBuffThorns
// Size: 0x298 (Inherited: 0x280)
struct UTigerBuffThorns : UTigerBuffDOT {
	float HealInterval; // 0x280(0x04)
	float HealPercentage; // 0x284(0x04)
	struct UTigerCharacterEffect* HealEffect; // 0x288(0x08)
	struct UAkAudioEvent* DOTTriggerEvent; // 0x290(0x08)
};

// Class Tiger.TigerBuffThornsInstance
// Size: 0xa0 (Inherited: 0x90)
struct UTigerBuffThornsInstance : UTigerBuffDOTInstance {
	char pad_90[0x8]; // 0x90(0x08)
	struct UTigerBuffThorns* ThornsBuff; // 0x98(0x08)
};

// Class Tiger.TigerBuffUnholyStimulant
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffUnholyStimulant : UTigerBuff {
};

// Class Tiger.TigerBuffUnholyStimulantInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffUnholyStimulantInstance : UTigerBuffInstance {

	void OnInsideHolyIncenseChanged(bool bInIsInsideHolyIncense); // Function Tiger.TigerBuffUnholyStimulantInstance.OnInsideHolyIncenseChanged // (Final|Native|Private) // @ game+0x124bcf0
};

// Class Tiger.TigerBuffVanish
// Size: 0x290 (Inherited: 0x270)
struct UTigerBuffVanish : UTigerBuffInvisible {
	float TimeReductionPerMeterMoved; // 0x270(0x04)
	float NoiseNotifyEventRange; // 0x274(0x04)
	struct UCurveFloat* MaterialTransitionIntoCurve; // 0x278(0x08)
	struct UCurveFloat* MaterialTransitionOutFromCurve; // 0x280(0x08)
	struct UParticleSystem* BlendOutParticles; // 0x288(0x08)
};

// Class Tiger.TigerBuffVanishInstance
// Size: 0xb0 (Inherited: 0x88)
struct UTigerBuffVanishInstance : UTigerBuffInstance {
	struct UTigerBuffVanish* VanishBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Tiger.TigerBuffVoiceOfInspiration
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffVoiceOfInspiration : UTigerBuff {
};

// Class Tiger.TigerBuffVoiceOfInspirationInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffVoiceOfInspirationInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuildingWallPreset
// Size: 0x38 (Inherited: 0x28)
struct UTigerBuildingWallPreset : UObject {
	struct TArray<struct TSoftObjectPtr<struct UStaticMesh>> Meshes; // 0x28(0x10)
};

// Class Tiger.TigerBuildingSystem
// Size: 0x290 (Inherited: 0x228)
struct ATigerBuildingSystem : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USplineComponent* SplineLeft; // 0x230(0x08)
	struct USplineComponent* SplineRight; // 0x238(0x08)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerFrontComponents; // 0x240(0x10)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerLeftComponents; // 0x250(0x10)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerBackComponents; // 0x260(0x10)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerRightComponents; // 0x270(0x10)
	struct FTigerBuildingSystemWallPieceInstancingData WallPieceInstancingDatas; // 0x280(0x10)

	void OnUpgrade(int32_t InVersion); // Function Tiger.TigerBuildingSystem.OnUpgrade // (Native|Event|Protected|BlueprintEvent) // @ game+0x124bd80
};

// Class Tiger.TigerBuildingSystemDepricated
// Size: 0x4b0 (Inherited: 0x290)
struct ATigerBuildingSystemDepricated : ATigerBuildingSystem {
	struct UHierarchicalInstancedStaticMeshComponent* Front_00; // 0x290(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_01; // 0x298(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_02; // 0x2a0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_03; // 0x2a8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_04; // 0x2b0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_05; // 0x2b8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_06; // 0x2c0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_07; // 0x2c8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_00; // 0x2d0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_01; // 0x2d8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_02; // 0x2e0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_03; // 0x2e8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_04; // 0x2f0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_05; // 0x2f8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_06; // 0x300(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_07; // 0x308(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_00; // 0x310(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_01; // 0x318(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_02; // 0x320(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_03; // 0x328(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_04; // 0x330(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_05; // 0x338(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_06; // 0x340(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_07; // 0x348(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_00; // 0x350(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_01; // 0x358(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_02; // 0x360(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_03; // 0x368(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_04; // 0x370(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_05; // 0x378(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_06; // 0x380(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_07; // 0x388(0x08)
	struct UStaticMeshComponent* CornerFL_00; // 0x390(0x08)
	struct UStaticMeshComponent* CornerFL_01; // 0x398(0x08)
	struct UStaticMeshComponent* CornerFL_02; // 0x3a0(0x08)
	struct UStaticMeshComponent* CornerFL_03; // 0x3a8(0x08)
	struct UStaticMeshComponent* CornerFL_04; // 0x3b0(0x08)
	struct UStaticMeshComponent* CornerFL_05; // 0x3b8(0x08)
	struct UStaticMeshComponent* CornerFL_06; // 0x3c0(0x08)
	struct UStaticMeshComponent* CornerFL_07; // 0x3c8(0x08)
	struct UStaticMeshComponent* CornerLB_00; // 0x3d0(0x08)
	struct UStaticMeshComponent* CornerLB_01; // 0x3d8(0x08)
	struct UStaticMeshComponent* CornerLB_02; // 0x3e0(0x08)
	struct UStaticMeshComponent* CornerLB_03; // 0x3e8(0x08)
	struct UStaticMeshComponent* CornerLB_04; // 0x3f0(0x08)
	struct UStaticMeshComponent* CornerLB_05; // 0x3f8(0x08)
	struct UStaticMeshComponent* CornerLB_06; // 0x400(0x08)
	struct UStaticMeshComponent* CornerLB_07; // 0x408(0x08)
	struct UStaticMeshComponent* CornerBR_00; // 0x410(0x08)
	struct UStaticMeshComponent* CornerBR_01; // 0x418(0x08)
	struct UStaticMeshComponent* CornerBR_02; // 0x420(0x08)
	struct UStaticMeshComponent* CornerBR_03; // 0x428(0x08)
	struct UStaticMeshComponent* CornerBR_04; // 0x430(0x08)
	struct UStaticMeshComponent* CornerBR_05; // 0x438(0x08)
	struct UStaticMeshComponent* CornerBR_06; // 0x440(0x08)
	struct UStaticMeshComponent* CornerBR_07; // 0x448(0x08)
	struct UStaticMeshComponent* CornerRF_00; // 0x450(0x08)
	struct UStaticMeshComponent* CornerRF_01; // 0x458(0x08)
	struct UStaticMeshComponent* CornerRF_02; // 0x460(0x08)
	struct UStaticMeshComponent* CornerRF_03; // 0x468(0x08)
	struct UStaticMeshComponent* CornerRF_04; // 0x470(0x08)
	struct UStaticMeshComponent* CornerRF_05; // 0x478(0x08)
	struct UStaticMeshComponent* CornerRF_06; // 0x480(0x08)
	struct UStaticMeshComponent* CornerRF_07; // 0x488(0x08)
	char pad_490[0x20]; // 0x490(0x20)

	void RemoveUnusedParts(); // Function Tiger.TigerBuildingSystemDepricated.RemoveUnusedParts // (Final|Native|Public|BlueprintCallable) // @ game+0x124fe30
	struct UHierarchicalInstancedStaticMeshComponent* GetFloorMeshComponent(enum class UTigerBuildingSide Side, int32_t FloorNumber); // Function Tiger.TigerBuildingSystemDepricated.GetFloorMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f260
	struct UStaticMeshComponent* GetCornerMeshComponent(enum class UTigerBuildingSide Side, int32_t FloorNumber); // Function Tiger.TigerBuildingSystemDepricated.GetCornerMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f160
	struct TArray<struct UHierarchicalInstancedStaticMeshComponent*> GetAllFloorMeshComponents(); // Function Tiger.TigerBuildingSystemDepricated.GetAllFloorMeshComponents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f000
	struct TArray<struct UStaticMeshComponent*> GetAllCornerMeshComponents(); // Function Tiger.TigerBuildingSystemDepricated.GetAllCornerMeshComponents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124efd0
};

// Class Tiger.TigerBuildingWallStreamingSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerBuildingWallStreamingSettings : USharkLocalDeveloperSettings {
	int32_t WallsToStreamPerFrame; // 0x38(0x04)
	bool bLoggingEnabled; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class Tiger.TigerBuildingSystemWallStreamer
// Size: 0x250 (Inherited: 0x228)
struct ATigerBuildingSystemWallStreamer : AActor {
	struct TArray<struct FTigerStreamableBuildingSides> StreamableBuildingParts; // 0x228(0x10)
	struct TArray<struct UStaticMeshComponent*> ComponentsToCreateRenderstateOn; // 0x238(0x10)
	char pad_248[0x8]; // 0x248(0x08)
};

// Class Tiger.TigerBuildingWallPreviewer
// Size: 0x230 (Inherited: 0x228)
struct ATigerBuildingWallPreviewer : AActor {
	struct UTigerBuildingWallPreset* Preset; // 0x228(0x08)
};

// Class Tiger.TigerCamarillaDecal
// Size: 0x238 (Inherited: 0x230)
struct ATigerCamarillaDecal : ADecalActor {
	char pad_230[0x8]; // 0x230(0x08)
};

// Class Tiger.TigerCameraPreset
// Size: 0xa8 (Inherited: 0x28)
struct UTigerCameraPreset : UObject {
	float FOV; // 0x28(0x04)
	float SpringArmLength; // 0x2c(0x04)
	struct FVector CameraOffset; // 0x30(0x0c)
	struct FVector TargetOffset; // 0x3c(0x0c)
	struct UCurveFloat* TransitionCurveIn; // 0x48(0x08)
	struct UCurveFloat* TransitionCurveOutOverride; // 0x50(0x08)
	struct UCurveFloat* RotatePawnTransition; // 0x58(0x08)
	float SidewaysCameraMirrorTime; // 0x60(0x04)
	struct FVector CameraLagSpeed; // 0x64(0x0c)
	struct FVector CameraLagMaxDistance; // 0x70(0x0c)
	float CameraRotationLagSpeed; // 0x7c(0x04)
	float CameraSensitivityModifier; // 0x80(0x04)
	bool bUseCameraSensitivtyModifierDuringFade; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	struct UTigerCameraBehavior* CameraBehavior; // 0x88(0x08)
	struct UMatineeCameraShake* CameraShakeBehaviour; // 0x90(0x08)
	bool bShortenSpringArmWhenLookingUp; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float ViewPitchMax; // 0x9c(0x04)
	float ArmLengthInterpSpeed; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Tiger.TigerCapturePointProgressUI
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerCapturePointProgressUI : UTigerWidget {
	struct FText YouCapturingStatusText; // 0x280(0x18)
	struct FText EnemyCapturingStatusText; // 0x298(0x18)
	struct FText ContestedStatusText; // 0x2b0(0x18)
	enum class ETigerCapturePointStatus CaptureStatus; // 0x2c8(0x01)
	char pad_2C9[0x3]; // 0x2c9(0x03)
	float PercentageLeft; // 0x2cc(0x04)

	void StatusChanged(); // Function Tiger.TigerCapturePointProgressUI.StatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnCapturePointEnabled(); // Function Tiger.TigerCapturePointProgressUI.OnCapturePointEnabled // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerChallenge
// Size: 0xb0 (Inherited: 0x28)
struct UTigerChallenge : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FMulticastInlineDelegate OnValueChangedEvent; // 0x30(0x10)
	struct FMulticastInlineDelegate OnChallengeCompletedEvent; // 0x40(0x10)
	struct UWorld* World; // 0x50(0x08)
	struct ATigerPlayerController* OwningPlayerController; // 0x58(0x08)
	int32_t TargetValue; // 0x60(0x04)
	int32_t PreSessionValue; // 0x64(0x04)
	struct FText ChallengeDisplayName; // 0x68(0x18)
	int32_t DefaultTargetValue; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct FText Description; // 0x88(0x18)
	uint64_t ChallengeTypeTelemetryID; // 0xa0(0x08)
	bool bChallengeCompleteEventRaised; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)

	void SetCurrentValue(int32_t NewValue); // Function Tiger.TigerChallenge.SetCurrentValue // (Native|Public|BlueprintCallable) // @ game+0x124fe50
	void OnValueChangedEvent__DelegateSignature(struct UTigerChallenge* Challenge); // DelegateFunction Tiger.TigerChallenge.OnValueChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnChallengeCompletedEvent__DelegateSignature(struct UTigerChallenge* Challenge); // DelegateFunction Tiger.TigerChallenge.OnChallengeCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	int32_t GetTargetValue(); // Function Tiger.TigerChallenge.GetTargetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f800
	struct FTigerQuestIdentifier GetQuestIds(); // Function Tiger.TigerChallenge.GetQuestIds // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f3f0
	float GetProgress(); // Function Tiger.TigerChallenge.GetProgress // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f3b0
	int32_t GetPreSessionValue(); // Function Tiger.TigerChallenge.GetPreSessionValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f390
	int32_t GetCurrentValue(); // Function Tiger.TigerChallenge.GetCurrentValue // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f230
	struct FText BuildDescriptionText(); // Function Tiger.TigerChallenge.BuildDescriptionText // (Event|Protected|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerChallengeBreakMasquerade
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeBreakMasquerade : UTigerChallenge {
	bool bOncePerMatch; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)

	void HandlePlayerBreakMasquerade(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerChallengeBreakMasquerade.HandlePlayerBreakMasquerade // (Final|Native|Private) // @ game+0x124fb30
};

// Class Tiger.TigerChallengeCollectibles
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeCollectibles : UTigerChallenge {
	char pad_B0[0x8]; // 0xb0(0x08)

	void HandleCollectibleCollected(uint32_t InCollectibleId); // Function Tiger.TigerChallengeCollectibles.HandleCollectibleCollected // (Final|Native|Private) // @ game+0x124f820
};

// Class Tiger.TigerChallengeCollection
// Size: 0x40 (Inherited: 0x30)
struct UTigerChallengeCollection : UDataAsset {
	struct TArray<struct FTigerChallengeCollectionEntry> Challenges; // 0x30(0x10)
};

// Class Tiger.TigerClientRewardTrackChallenges
// Size: 0x48 (Inherited: 0x28)
struct UTigerClientRewardTrackChallenges : UObject {
	struct TArray<struct FTigerItemId> RewardIds; // 0x28(0x10)
	int32_t RewardHighlightIndex; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct UTigerPersistentPlayerState* PersistentPlayerState; // 0x40(0x08)

	struct UTigerInventoryItemBase* GetRewardTiedToSpecificChallengeByIndex(int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackChallenges.GetRewardTiedToSpecificChallengeByIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f6c0
	struct UTigerInventoryItemBase* GetRewardByIndex(int32_t InRewardIndex); // Function Tiger.TigerClientRewardTrackChallenges.GetRewardByIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f4e0
	int32_t GetNumCompletedChallenges(); // Function Tiger.TigerClientRewardTrackChallenges.GetNumCompletedChallenges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f360
	int32_t GetNumChallenges(); // Function Tiger.TigerClientRewardTrackChallenges.GetNumChallenges // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f330
	int32_t GetCompletionPercentage(); // Function Tiger.TigerClientRewardTrackChallenges.GetCompletionPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f130
	struct UTigerChallenge* GetChallengeByIndex(int32_t ChallengeIndex); // Function Tiger.TigerClientRewardTrackChallenges.GetChallengeByIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f090
};

// Class Tiger.TigerClientRewardTrackDailyChallenges
// Size: 0x60 (Inherited: 0x48)
struct UTigerClientRewardTrackDailyChallenges : UTigerClientRewardTrackChallenges {
	struct TArray<struct FTigerChallengeTypeID> DailyChallengeIDs; // 0x48(0x10)
	struct FTigerItemId DailyChallengeExpReward; // 0x58(0x08)
};

// Class Tiger.TigerClientRewardTrackSeasonalChallenges
// Size: 0x78 (Inherited: 0x48)
struct UTigerClientRewardTrackSeasonalChallenges : UTigerClientRewardTrackChallenges {
	struct FDateTime UnlockDate; // 0x48(0x08)
	struct FDateTime LockDate; // 0x50(0x08)
	struct TArray<struct FTigerChallengeInstanceID> ChallengeInstanceIDs; // 0x58(0x10)
	struct TArray<struct FTigerItemId> RewardIdForSpecificChallenge; // 0x68(0x10)

	bool IsUnlocked(); // Function Tiger.TigerClientRewardTrackSeasonalChallenges.IsUnlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124fc60
	bool HasExpired(); // Function Tiger.TigerClientRewardTrackSeasonalChallenges.HasExpired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124fc00
};

// Class Tiger.TigerClientChallengesCollection
// Size: 0x40 (Inherited: 0x28)
struct UTigerClientChallengesCollection : UObject {
	struct TArray<struct UTigerClientRewardTrackSeasonalChallenges*> WeeklyChallenges; // 0x28(0x10)
	struct UTigerClientRewardTrackDailyChallenges* DailyChallenges; // 0x38(0x08)

	struct UTigerInventoryItemBase* GetRewardTiedToWeeklyChallenge(struct UTigerChallenge* InChallenge); // Function Tiger.TigerClientChallengesCollection.GetRewardTiedToWeeklyChallenge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f760
	struct UTigerInventoryItemBase* GetRewardTiedToDailyChallenge(struct UTigerChallenge* InChallenge); // Function Tiger.TigerClientChallengesCollection.GetRewardTiedToDailyChallenge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f620
	struct UTigerInventoryItemBase* GetRewardTiedToChallenge(struct UTigerChallenge* InChallenge); // Function Tiger.TigerClientChallengesCollection.GetRewardTiedToChallenge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f580
};

// Class Tiger.TigerChallengeDealDamage
// Size: 0xe0 (Inherited: 0xb0)
struct UTigerChallengeDealDamage : UTigerChallenge {
	bool bNeedsToDamagePlayer; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xb8(0x18)
	char pad_D0[0x10]; // 0xd0(0x10)
};

// Class Tiger.TigerChallengeDiablerize
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerChallengeDiablerize : UTigerChallenge {
	struct FTigerChallengeRequirementClan TargetRequiredClan; // 0xb0(0x10)
	char pad_C0[0x8]; // 0xc0(0x08)

	void OnDiablerizedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeDiablerize.OnDiablerizedPlayerEvent // (Final|Native|Private) // @ game+0x124fc90
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeDiablerize.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x124f980
};

// Class Tiger.TigerChallengeDownPlayer
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerChallengeDownPlayer : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xb0(0x18)
	char pad_C8[0x8]; // 0xc8(0x08)

	void OnDownedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeDownPlayer.OnDownedPlayerEvent // (Final|Native|Private) // @ game+0x124fd60
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeDownPlayer.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x124fa10
};

// Class Tiger.TigerChallengeDrainNpc
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeDrainNpc : UTigerChallenge {
	bool bSpecificNPCType; // 0xb0(0x01)
	enum class ETigerNPCType TargetNPCType; // 0xb1(0x01)
	enum class ETigerBloodPotency MinimumPotency; // 0xb2(0x01)
	char pad_B3[0x5]; // 0xb3(0x05)

	bool IsBloodPotencyRelevant(); // Function Tiger.TigerChallengeDrainNpc.IsBloodPotencyRelevant // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x124fc30
	void HandleOnRestartPlayer(struct AController* NewPlayer); // Function Tiger.TigerChallengeDrainNpc.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x124faa0
	void HandleOnFeedingDoneEvent(bool bTargetIsDrained, struct ATigerCharacter* InTargetFedOn); // Function Tiger.TigerChallengeDrainNpc.HandleOnFeedingDoneEvent // (Final|Native|Private) // @ game+0x124f8b0
};

// Class Tiger.TigerChallengeGainLevels
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeGainLevels : UTigerChallenge {
	char pad_B0[0x8]; // 0xb0(0x08)

	void OnTigerPlayerLevelChanged(int32_t InCurrentLevel, int32_t InOldLevel); // Function Tiger.TigerChallengeGainLevels.OnTigerPlayerLevelChanged // (Final|Native|Private) // @ game+0x1255f70
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeGainLevels.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x1254850
};

// Class Tiger.TigerChallengeHeadshots
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerChallengeHeadshots : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xb0(0x18)
	char pad_C8[0x10]; // 0xc8(0x10)
};

// Class Tiger.TigerChallengeHitBullets
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerChallengeHitBullets : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xb0(0x18)
	char pad_C8[0x10]; // 0xc8(0x10)
};

// Class Tiger.TigerChallengeKillEntity
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeKillEntity : UTigerChallenge {
	char pad_B0[0x8]; // 0xb0(0x08)

	void HandleOnNpcDeathEvent(struct ATigerNPC* NPC, struct AController* Instigator); // Function Tiger.TigerChallengeKillEntity.HandleOnNpcDeathEvent // (Final|Native|Private) // @ game+0x1254780
};

// Class Tiger.TigerChallengeKillPlayers
// Size: 0xe0 (Inherited: 0xb0)
struct UTigerChallengeKillPlayers : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xb0(0x18)
	bool bInOneGame; // 0xc8(0x01)
	char pad_C9[0x17]; // 0xc9(0x17)
};

// Class Tiger.TigerChallengePlayGames
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerChallengePlayGames : UTigerChallenge {
	struct FTigerChallengeRequirementClan RequiredClanCondition; // 0xb0(0x10)
	struct FTigerChallengeRequirementGameMode RequiredGameModeCondition; // 0xc0(0x10)
	char pad_D0[0x8]; // 0xd0(0x08)

	void HandlePlayerPlacement(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengePlayGames.HandlePlayerPlacement // (Final|Native|Private) // @ game+0x1254a90
};

// Class Tiger.TigerChallengeQuestItemPickup
// Size: 0xe0 (Inherited: 0xb0)
struct UTigerChallengeQuestItemPickup : UTigerChallenge {
	struct TSoftObjectPtr<struct ATigerInteractiveQuestItem> QuestItem; // 0xb0(0x28)
	char pad_D8[0x8]; // 0xd8(0x08)

	void HandleQuestItemCollected(struct TSoftObjectPtr<struct ATigerInteractiveQuestItem> InQuestItem); // Function Tiger.TigerChallengeQuestItemPickup.HandleQuestItemCollected // (Final|Native|Private) // @ game+0x1254c40
};

// Class Tiger.TigerChallengeReachLevel
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeReachLevel : UTigerChallenge {
	int32_t LevelToReach; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)

	void OnTigerPlayerLevelChanged(int32_t InCurrentLevel, int32_t InOldLevel); // Function Tiger.TigerChallengeReachLevel.OnTigerPlayerLevelChanged // (Final|Native|Private) // @ game+0x1256040
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeReachLevel.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x12548e0
};

// Class Tiger.TigerChallengeRevive
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeRevive : UTigerChallenge {
	char pad_B0[0x8]; // 0xb0(0x08)

	void OnRevivedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeRevive.OnRevivedPlayerEvent // (Final|Native|Private) // @ game+0x1255ea0
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeRevive.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x1254970
};

// Class Tiger.TigerChallengeSurviveTime
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeSurviveTime : UTigerChallenge {
	char pad_B0[0x8]; // 0xb0(0x08)

	void HandlePlayerPlacement(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeSurviveTime.HandlePlayerPlacement // (Final|Native|Private) // @ game+0x1254b20
};

// Class Tiger.TigerChallengeTopPlayer
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeTopPlayer : UTigerChallenge {
	int32_t TopPlacementRequirement; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)

	void HandlePlayerPlacement(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeTopPlayer.HandlePlayerPlacement // (Final|Native|Private) // @ game+0x1254bb0
};

// Class Tiger.TigerChallengeTravelDistance
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerChallengeTravelDistance : UTigerChallenge {
	char pad_B0[0x8]; // 0xb0(0x08)

	void OnHandlePlayerPlacement(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeTravelDistance.OnHandlePlayerPlacement // (Final|Native|Private) // @ game+0x1255cd0
};

// Class Tiger.TigerChallengeTypeDatabase
// Size: 0x48 (Inherited: 0x28)
struct UTigerChallengeTypeDatabase : UObject {
	struct TArray<struct UTigerChallengeCollection*> SeasonalChallengeCollections; // 0x28(0x10)
	struct TArray<struct UTigerChallengeCollection*> DailyChallengeCollections; // 0x38(0x10)

	struct TArray<struct UTigerChallengeCollection*> GetAllChallengeCollections(); // Function Tiger.TigerChallengeTypeDatabase.GetAllChallengeCollections // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1254420
};

// Class Tiger.TigerChallengeUseDiscipline
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerChallengeUseDiscipline : UTigerChallenge {
	struct FTigerChallengeRequirementDisciplineSlot DisciplineSlotRequirement; // 0xb0(0x10)
	char pad_C0[0x8]; // 0xc0(0x08)

	void OnDisciplineActivated(enum class ETigerDisciplinesEnum InDisciplineActivated); // Function Tiger.TigerChallengeUseDiscipline.OnDisciplineActivated // (Final|Native|Private) // @ game+0x1255c50
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeUseDiscipline.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x1254a00
};

// Class Tiger.TigerChallengeUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerChallengeUtilityBFL : UBlueprintFunctionLibrary {

	bool HasRequirement_WeaponType(struct FTigerChallengeRequirementWeaponType InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_WeaponType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1254e90
	bool HasRequirement_GameMode(struct FTigerChallengeRequirementGameMode InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_GameMode // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1254df0
	bool HasRequirement_DisciplineSlot(struct FTigerChallengeRequirementDisciplineSlot InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_DisciplineSlot // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1254d50
	bool HasRequirement_Clan(struct FTigerChallengeRequirementClan InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_Clan // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1254d50
};

// Class Tiger.TigerChallengeVisitLocation
// Size: 0xe0 (Inherited: 0xb0)
struct UTigerChallengeVisitLocation : UTigerChallenge {
	struct TSoftObjectPtr<struct ATigerVisitLocationTriggerVolume> TriggerVolume; // 0xb0(0x28)
	char pad_D8[0x8]; // 0xd8(0x08)

	void HandleLocationVisited(); // Function Tiger.TigerChallengeVisitLocation.HandleLocationVisited // (Final|Native|Private) // @ game+0x1254760
};

// Class Tiger.TigerCharacterCardBase
// Size: 0x288 (Inherited: 0x280)
struct UTigerCharacterCardBase : UTigerWidget {
	struct TWeakObjectPtr<struct ATigerPlayerState> RepresentedPlayer; // 0x280(0x08)

	void OnInit(struct ATigerPlayerState* InRepresentedPlayer); // Function Tiger.TigerCharacterCardBase.OnInit // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Init(struct ATigerPlayerState* InRepresentedPlayer); // Function Tiger.TigerCharacterCardBase.Init // (Final|Native|Private|BlueprintCallable) // @ game+0x125c4a0
	struct ATigerPlayerState* GetRepresentedPlayer(); // Function Tiger.TigerCharacterCardBase.GetRepresentedPlayer // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c470
	void BuildCharacterCard(); // Function Tiger.TigerCharacterCardBase.BuildCharacterCard // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerCharacterCustomizablePreviewThumbnailUI
// Size: 0x2f0 (Inherited: 0x280)
struct UTigerCharacterCustomizablePreviewThumbnailUI : UTigerWidget {
	struct ATigerThumbnailActor* ThumbnailActorType; // 0x280(0x08)
	bool bIsRealtime; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct UMaterialInterface* PostRenderMaterial; // 0x290(0x08)
	char pad_298[0x40]; // 0x298(0x40)
	struct ATigerThumbnailActor* ThumbnailActor; // 0x2d8(0x08)
	float FOV; // 0x2e0(0x04)
	char pad_2E4[0xc]; // 0x2e4(0x0c)

	void TickViewport(float InDeltaTime); // Function Tiger.TigerCharacterCustomizablePreviewThumbnailUI.TickViewport // (Final|Native|Public|BlueprintCallable) // @ game+0x125c530
};

// Class Tiger.TigerInventoryItemBase
// Size: 0x110 (Inherited: 0x28)
struct UTigerInventoryItemBase : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FText UiName; // 0x30(0x18)
	struct FText UIDescription; // 0x48(0x18)
	struct FText TemporaryVs2CategoryName; // 0x60(0x18)
	struct TSoftObjectPtr<struct UTexture2D> UITexture; // 0x78(0x28)
	struct TSoftObjectPtr<struct UTexture2D> UiBackgroundTexture; // 0xa0(0x28)
	struct FLinearColor TintColor; // 0xc8(0x10)
	bool bForceToFrontWhenSorted; // 0xd8(0x01)
	enum class ETigerItemRarity Rarity; // 0xd9(0x01)
	bool bIsAvailableForEveryone; // 0xda(0x01)
	char pad_DB[0x5]; // 0xdb(0x05)
	struct TArray<struct FTigerInventoryItemOwnerType> PossibleOwners; // 0xe0(0x10)
	struct FString CameraTag; // 0xf0(0x10)
	int32_t PersistentID; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	uint64_t TelemetryID; // 0x108(0x08)

	void SetUIMaterialParameters(struct UMaterialInstanceDynamic* InMaterial); // Function Tiger.TigerInventoryItemBase.SetUIMaterialParameters // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	struct UMaterialInterface* GetUiMaterialOverride(); // Function Tiger.TigerInventoryItemBase.GetUiMaterialOverride // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	enum class ETigerPersistentStoreCategory GetStoreCategory(); // Function Tiger.TigerInventoryItemBase.GetStoreCategory // (Native|Public|BlueprintCallable|Const) // @ game+0x12eec00
	bool GetPrimaryOwner(enum class ETigerClan OutClan, enum class ETigerPowerKitType OutArchetype, enum class ETigerGender OutBodyType); // Function Tiger.TigerInventoryItemBase.GetPrimaryOwner // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12ee960
	struct TArray<enum class ETigerClan> GetPossibleOwningClans(); // Function Tiger.TigerInventoryItemBase.GetPossibleOwningClans // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x12ee8e0
	struct TArray<enum class ETigerGender> GetPossibleOwningBodyTypes(); // Function Tiger.TigerInventoryItemBase.GetPossibleOwningBodyTypes // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x12ee860
	struct TArray<enum class ETigerPowerKitType> GetPossibleOwningArchetypes(); // Function Tiger.TigerInventoryItemBase.GetPossibleOwningArchetypes // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x12ee7e0
	int32_t GetPersistentId(); // Function Tiger.TigerInventoryItemBase.GetPersistentId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee6b0
	bool CanBeOwnedByBodyWithArchetypeRestriction(enum class ETigerGender InBodyType, enum class ETigerPowerKitType InPowerKit); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByBodyWithArchetypeRestriction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ecb70
	bool CanBeOwnedByBodyType(enum class ETigerGender BodyType); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByBodyType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ecae0
	bool CanBeOwnedByArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eca50
	bool CanBeOwnedByAnyArchetypeOfClan(struct UTigerPlayerClanData* InClan, enum class ETigerGender BodyType); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByAnyArchetypeOfClan // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ec980
};

// Class Tiger.TigerCharacterOutfitConfiguration
// Size: 0x2a0 (Inherited: 0x110)
struct UTigerCharacterOutfitConfiguration : UTigerInventoryItemBase {
	struct FTigerLodSplitMesh SplitMesh; // 0x110(0x78)
	struct TSoftObjectPtr<struct USkeletalMesh> AdditionalMesh; // 0x188(0x28)
	struct TArray<struct FTigerCharacterOutfitHoodieVariation> HoodieVariations; // 0x1b0(0x10)
	struct TMap<int32_t, struct TSoftObjectPtr<struct UMaterialInterface>> Materials; // 0x1c0(0x50)
	struct FTigerCharacterHolsteredWeaponTransforms HolsteredWeaponsTransforms; // 0x210(0x60)
	bool bHoodieUpOnThumbnail; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)
	struct TSoftObjectPtr<struct USkeletalMesh> Mesh; // 0x278(0x28)
};

// Class Tiger.TigerCharacterCombinedItemConfiguration
// Size: 0x148 (Inherited: 0x110)
struct UTigerCharacterCombinedItemConfiguration : UTigerInventoryItemBase {
	SoftClassProperty CombinedItemClassType; // 0x110(0x28)
	struct TArray<struct FTigerInventoryCombinedItemValue> Items; // 0x138(0x10)

	struct UTigerInventoryItemBase* GetItemFromCombinedContainer(enum class ETigerGender InBodyType, enum class ETigerPowerKitType InPowerKit, enum class ETigerClan InClan); // Function Tiger.TigerCharacterCombinedItemConfiguration.GetItemFromCombinedContainer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c350
};

// Class Tiger.TigerCharacterSkinToneCustomization
// Size: 0x160 (Inherited: 0x110)
struct UTigerCharacterSkinToneCustomization : UTigerInventoryItemBase {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
	struct FLinearColor LightColor; // 0x148(0x10)
	float LightIntensity; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)
};

// Class Tiger.TigerCharacterBodyTypeCustomization
// Size: 0x138 (Inherited: 0x110)
struct UTigerCharacterBodyTypeCustomization : UTigerInventoryItemBase {
	struct TSoftObjectPtr<struct UTigerCharacterPreset> CharacterPreset; // 0x110(0x28)
};

// Class Tiger.TigerCharacterPartOfHeadCustomization
// Size: 0x110 (Inherited: 0x110)
struct UTigerCharacterPartOfHeadCustomization : UTigerInventoryItemBase {
};

// Class Tiger.TigerPlayerCardCustomization
// Size: 0x110 (Inherited: 0x110)
struct UTigerPlayerCardCustomization : UTigerInventoryItemBase {
};

// Class Tiger.TigerCharacterHeadConfiguration
// Size: 0x260 (Inherited: 0x110)
struct UTigerCharacterHeadConfiguration : UTigerCharacterPartOfHeadCustomization {
	struct FTigerLodSplitMesh SplitMesh; // 0x110(0x78)
	struct TSoftObjectPtr<struct UPoseAsset> FacePostAsset; // 0x188(0x28)
	struct TSoftObjectPtr<struct UAnimSequence> FacePoseSourceAnimation; // 0x1b0(0x28)
	struct TArray<struct TSoftObjectPtr<struct UMaterialInterface>> BodySkinMaterials; // 0x1d8(0x10)
	struct TArray<SoftClassProperty> SkinTones; // 0x1e8(0x10)
	struct FName HeadgearMaleSocket; // 0x1f8(0x08)
	struct FName HeadgearFemaleSocket; // 0x200(0x08)
	struct FName HeadgearOffsetSocketName; // 0x208(0x08)
	struct FName HeadgearOffsetLocator; // 0x210(0x08)
	struct FTigerCharacterHeadHeadgearOffset HeadgearOffset; // 0x218(0x18)
	struct FName EyewearSocket; // 0x230(0x08)
	struct TSoftObjectPtr<struct USkeletalMesh> Mesh; // 0x238(0x28)

	void SetPoseableBeard(struct UTigerCharacterBeardCustomization* InBeard, struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString> InFilter); // Function Tiger.TigerCharacterHeadConfiguration.SetPoseableBeard // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x16c0340
	void SetPiercingSlotLocationAndRotation(struct UTigerCharacterMeshManager* InMeshManager, struct FName InName, struct FVector InLocation, struct FRotator InRotation); // Function Tiger.TigerCharacterHeadConfiguration.SetPiercingSlotLocationAndRotation // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void SetPiercings(struct UTigerCharacterPiercingSetCustomization* InPiercingSet, struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString> InFilter); // Function Tiger.TigerCharacterHeadConfiguration.SetPiercings // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x16c0340
	void SetEyewearOffset(struct UTigerCharacterMeshManager* MeshManager); // Function Tiger.TigerCharacterHeadConfiguration.SetEyewearOffset // (Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
	void GetPiercingSlots(struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString> InFilter, struct TMap<struct FName, struct FTigerCharacterHeadPiercingSocket> OutSlots); // Function Tiger.TigerCharacterHeadConfiguration.GetPiercingSlots // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x16c0340
	void DrawDebugPiercingSlots(struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString> InFilter); // Function Tiger.TigerCharacterHeadConfiguration.DrawDebugPiercingSlots // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerCharacterFacePaintCustomization
// Size: 0x148 (Inherited: 0x110)
struct UTigerCharacterFacePaintCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
};

// Class Tiger.TigerCharacterHeadgearCustomization
// Size: 0x180 (Inherited: 0x110)
struct UTigerCharacterHeadgearCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
	struct TSoftObjectPtr<struct USkeletalMesh> Mesh; // 0x148(0x28)
	struct UTigerAnimationFilter* AnimationFilter; // 0x170(0x08)
	bool bHideBeard; // 0x178(0x01)
	char pad_179[0x7]; // 0x179(0x07)

	void GatherPiercingFilter(struct TSet<struct FString> InOutPiercingFilter); // Function Tiger.TigerCharacterHeadgearCustomization.GatherPiercingFilter // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerCharacterEyewearCustomization
// Size: 0x170 (Inherited: 0x110)
struct UTigerCharacterEyewearCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
	struct TSoftObjectPtr<struct USkeletalMesh> Mesh; // 0x148(0x28)

	void GatherPiercingFilter(struct TSet<struct FString> InOutPiercingFilter); // Function Tiger.TigerCharacterEyewearCustomization.GatherPiercingFilter // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerCharacterHairStyleCustomization
// Size: 0x200 (Inherited: 0x110)
struct UTigerCharacterHairStyleCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
	struct FTigerLodSplitMesh SplitMesh; // 0x148(0x78)
	struct UAnimInstance* Animation; // 0x1c0(0x08)
	struct FName SocketAttachments[0x2]; // 0x1c8(0x10)
	struct TSoftObjectPtr<struct USkeletalMesh> Mesh; // 0x1d8(0x28)
};

// Class Tiger.TigerCharacterHairColorCustomization
// Size: 0x148 (Inherited: 0x110)
struct UTigerCharacterHairColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
};

// Class Tiger.TigerCharacterEyeColorCustomization
// Size: 0x148 (Inherited: 0x110)
struct UTigerCharacterEyeColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
};

// Class Tiger.TigerCharacterEyebrowCustomization
// Size: 0x148 (Inherited: 0x110)
struct UTigerCharacterEyebrowCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
};

// Class Tiger.TigerCharacterEyebrowColorCustomization
// Size: 0x148 (Inherited: 0x110)
struct UTigerCharacterEyebrowColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
};

// Class Tiger.TigerCharacterBeardCustomization
// Size: 0x148 (Inherited: 0x110)
struct UTigerCharacterBeardCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
};

// Class Tiger.TigerCharacterBeardColorCustomization
// Size: 0x148 (Inherited: 0x110)
struct UTigerCharacterBeardColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
};

// Class Tiger.TigerCharacterTattooCustomization
// Size: 0x148 (Inherited: 0x110)
struct UTigerCharacterTattooCustomization : UTigerInventoryItemBase {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x110(0x38)
};

// Class Tiger.TigerCharacterPiercingSetCustomization
// Size: 0x110 (Inherited: 0x110)
struct UTigerCharacterPiercingSetCustomization : UTigerCharacterPartOfHeadCustomization {
};

// Class Tiger.TigerCharacterIconCustomization
// Size: 0x138 (Inherited: 0x110)
struct UTigerCharacterIconCustomization : UTigerPlayerCardCustomization {
	struct TSoftObjectPtr<struct UTexture2D> CharacterIcon; // 0x110(0x28)
};

// Class Tiger.TigerCharacterCardShapeCustomization
// Size: 0x138 (Inherited: 0x110)
struct UTigerCharacterCardShapeCustomization : UTigerPlayerCardCustomization {
	struct TSoftObjectPtr<struct UTexture2D> CardShapeMask; // 0x110(0x28)
};

// Class Tiger.TigerCharacterCardBackgroundCustomization
// Size: 0x138 (Inherited: 0x110)
struct UTigerCharacterCardBackgroundCustomization : UTigerPlayerCardCustomization {
	struct TSoftObjectPtr<struct UTexture2D> CardBackground; // 0x110(0x28)
};

// Class Tiger.TigerCharacterEmoteCustomization
// Size: 0x120 (Inherited: 0x110)
struct UTigerCharacterEmoteCustomization : UTigerInventoryItemBase {
	struct UAnimMontage* EmoteMontage; // 0x110(0x08)
	bool bStopsMovement; // 0x118(0x01)
	char pad_119[0x3]; // 0x119(0x03)
	float ThumbnailPoseTime; // 0x11c(0x04)
};

// Class Tiger.TigerClanCustomizationOptions
// Size: 0x328 (Inherited: 0x28)
struct UTigerClanCustomizationOptions : UObject {
	struct TArray<struct FTigerCharacterCustomizationOutfitData> Outfits; // 0x28(0x10)
	struct TArray<struct FTigerCharacterCustomizationHeadData> Heads; // 0x38(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Hairs; // 0x48(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> HairColors; // 0x58(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> EyeColors; // 0x68(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Tattoos; // 0x78(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> FacePaints; // 0x88(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> PiercingSets; // 0x98(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Headgears; // 0xa8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Eyewears; // 0xb8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Eyebrows; // 0xc8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> EyebrowColors; // 0xd8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Beards; // 0xe8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> BeardColors; // 0xf8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> CharacterIcons; // 0x108(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> CharacterCardShapes; // 0x118(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> CharacterCardTextures; // 0x128(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Emotes; // 0x138(0x10)
	struct TMap<enum class ETigerCustomizationType, struct FTigerCombinedItemCustomizations> CombinedItems; // 0x148(0x50)
	int32_t PersistentIdTicker; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct TMap<int32_t, SoftClassProperty> IdToItemLut; // 0x1a0(0x50)
	struct TMap<SoftClassProperty, int32_t> ItemToIdLut; // 0x1f0(0x50)
	struct TMap<int32_t, int32_t> IdToIndexLut; // 0x240(0x50)
	struct FTigerCharacterCardData DefaultPlayerCard; // 0x290(0x98)
};

// Class Tiger.TigerCharacterEffect
// Size: 0x28 (Inherited: 0x28)
struct UTigerCharacterEffect : UObject {

	void ApplyWithTarget(struct ATigerCharacter* Character, struct ATigerCharacter* Target); // Function Tiger.TigerCharacterEffect.ApplyWithTarget // (BlueprintCosmetic|Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
	void ApplyWithSocket(struct ATigerCharacter* Character, struct FName SocketName); // Function Tiger.TigerCharacterEffect.ApplyWithSocket // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Apply(struct ATigerCharacter* Character); // Function Tiger.TigerCharacterEffect.Apply // (BlueprintCosmetic|Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerCharacterMenuUI
// Size: 0x2b8 (Inherited: 0x2b8)
struct UTigerCharacterMenuUI : UTigerIngameSubmenuWidget {

	void OnDisciplinesUpdated(); // Function Tiger.TigerCharacterMenuUI.OnDisciplinesUpdated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerCharacterMeshManager
// Size: 0x1e0 (Inherited: 0xb0)
struct UTigerCharacterMeshManager : UActorComponent {
	struct TArray<struct FTigerStaticMeshData> StaticMeshes; // 0xb0(0x10)
	struct TArray<struct FTigerPoseableMeshData> PoseableMeshes; // 0xc0(0x10)
	struct FTigerCharacterMeshData Mesh[0xb]; // 0xd0(0x108)
	struct UStaticPiercingPhysics* StaticPiercingPhysics; // 0x1d8(0x08)

	void SetVisibilityOnMeshes(bool bInNewVisibility); // Function Tiger.TigerCharacterMeshManager.SetVisibilityOnMeshes // (Native|Public|BlueprintCallable) // @ game+0x1260430
	void SetVisibilityOnMesh(enum class ETigerCharacterMeshPart InMeshType, bool bInNewVisibility); // Function Tiger.TigerCharacterMeshManager.SetVisibilityOnMesh // (Native|Public|BlueprintCallable) // @ game+0x1260350
	void SetVisibilityOnDynamicMesh(enum class ETigerCharacterDynamicMeshType InMeshType, bool bInNewVisibility); // Function Tiger.TigerCharacterMeshManager.SetVisibilityOnDynamicMesh // (Native|Public|BlueprintCallable) // @ game+0x1260270
	void SetVisibilityAllowanceOnMeshes(bool bInNewVisibilityIsAllowed); // Function Tiger.TigerCharacterMeshManager.SetVisibilityAllowanceOnMeshes // (Native|Public|BlueprintCallable) // @ game+0x12601e0
	void SetVisibilityAllowanceOnMesh(enum class ETigerCharacterMeshPart InMeshType, bool bInNewVisibilityIsAllowed); // Function Tiger.TigerCharacterMeshManager.SetVisibilityAllowanceOnMesh // (Native|Public|BlueprintCallable) // @ game+0x1260100
	void SetVisibilityAllowanceOnDynamicMesh(enum class ETigerCharacterDynamicMeshType InMeshType, bool bInNewVisibilityIsAllowed); // Function Tiger.TigerCharacterMeshManager.SetVisibilityAllowanceOnDynamicMesh // (Native|Public|BlueprintCallable) // @ game+0x1260020
	void SetSkeletalMesh(enum class ETigerCharacterMeshPart Part, struct USkeletalMesh* Mesh, bool bForceClothNextUpdateTeleport); // Function Tiger.TigerCharacterMeshManager.SetSkeletalMesh // (Native|Public|BlueprintCallable) // @ game+0x125ff10
	void SetScalarParameterValueOnMeshes(struct FName InParameterName, float InParameterValue); // Function Tiger.TigerCharacterMeshManager.SetScalarParameterValueOnMeshes // (Native|Public|BlueprintCallable) // @ game+0x125fe30
	void SetMaterial(enum class ETigerCharacterMeshPart Part, int32_t MaterialIndex, struct UMaterialInterface* Material); // Function Tiger.TigerCharacterMeshManager.SetMaterial // (Native|Public|BlueprintCallable) // @ game+0x125fd20
	void RemoveMeshComponent(struct UStaticMeshComponent* InMesh); // Function Tiger.TigerCharacterMeshManager.RemoveMeshComponent // (Native|Public|BlueprintCallable) // @ game+0x125fa40
	void RegisterMeshComponent(enum class ETigerCharacterMeshPart Part, struct USkeletalMeshComponent* MeshComponent); // Function Tiger.TigerCharacterMeshManager.RegisterMeshComponent // (Native|Public|BlueprintCallable) // @ game+0x125f970
	struct USkeletalMeshComponent* GetSkeletalMeshComponent(enum class ETigerCharacterMeshPart Part); // Function Tiger.TigerCharacterMeshManager.GetSkeletalMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f0e0
	struct TArray<struct UMeshComponent*> GetRegisteredMeshes(); // Function Tiger.TigerCharacterMeshManager.GetRegisteredMeshes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f060
	void AddPoseableMesh(struct USkeletalMesh* InMesh, struct UTigerCharacterPoseableMeshAnimInstance* InAnimClass, enum class ETigerCharacterDynamicMeshType InType, struct TArray<struct FTigerCharacterPoseableMeshBoneSetupData> InPoseableMeshSetupData); // Function Tiger.TigerCharacterMeshManager.AddPoseableMesh // (Native|Public|BlueprintCallable) // @ game+0x125eb60
	void AddPiercing(struct UStaticMesh* InPiercingMesh, struct FName InFaceSlotName, struct FName InPiercingSlotName, struct FVector InLocalLocation, struct FRotator InLocalRotation); // Function Tiger.TigerCharacterMeshManager.AddPiercing // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x125e9b0
	void AddMeshComponent(struct UStaticMeshComponent* InMesh); // Function Tiger.TigerCharacterMeshManager.AddMeshComponent // (Native|Public|BlueprintCallable) // @ game+0x125e920
};

// Class Tiger.TigerCharacterMovementComponent
// Size: 0xd30 (Inherited: 0xb00)
struct UTigerCharacterMovementComponent : UCharacterMovementComponent {
	struct UTigerTraversalFiniteStateMachine* FiniteStateMachine; // 0xb00(0x08)
	char pad_B08[0x18]; // 0xb08(0x18)
	float MaxSprintSpeed; // 0xb20(0x04)
	float SprintSpeedMultiplier; // 0xb24(0x04)
	char pad_B28[0x4]; // 0xb28(0x04)
	float ForwardAngleThreshold; // 0xb2c(0x04)
	char pad_B30[0x8]; // 0xb30(0x08)
	struct UTigerSprintConfig* SprintConfig; // 0xb38(0x08)
	float MaxJumpHeight; // 0xb40(0x04)
	bool bPreventFallingSlide; // 0xb44(0x01)
	char pad_B45[0x3]; // 0xb45(0x03)
	float DownedMaxSpeed; // 0xb48(0x04)
	char pad_B4C[0x4]; // 0xb4c(0x04)
	struct FMulticastInlineDelegate OnDodge; // 0xb50(0x10)
	float WallClimbCombineThresholdSquared; // 0xb60(0x04)
	char pad_B64[0x4]; // 0xb64(0x04)
	struct UTigerImpendingCollisionCalculator* ImpendingCollisionCalculator; // 0xb68(0x08)
	float TimeUntilCollision; // 0xb70(0x04)
	float AngleToImpendingCollisionWithClimbableSurface; // 0xb74(0x04)
	float CharacterAngleToImpendingCollisionWithClimbableSurface; // 0xb78(0x04)
	bool bAboutToCollideWithClimbableSurface; // 0xb7c(0x01)
	char pad_B7D[0x17]; // 0xb7d(0x17)
	uint32_t ElysiumBlockedTraversalStates; // 0xb94(0x04)
	bool bEnableRestrictedElysiumMobility; // 0xb98(0x01)
	bool bIsInLedgeGrab; // 0xb99(0x01)
	bool bContinueToUseClimbCameraDuringLedgeGrab; // 0xb9a(0x01)
	bool bWasLastLandingHard; // 0xb9b(0x01)
	char pad_B9C[0x8]; // 0xb9c(0x08)
	struct FName RightHandBoneName; // 0xba4(0x08)
	struct FName LeftHandBoneName; // 0xbac(0x08)
	struct FName RightFootBoneName; // 0xbb4(0x08)
	struct FName LeftFootBoneName; // 0xbbc(0x08)
	float JumpCapsuleHeightReduction; // 0xbc4(0x04)
	char pad_BC8[0x48]; // 0xbc8(0x48)
	struct FTigerDeltaCorrectionData CurrentDeltaCorrectedAnimationData; // 0xc10(0x40)
	bool bUseCustomCurvesExclusivelyForInclineSpeedModification; // 0xc50(0x01)
	char pad_C51[0x7]; // 0xc51(0x07)
	struct UCurveFloat* InclineMovementMultiplierCurve; // 0xc58(0x08)
	struct UCurveFloat* DeclineMovementMultiplierCurve; // 0xc60(0x08)
	struct UCurveFloat* BackwardsMovementMultiplierCurve; // 0xc68(0x08)
	float BackwardsAngleThreshold; // 0xc70(0x04)
	char pad_C74[0x14]; // 0xc74(0x14)
	struct UTigerSprintConfig* SprintConfigClass; // 0xc88(0x08)
	struct UCurveFloat* AimGlideProgressCurve; // 0xc90(0x08)
	struct UCurveFloat* AimGlideDragOverVelocityCurve; // 0xc98(0x08)
	struct UCurveFloat* AimGlideLateralDragCurve; // 0xca0(0x08)
	struct UCurveFloat* AimGlideAirControlCurve; // 0xca8(0x08)
	bool bResetAimGlideOnDoubleJump; // 0xcb0(0x01)
	char pad_CB1[0x7]; // 0xcb1(0x07)
	struct UAnimMontage* PendingPreMovementMontage; // 0xcb8(0x08)
	char pad_CC0[0x3c]; // 0xcc0(0x3c)
	struct FVector LastWallJumpedNormal; // 0xcfc(0x0c)
	char pad_D08[0x28]; // 0xd08(0x28)

	void TigerDelegateOnDodged__DelegateSignature(struct FVector RelativeLaunchDirection); // DelegateFunction Tiger.TigerCharacterMovementComponent.TigerDelegateOnDodged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasDefaults) // @ game+0x16c0340
	bool ShouldUseClimbingCamera(); // Function Tiger.TigerCharacterMovementComponent.ShouldUseClimbingCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1260550
	bool ShouldRestrictMobility(enum class ETigerTraversalState InPotentialActionToRestrict); // Function Tiger.TigerCharacterMovementComponent.ShouldRestrictMobility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12604c0
	void Server_SetDeltaCorrectionEndPoint(struct FVector EndPosition); // Function Tiger.TigerCharacterMovementComponent.Server_SetDeltaCorrectionEndPoint // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x125fad0
	void PlayDeltaCorrectedAnimation(struct UAnimMontage* AnimMontageToCorrect, struct FVector PositionToCorrectTo, bool bShouldAdjustAnimationPlayRate); // Function Tiger.TigerCharacterMovementComponent.PlayDeltaCorrectedAnimation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x125f850
	void Multicast_WallJump(); // Function Tiger.TigerCharacterMovementComponent.Multicast_WallJump // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x125f830
	void Multicast_UpdateWallJump(enum class ESharkFourWayDirection InDesiredWallJumpDirection, char InDesiredWallJumpAnimState, struct FVector InWallNormal, struct FVector InWallJumpVelocity); // Function Tiger.TigerCharacterMovementComponent.Multicast_UpdateWallJump // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x125f6a0
	void Multicast_StopClimb(); // Function Tiger.TigerCharacterMovementComponent.Multicast_StopClimb // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x125f680
	void Multicast_ReplicateState(enum class ETigerTraversalState InTraversalStateType, enum class ETigerTraversalTransitionAction InAction); // Function Tiger.TigerCharacterMovementComponent.Multicast_ReplicateState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x125f5b0
	void Multicast_FinishWallJump(); // Function Tiger.TigerCharacterMovementComponent.Multicast_FinishWallJump // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x125f590
	void Multicast_BeginClimb(struct AActor* InTargetClimbObject, struct FVector InClimbStartLocation); // Function Tiger.TigerCharacterMovementComponent.Multicast_BeginClimb // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x125f4b0
	void Multicast_AirDash(enum class ESharkFourWayDirection InDashDirection, float InAirDashAngleInDegrees); // Function Tiger.TigerCharacterMovementComponent.Multicast_AirDash // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x125f3e0
	bool IsSprintingAtFullSpeed(); // Function Tiger.TigerCharacterMovementComponent.IsSprintingAtFullSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f3b0
	bool IsSprinting(); // Function Tiger.TigerCharacterMovementComponent.IsSprinting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f380
	bool IsSliding(); // Function Tiger.TigerCharacterMovementComponent.IsSliding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f350
	bool IsSlideJumping(); // Function Tiger.TigerCharacterMovementComponent.IsSlideJumping // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f320
	bool IsInWallJump(); // Function Tiger.TigerCharacterMovementComponent.IsInWallJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f2f0
	bool IsInWallHang(); // Function Tiger.TigerCharacterMovementComponent.IsInWallHang // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f2c0
	bool IsInWallGrind(); // Function Tiger.TigerCharacterMovementComponent.IsInWallGrind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f290
	bool IsInLowVault(); // Function Tiger.TigerCharacterMovementComponent.IsInLowVault // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f260
	bool IsInLedgeGrab(); // Function Tiger.TigerCharacterMovementComponent.IsInLedgeGrab // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f230
	bool IsInAirDash(); // Function Tiger.TigerCharacterMovementComponent.IsInAirDash // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f200
	bool IsAimGliding(); // Function Tiger.TigerCharacterMovementComponent.IsAimGliding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f1d0
	float GetTimeSinceStartedMovingFreely(); // Function Tiger.TigerCharacterMovementComponent.GetTimeSinceStartedMovingFreely // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f1a0
	float GetSlideSurfacePitch(); // Function Tiger.TigerCharacterMovementComponent.GetSlideSurfacePitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f170
	float GetLastDodgeTime(); // Function Tiger.TigerCharacterMovementComponent.GetLastDodgeTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb33fc0
	float GetFloorPitch(); // Function Tiger.TigerCharacterMovementComponent.GetFloorPitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f000
	float GetAimGlideStrength(); // Function Tiger.TigerCharacterMovementComponent.GetAimGlideStrength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125efd0
	void FreezeMovement(); // Function Tiger.TigerCharacterMovementComponent.FreezeMovement // (Final|Native|Public|BlueprintCallable) // @ game+0x125efb0
	void DoForcedMove(struct FVector TargetLocation, float TravelTime, bool bInAir, float ExitVelocityScale, bool bAllowPlayerBreak, bool bAllowCancelOnArrival); // Function Tiger.TigerCharacterMovementComponent.DoForcedMove // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x125ed90
	void ApplyKnockback(struct FVector InVelocity); // Function Tiger.TigerCharacterMovementComponent.ApplyKnockback // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x125ed00
};

// Class Tiger.TigerSceneRenderItemWidget
// Size: 0x2f0 (Inherited: 0x280)
struct UTigerSceneRenderItemWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnItemSpawned; // 0x280(0x10)
	struct FVector ItemSpawnLocation; // 0x290(0x0c)
	char pad_29C[0x4]; // 0x29c(0x04)
	SoftClassProperty DefaultItemClass; // 0x2a0(0x28)
	struct UMaterialInterface* RenderTargetMaterial; // 0x2c8(0x08)
	bool bOverrideItemRenderTarget; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct AActor* SpawnedItem; // 0x2d8(0x08)
	char pad_2E0[0x10]; // 0x2e0(0x10)

	void SpawnItem(struct AActor* InActorClass); // Function Tiger.TigerSceneRenderItemWidget.SpawnItem // (Final|Native|Protected|BlueprintCallable) // @ game+0x132f340
	void OverrideRenderTextureTarget(struct AActor* InActor); // Function Tiger.TigerSceneRenderItemWidget.OverrideRenderTextureTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x132f090
	void OnItemSpawned__DelegateSignature(struct AActor* InSpawnedItem); // DelegateFunction Tiger.TigerSceneRenderItemWidget.OnItemSpawned__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	struct UTextureRenderTarget2D* GetRenderTextureFromMaterial(); // Function Tiger.TigerSceneRenderItemWidget.GetRenderTextureFromMaterial // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x132f020
};

// Class Tiger.TigerCharacterPaperDollWidget
// Size: 0x380 (Inherited: 0x2f0)
struct UTigerCharacterPaperDollWidget : UTigerSceneRenderItemWidget {
	struct FTigerCharacterAppearance Apperance; // 0x2f0(0x80)
	struct UTigerPlayerClanData* ClanData; // 0x370(0x08)
	bool bUseSharedPaperDoll; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)

	void SetFromApperance(struct FTigerCharacterAppearance InApperance, struct UTigerPlayerClanData* InClanData, struct FDelegate InDelegate); // Function Tiger.TigerCharacterPaperDollWidget.SetFromApperance // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x125fba0
	void OnCharacterAppearanceUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerCharacterPaperDollWidget.OnCharacterAppearanceUpdated__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	struct ATigerPaperDoll* GetPaperDoll(); // Function Tiger.TigerCharacterPaperDollWidget.GetPaperDoll // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x125f030
};

// Class Tiger.TigerPhysicalInteractionAnimationAsset
// Size: 0xf0 (Inherited: 0x30)
struct UTigerPhysicalInteractionAnimationAsset : UDataAsset {
	struct FTigerPhysicalInteractionMontages FeedingDataByVampireGender[0x2]; // 0x30(0xc0)
};

// Class Tiger.TigerPhysicalInteraction
// Size: 0x40 (Inherited: 0x28)
struct UTigerPhysicalInteraction : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TWeakObjectPtr<struct ATigerPlayer> OtherPlayer; // 0x38(0x08)
};

// Class Tiger.TigerPhysicalInteractionDiablerize
// Size: 0x90 (Inherited: 0x40)
struct UTigerPhysicalInteractionDiablerize : UTigerPhysicalInteraction {
	float DiablerizeTime; // 0x40(0x04)
	bool bInstantInterrupt; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
	struct UTigerPhysicalInteractionAnimationAsset* DiablerizeAnimationAsset; // 0x48(0x08)
	char pad_50[0x40]; // 0x50(0x40)
};

// Class Tiger.TigerPhysicalInteractionRevive
// Size: 0x48 (Inherited: 0x40)
struct UTigerPhysicalInteractionRevive : UTigerPhysicalInteraction {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerCharacterPoseableMeshAnimInstance
// Size: 0x310 (Inherited: 0x2c0)
struct UTigerCharacterPoseableMeshAnimInstance : UAnimInstance {
	struct UTigerCharacterMeshManager* MeshManager; // 0x2b8(0x08)
	struct TMap<struct FName, struct FTigerCharacterPoseableMeshBoneData> NameToDataLut; // 0x2c0(0x50)

	void GetBoneOffsetTransform(struct FName InName, struct FVector OutLocation, struct FRotator OutRotation); // Function Tiger.TigerCharacterPoseableMeshAnimInstance.GetBoneOffsetTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1263410
};

// Class Tiger.TigerCharacterPoseableMesh
// Size: 0x38 (Inherited: 0x28)
struct UTigerCharacterPoseableMesh : UObject {
	struct USkeletalMesh* Mesh; // 0x28(0x08)
	struct UTigerCharacterPoseableMeshAnimInstance* AnimClass; // 0x30(0x08)
};

// Class Tiger.TigerCharCustomizationComponent
// Size: 0x108 (Inherited: 0xb0)
struct UTigerCharCustomizationComponent : UActorComponent {
	struct FMulticastInlineDelegate OnAppearanceChanged; // 0xb0(0x10)
	char pad_C0[0x10]; // 0xc0(0x10)
	struct UTigerCharacterMeshManager* MeshManager; // 0xd0(0x08)
	struct UTigerClanCustomizationOptions* CustomizationOptions; // 0xd8(0x08)
	struct TArray<struct FTigerCharacterCustomizationParameters> AdditionalParametersToApply; // 0xe0(0x10)
	char pad_F0[0x11]; // 0xf0(0x11)
	enum class ETigerLodSplitMeshQuality MeshQuality; // 0x101(0x01)
	char pad_102[0x6]; // 0x102(0x06)

	void SetOutfitFromSetup(struct FTigerPersistentOutfitSetup OutfitSetup); // Function Tiger.TigerCharCustomizationComponent.SetOutfitFromSetup // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1263d30
	void SetMeshManager(struct UTigerCharacterMeshManager* MeshManager); // Function Tiger.TigerCharCustomizationComponent.SetMeshManager // (Final|Native|Public|BlueprintCallable) // @ game+0x1263ca0
	void SetAppearanceByPreviewData(struct FTigerPreviewerData NewAppearance); // Function Tiger.TigerCharCustomizationComponent.SetAppearanceByPreviewData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1263bf0
	void SetAppearance(struct FTigerCharacterAppearance NewAppearance); // Function Tiger.TigerCharCustomizationComponent.SetAppearance // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1263b30
	void OnAppearanceChangedMulticast__DelegateSignature(); // DelegateFunction Tiger.TigerCharCustomizationComponent.OnAppearanceChangedMulticast__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	bool HasAppearanceBeenSet(); // Function Tiger.TigerCharCustomizationComponent.HasAppearanceBeenSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1263740
	struct UTigerCharacterTattooCustomization* GetTattoo(int32_t TattooIndex, bool bIsValid); // Function Tiger.TigerCharCustomizationComponent.GetTattoo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1263660
	struct UTigerCharacterOutfitConfiguration* GetOutfitConfigurationByPath(SoftClassProperty OutfitClassPath); // Function Tiger.TigerCharCustomizationComponent.GetOutfitConfigurationByPath // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1263590
	struct FTigerPreviewerData GetAppearanceData(); // Function Tiger.TigerCharCustomizationComponent.GetAppearanceData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12633e0
};

// Class Tiger.TigerChatComponent
// Size: 0xe8 (Inherited: 0xb0)
struct UTigerChatComponent : UActorComponent {
	struct FSharkTokenBucket ClientMessageTokenBucket; // 0xb0(0x0c)
	struct FSharkTokenBucket ServerMessageTokenBucket; // 0xbc(0x0c)
	bool bIsChatBanned; // 0xc8(0x01)
	char pad_C9[0x1f]; // 0xc9(0x1f)

	bool TryGetMessageToken(float OutTimeUntilTokenAvailable); // Function Tiger.TigerChatComponent.TryGetMessageToken // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1264f00
	void Server_SetGeneralChatMute(bool bInShouldMuteGeneralChat); // Function Tiger.TigerChatComponent.Server_SetGeneralChatMute // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1263aa0
	void Server_MutePlayer(struct FTigerPersistentPlayerID InPlayerId); // Function Tiger.TigerChatComponent.Server_MutePlayer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1263a00
	void OnPersistentPlayerStateInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerChatComponent.OnPersistentPlayerStateInitialized // (Final|Native|Protected) // @ game+0x1263970
	void OnMuteStatusChanged(struct FTigerMuteInfo InMuteInfo); // Function Tiger.TigerChatComponent.OnMuteStatusChanged // (Final|Native|Protected|HasOutParms) // @ game+0x12638c0
	void OnChatMessageReceived(struct FTigerChatMessage InMessage); // Function Tiger.TigerChatComponent.OnChatMessageReceived // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnBanStatusUpdated(struct FTigerMuteInfo InMuteInfo); // Function Tiger.TigerChatComponent.OnBanStatusUpdated // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	bool IsSoloMatch(); // Function Tiger.TigerChatComponent.IsSoloMatch // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1263760
	bool IsGeneralChatMuted(); // Function Tiger.TigerChatComponent.IsGeneralChatMuted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x122cc10
	struct FTigerMuteInfo GetMutedInfo(); // Function Tiger.TigerChatComponent.GetMutedInfo // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1263540
	void CreateChatWindow(); // Function Tiger.TigerChatComponent.CreateChatWindow // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Client_ReceiveServerMessage(struct FString InServerMessage); // Function Tiger.TigerChatComponent.Client_ReceiveServerMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1263340
	void Client_ReceiveChatMessage(struct FTigerChatMessage InMessage); // Function Tiger.TigerChatComponent.Client_ReceiveChatMessage // (Net|Native|Event|Public|NetClient) // @ game+0x1263200
};

// Class Tiger.TigerCheatManager
// Size: 0x78 (Inherited: 0x78)
struct UTigerCheatManager : UCheatManager {

	void TigerUpdateSeasonProgress(int32_t ExpToAdd, int32_t LevelsToAdd); // Function Tiger.TigerCheatManager.TigerUpdateSeasonProgress // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1264e30
	void TigerUnlockThrall(enum class ETigerThrallId InThrallId); // Function Tiger.TigerCheatManager.TigerUnlockThrall // (Final|Exec|Native|Public) // @ game+0x1264db0
	void TigerUnlockAllThralls(); // Function Tiger.TigerCheatManager.TigerUnlockAllThralls // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerUnlockAllSkills(); // Function Tiger.TigerCheatManager.TigerUnlockAllSkills // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerUnlockAllItemsInDatabase(); // Function Tiger.TigerCheatManager.TigerUnlockAllItemsInDatabase // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerToggleVisualLogger(); // Function Tiger.TigerCheatManager.TigerToggleVisualLogger // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerToggleNoAggro(); // Function Tiger.TigerCheatManager.TigerToggleNoAggro // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerToggleClientSideHitDetectionRanged(); // Function Tiger.TigerCheatManager.TigerToggleClientSideHitDetectionRanged // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerToggleClientSideHitDetectionMelee(); // Function Tiger.TigerCheatManager.TigerToggleClientSideHitDetectionMelee // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerThrallTickAllStatModifiers(); // Function Tiger.TigerCheatManager.TigerThrallTickAllStatModifiers // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerThrallMissionUpdateAll(); // Function Tiger.TigerCheatManager.TigerThrallMissionUpdateAll // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerThrallMissionStatusChange(int32_t InThrallMissionId, bool bIsActive); // Function Tiger.TigerCheatManager.TigerThrallMissionStatusChange // (Final|Exec|Native|Public) // @ game+0x1264990
	void TigerThrallMissionAdvanceTurns(int32_t InThrallMissionId, uint32_t InTurns); // Function Tiger.TigerCheatManager.TigerThrallMissionAdvanceTurns // (Final|Exec|Native|Public) // @ game+0x1264ce0
	void TigerThrallAddStatModifier(char InSlotIndex, struct FName InModifierName); // Function Tiger.TigerCheatManager.TigerThrallAddStatModifier // (Final|Exec|Native|Public) // @ game+0x1264c10
	void TigerTeleportToCameraLink(); // Function Tiger.TigerCheatManager.TigerTeleportToCameraLink // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerSubmitChallengeProgress(); // Function Tiger.TigerCheatManager.TigerSubmitChallengeProgress // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerStartQuest(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerStartQuest // (Final|Exec|Native|Public) // @ game+0x12642f0
	void TigerSpawnNpcAtCursorWithPotency(struct FName NPCType, enum class ETigerBloodPotency InPotency, enum class ETigerBloodType InBloodType); // Function Tiger.TigerCheatManager.TigerSpawnNpcAtCursorWithPotency // (Final|Exec|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1264af0
	void TigerSpawnNpcAtCursor(struct FName NPCType); // Function Tiger.TigerCheatManager.TigerSpawnNpcAtCursor // (Final|Exec|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1264a60
	void TigerSleep(float SleepMs); // Function Tiger.TigerCheatManager.TigerSleep // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x12644d0
	void TigerSkipPsoCaching(); // Function Tiger.TigerCheatManager.TigerSkipPsoCaching // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerShowMatchTimer(); // Function Tiger.TigerCheatManager.TigerShowMatchTimer // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerShowDoNotUseMeshes(); // Function Tiger.TigerCheatManager.TigerShowDoNotUseMeshes // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerShowActiveAnimationsOnActors(bool bShouldShow); // Function Tiger.TigerCheatManager.TigerShowActiveAnimationsOnActors // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x124be70
	void TigerSetWeatherScenario(struct FString InScenarioName); // Function Tiger.TigerCheatManager.TigerSetWeatherScenario // (Final|Exec|Native|Public) // @ game+0x1263e90
	void TigerSetSessionProgressToBattlepassLevel(int32_t InLevel, bool bInShouldOwnBattlepass); // Function Tiger.TigerCheatManager.TigerSetSessionProgressToBattlepassLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1264990
	void TigerSetMatchesPlayed(int32_t InNumberMatches); // Function Tiger.TigerCheatManager.TigerSetMatchesPlayed // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1263e00
	void TigerSetCharacterData(struct FString ClanText, int32_t PowerKitIndex, struct FString GenderText); // Function Tiger.TigerCheatManager.TigerSetCharacterData // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1264850
	void TigerSetAppearance(struct FString AppearanceText); // Function Tiger.TigerCheatManager.TigerSetAppearance // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1263e90
	void TigerServerCrash(); // Function Tiger.TigerCheatManager.TigerServerCrash // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerSerializeStatistics(); // Function Tiger.TigerCheatManager.TigerSerializeStatistics // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerResetQuests(); // Function Tiger.TigerCheatManager.TigerResetQuests // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerRemoveThrall(char InSlot); // Function Tiger.TigerCheatManager.TigerRemoveThrall // (Final|Exec|Native|Public) // @ game+0x12647d0
	void TigerRemoveHolyIncense(); // Function Tiger.TigerCheatManager.TigerRemoveHolyIncense // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerRemoveAllThralls(); // Function Tiger.TigerCheatManager.TigerRemoveAllThralls // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerRegisterGrimoireEntryAsUnread(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsUnread // (Final|Exec|Native|Public) // @ game+0x12646e0
	void TigerRegisterGrimoireEntryAsUnlocked(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsUnlocked // (Final|Exec|Native|Public) // @ game+0x12646e0
	void TigerRegisterGrimoireEntryAsRead(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsRead // (Final|Exec|Native|Public) // @ game+0x12646e0
	void TigerRegisterGrimoireEntryAsLocked(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsLocked // (Final|Exec|Native|Public) // @ game+0x12646e0
	void TigerRegisterAllGrimoireEntriesAsUnread(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsUnread // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerRegisterAllGrimoireEntriesAsUnlocked(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsUnlocked // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerRegisterAllGrimoireEntriesAsRead(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsRead // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerRegisterAllGrimoireEntriesAsLocked(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsLocked // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerRainAmount(float RainAmount); // Function Tiger.TigerCheatManager.TigerRainAmount // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x12644d0
	void TigerQuitTutorial(); // Function Tiger.TigerCheatManager.TigerQuitTutorial // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerPrintCompleteQuestInfo(); // Function Tiger.TigerCheatManager.TigerPrintCompleteQuestInfo // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerPrintActiveQuestInfo(); // Function Tiger.TigerCheatManager.TigerPrintActiveQuestInfo // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerListThrallTrueStats(); // Function Tiger.TigerCheatManager.TigerListThrallTrueStats // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerListThralls(); // Function Tiger.TigerCheatManager.TigerListThralls // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerListSoftCurrencies(); // Function Tiger.TigerCheatManager.TigerListSoftCurrencies // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerListPlayerCharacters(); // Function Tiger.TigerCheatManager.TigerListPlayerCharacters // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerIncrementPremiumCurrency(uint64_t InAmountToAdd); // Function Tiger.TigerCheatManager.TigerIncrementPremiumCurrency // (Final|Exec|Native|Public) // @ game+0x1264650
	void TigerFreeReload(); // Function Tiger.TigerCheatManager.TigerFreeReload // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerEnableStatisticsGathering(bool bShouldBeEnabled); // Function Tiger.TigerCheatManager.TigerEnableStatisticsGathering // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x124be70
	void TigerDisableDisciplineCost(); // Function Tiger.TigerCheatManager.TigerDisableDisciplineCost // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerDestroyNpcWithinRadiusIgnoreDebugTarget(float InRadius); // Function Tiger.TigerCheatManager.TigerDestroyNpcWithinRadiusIgnoreDebugTarget // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x12645d0
	void TigerDestroyNpcWithinRadius(float Radius); // Function Tiger.TigerCheatManager.TigerDestroyNpcWithinRadius // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1264550
	void TigerDebugDrawPlayerGrid(float DebugDrawLifetime); // Function Tiger.TigerCheatManager.TigerDebugDrawPlayerGrid // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerCreateDefaultCharacterAtSlot(struct FString InArchetypeName, char InCharacterSlot); // Function Tiger.TigerCheatManager.TigerCreateDefaultCharacterAtSlot // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x12643f0
	void TigerCrash(); // Function Tiger.TigerCheatManager.TigerCrash // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerCompleteQuest(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerCompleteQuest // (Final|Exec|Native|Public) // @ game+0x12642f0
	void TigerCompleteNextChallengeWeekly(); // Function Tiger.TigerCheatManager.TigerCompleteNextChallengeWeekly // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerCompleteNextChallengeDaily(); // Function Tiger.TigerCheatManager.TigerCompleteNextChallengeDaily // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerClearInGameTalents(); // Function Tiger.TigerCheatManager.TigerClearInGameTalents // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerChangeThrallStats(char InSlotIndex, int32_t InPerception, int32_t InCommitment, int32_t InDominance, int32_t InSociability, int32_t InProficiency, int32_t InStealth, int32_t InStamina, int32_t InCombat); // Function Tiger.TigerCheatManager.TigerChangeThrallStats // (Final|Exec|Native|Public) // @ game+0x1264060
	void TigerBringMeHome(); // Function Tiger.TigerCheatManager.TigerBringMeHome // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerBreakMasquerade(); // Function Tiger.TigerCheatManager.TigerBreakMasquerade // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerAddSoftCurrency(int32_t InAmount, struct FString InCurrencyIdAsString); // Function Tiger.TigerCheatManager.TigerAddSoftCurrency // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1263f30
	void TigerAddInGameTalent(struct FString TalentToAdd); // Function Tiger.TigerCheatManager.TigerAddInGameTalent // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1263e90
	void TigerAddInGameLevels(int32_t InNumLevels); // Function Tiger.TigerCheatManager.TigerAddInGameLevels // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1263e00
	void TigerAddExperience(int32_t ExperienceAmount); // Function Tiger.TigerCheatManager.TigerAddExperience // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1263e00
	void OnGetPlayerCharactersRsp(struct TArray<struct FTigerPersistentPlayerCharacter> InCharacters, struct FString InErrorString); // Function Tiger.TigerCheatManager.OnGetPlayerCharactersRsp // (Final|Native|Public|HasOutParms) // @ game+0x1263790
};

// Class Tiger.TigerClanLevelWidget
// Size: 0x268 (Inherited: 0x260)
struct UTigerClanLevelWidget : UUserWidget {
	char pad_260[0x8]; // 0x260(0x08)

	void UpdateClanLevel(enum class ETigerClan Clan); // Function Tiger.TigerClanLevelWidget.UpdateClanLevel // (Final|Native|Private|BlueprintCallable) // @ game+0x126a9f0
	void OnClanLevelUpdated(int32_t NewClanLevel); // Function Tiger.TigerClanLevelWidget.OnClanLevelUpdated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	int32_t GetCurrentClanLevel(); // Function Tiger.TigerClanLevelWidget.GetCurrentClanLevel // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269a40
};

// Class Tiger.TigerInteractiveObject
// Size: 0x280 (Inherited: 0x228)
struct ATigerInteractiveObject : AActor {
	bool bHasInteractionTrigger; // 0x228(0x01)
	bool bHasEnterVolumeTrigger; // 0x229(0x01)
	bool bHasShootingTrigger; // 0x22a(0x01)
	char pad_22B[0x5]; // 0x22b(0x05)
	struct FText InteractionText; // 0x230(0x18)
	struct UBoxComponent* InteractionVolume; // 0x248(0x08)
	struct UBoxComponent* EnterVolume; // 0x250(0x08)
	struct UBoxComponent* ShootingVolume; // 0x258(0x08)
	float InteractionTime; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
	struct USceneComponent* SceneRoot; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
	enum class EInteractiveObjectState InteractionState; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	float CurrentInteractionTimeLeft; // 0x27c(0x04)

	void UpdateDuration(float DeltaSeconds); // Function Tiger.TigerInteractiveObject.UpdateDuration // (Final|Native|Public|BlueprintCallable) // @ game+0x12afe00
	void SleepInteraction(); // Function Tiger.TigerInteractiveObject.SleepInteraction // (Native|Public|BlueprintCallable) // @ game+0x12afc40
	void OnRep_Interaction(enum class EInteractiveObjectState OldState); // Function Tiger.TigerInteractiveObject.OnRep_Interaction // (Final|Native|Public) // @ game+0x12af160
	void OnJumpToFinalState(); // Function Tiger.TigerInteractiveObject.OnJumpToFinalState // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnInteract(enum class EInteractiveObjectState ActivatedTrigger); // Function Tiger.TigerInteractiveObject.OnInteract // (Native|Event|Public|BlueprintEvent) // @ game+0x12af0e0
	void Multicast_SetInteractionState(enum class EInteractiveObjectState NewState); // Function Tiger.TigerInteractiveObject.Multicast_SetInteractionState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12aefd0
	void Interact(enum class EInteractiveObjectState ActivatedTrigger, struct UTigerInteractionControllerComponent* Interacter); // Function Tiger.TigerInteractiveObject.Interact // (Native|Public|BlueprintCallable) // @ game+0x12aeda0
	bool HasDuration(); // Function Tiger.TigerInteractiveObject.HasDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aeb70
	enum class EInteractiveObjectState GetInteractionState(); // Function Tiger.TigerInteractiveObject.GetInteractionState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ae110
	void CancelInteraction(struct UTigerInteractionControllerComponent* Interacter); // Function Tiger.TigerInteractiveObject.CancelInteraction // (Native|Public|BlueprintCallable) // @ game+0x12ad3a0
	void BeginOverlappedProjectile(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerInteractiveObject.BeginOverlappedProjectile // (Final|Native|Private|HasOutParms) // @ game+0x12ad170
	void BeginOverlappedCharacter(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerInteractiveObject.BeginOverlappedCharacter // (Final|Native|Private|HasOutParms) // @ game+0x12acf40
};

// Class Tiger.TigerClientInteractiveObject
// Size: 0x290 (Inherited: 0x280)
struct ATigerClientInteractiveObject : ATigerInteractiveObject {
	char pad_280[0x10]; // 0x280(0x10)
};

// Class Tiger.TigerClientInteractiveSpawner
// Size: 0x328 (Inherited: 0x228)
struct ATigerClientInteractiveSpawner : AActor {
	char pad_228[0xb0]; // 0x228(0xb0)
	struct TMap<uint32_t, struct FClientSpawnData> PendingCreationQueue; // 0x2d8(0x50)

	void Server_ValidateInteraction(struct UTigerInteractionControllerComponent* InInteractor, uint32_t InClientObjectUID); // Function Tiger.TigerClientInteractiveSpawner.Server_ValidateInteraction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x126a790
	void OnClientObjectDestroyed(struct AActor* InDestroyedActor); // Function Tiger.TigerClientInteractiveSpawner.OnClientObjectDestroyed // (Final|Native|Private) // @ game+0x126a000
	void Client_SpawnInteractiveObjects(struct TArray<struct FClientSpawnData> InSpawnList); // Function Tiger.TigerClientInteractiveSpawner.Client_SpawnInteractiveObjects // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12695a0
	void Client_OnInteractionValidated(struct UTigerInteractionControllerComponent* InInteractor, uint32_t InClientObjectUID, bool InSuccess); // Function Tiger.TigerClientInteractiveSpawner.Client_OnInteractionValidated // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1269400
	void Client_DestroyInteractiveObjects(struct TArray<uint32_t> InDestroyList); // Function Tiger.TigerClientInteractiveSpawner.Client_DestroyInteractiveObjects // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1269360
};

// Class Tiger.TigerPushConnectionManager
// Size: 0xa8 (Inherited: 0x28)
struct UTigerPushConnectionManager : UObject {
	struct UTigerGameInstance* GameInstance; // 0x28(0x08)
	char pad_30[0x78]; // 0x30(0x78)
};

// Class Tiger.TigerClientPushConnectionManager
// Size: 0xf8 (Inherited: 0xa8)
struct UTigerClientPushConnectionManager : UTigerPushConnectionManager {
	char pad_A8[0x50]; // 0xa8(0x50)
};

// Class Tiger.TigerClimbablePipe
// Size: 0x230 (Inherited: 0x228)
struct ATigerClimbablePipe : AActor {
	char pad_228[0x8]; // 0x228(0x08)
};

// Class Tiger.TigerCollectibleProgressCache
// Size: 0x78 (Inherited: 0x28)
struct UTigerCollectibleProgressCache : UObject {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class Tiger.TigerCollectibleData
// Size: 0x90 (Inherited: 0x30)
struct UTigerCollectibleData : UDataAsset {
	uint32_t CollectibleId; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FText CollectibleName; // 0x38(0x18)
	struct FText CollectibleDescription; // 0x50(0x18)
	int32_t TotalRequired; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct UTigerGrimoireEntry* GrimoireEntryToUnlock; // 0x70(0x08)
	struct UTigerCollectibleGrimoireEntrySet* GrimoireEntrySet; // 0x78(0x08)
	struct TArray<struct FTigerItemId> RewardIds; // 0x80(0x10)
};

// Class Tiger.TigerCollectibleGrimoireEntrySet
// Size: 0x40 (Inherited: 0x30)
struct UTigerCollectibleGrimoireEntrySet : UDataAsset {
	struct TArray<struct UTigerGrimoireEntry*> Set; // 0x30(0x10)
};

// Class Tiger.TigerCollectibleSystem
// Size: 0x150 (Inherited: 0xb0)
struct UTigerCollectibleSystem : UActorComponent {
	struct UTigerExperienceEvent* CollectiblePickupExpEvent; // 0xb0(0x08)
	struct UTigerItemAsset* GenericCollectibleItemAsset; // 0xb8(0x08)
	char pad_C0[0x90]; // 0xc0(0x90)

	void Server_AwardCollectible(struct UTigerCollectibleData* InCollectible); // Function Tiger.TigerCollectibleSystem.Server_AwardCollectible // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x122cfe0
	void ProcessCollectible(struct FText InCollectibleId); // Function Tiger.TigerCollectibleSystem.ProcessCollectible // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x126a1a0
	struct UTigerCollectibleData* GetCollectibleWithName(struct FText InCollectibleName); // Function Tiger.TigerCollectibleSystem.GetCollectibleWithName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1269810
	void Client_ProcessCollectible(uint32_t InCollectibleId); // Function Tiger.TigerCollectibleSystem.Client_ProcessCollectible // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1269510
};

// Class Tiger.TigerCollectibleSystemSettings
// Size: 0x60 (Inherited: 0x38)
struct UTigerCollectibleSystemSettings : UDeveloperSettings {
	struct TSoftObjectPtr<struct UDataTable> CollectiblesTable; // 0x38(0x28)

	bool IsTableReady(); // Function Tiger.TigerCollectibleSystemSettings.IsTableReady // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1269c70
	struct UDataTable* GetCollectiblesTable(); // Function Tiger.TigerCollectibleSystemSettings.GetCollectiblesTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12698f0
};

// Class Tiger.TigerMaxIntAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerMaxIntAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(int32_t Value); // Function Tiger.TigerMaxIntAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x126a530
	void AddValue(int32_t Value); // Function Tiger.TigerMaxIntAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x12691f0
};

// Class Tiger.TigerFloatMinAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatMinAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(float Value); // Function Tiger.TigerFloatMinAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x126a350
	void AddValue(float Value); // Function Tiger.TigerFloatMinAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1269090
};

// Class Tiger.TigerFloatAverageAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatAverageAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(float Value); // Function Tiger.TigerFloatAverageAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x126a350
	void AddValue(float Value); // Function Tiger.TigerFloatAverageAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1269090
};

// Class Tiger.TigerFloatMultiplierAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatMultiplierAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(float Value); // Function Tiger.TigerFloatMultiplierAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x126a350
	void AddValue(float Value); // Function Tiger.TigerFloatMultiplierAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1269090
};

// Class Tiger.TigerBoolAnyAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerBoolAnyAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(bool Value); // Function Tiger.TigerBoolAnyAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x126a270
	void AddValue(bool Value); // Function Tiger.TigerBoolAnyAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1268fe0
};

// Class Tiger.TigerFloatCurveMultiplierAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatCurveMultiplierAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(struct UCurveFloat* Value); // Function Tiger.TigerFloatCurveMultiplierAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x126a430
	void AddValue(struct UCurveFloat* Value); // Function Tiger.TigerFloatCurveMultiplierAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1269140
};

// Class Tiger.TigerCombatComponent
// Size: 0x148 (Inherited: 0xb0)
struct UTigerCombatComponent : UActorComponent {
	struct UTigerWeapon* DefaultUnarmedWeaponClass; // 0xb0(0x08)
	struct UTigerItemAsset* DefaultMeleeItemAsset; // 0xb8(0x08)
	struct UTigerItemAsset* DefaultRangedItemAsset; // 0xc0(0x08)
	uint32_t DefaultRangedStartingAmmo; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct FMulticastInlineDelegate OnEnterCombat; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnLeaveCombat; // 0xe0(0x10)
	struct UTigerWeapon* CurrentWeaponClass; // 0xf0(0x08)
	struct UTigerMeleeWeapon* CurrentMeleeWeaponClass; // 0xf8(0x08)
	struct UTigerWeapon* CurrentVisibleWeaponClass; // 0x100(0x08)
	float OutOfCombatTime; // 0x108(0x04)
	float EnterCombatEmissiveStrength; // 0x10c(0x04)
	float ExitCombatEmissiveStrength; // 0x110(0x04)
	struct FName CombatMaterialParameterName; // 0x114(0x08)
	char pad_11C[0xc]; // 0x11c(0x0c)
	float EntityDetectionSphere; // 0x128(0x04)
	char pad_12C[0x8]; // 0x12c(0x08)
	char CombatState; // 0x134(0x01)
	char pad_135[0x13]; // 0x135(0x13)

	void OnRep_CombatStateChanged(); // Function Tiger.TigerCombatComponent.OnRep_CombatStateChanged // (Final|Native|Private) // @ game+0x126a0b0
	void OnCombatAction(); // Function Tiger.TigerCombatComponent.OnCombatAction // (Final|Native|Private|BlueprintCallable) // @ game+0x126a090
	void Multicast_SetCurrentMeleeWeaponClass(struct UTigerMeleeWeapon* MeleeWeaponClass); // Function Tiger.TigerCombatComponent.Multicast_SetCurrentMeleeWeaponClass // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1269e10
	void Multicast_OnDesiredWeaponChanged(struct UTigerWeapon* WeaponClass, struct UTigerWeapon* MeleeWeaponClass, bool bInstantSwitch); // Function Tiger.TigerCombatComponent.Multicast_OnDesiredWeaponChanged // (Net|NetReliableNative|Event|NetMulticast|Public|NetValidate) // @ game+0x1269cd0
	bool IsInCombat(); // Function Tiger.TigerCombatComponent.IsInCombat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269c10
	bool HasEquippedWeapon(); // Function Tiger.TigerCombatComponent.HasEquippedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269bc0
	enum class ETigerEquippedWeaponType GetEquippedWeaponType(); // Function Tiger.TigerCombatComponent.GetEquippedWeaponType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269b30
	struct UTigerWeapon* GetCurrentWeaponClassDefaultObject(); // Function Tiger.TigerCombatComponent.GetCurrentWeaponClassDefaultObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269ae0
	struct UTigerWeapon* GetCurrentWeaponClass(); // Function Tiger.TigerCombatComponent.GetCurrentWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269ac0
	struct UTigerMeleeWeapon* GetCurrentMeleeWeaponClassDefaultObject(); // Function Tiger.TigerCombatComponent.GetCurrentMeleeWeaponClassDefaultObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269a90
	struct UTigerMeleeWeapon* GetCurrentMeleeWeaponClass(); // Function Tiger.TigerCombatComponent.GetCurrentMeleeWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269a70
	bool EquipWeapon(enum class ETigerWeaponSlot Slot, struct UTigerWeapon* WeaponClass, bool bInstantSwitch); // Function Tiger.TigerCombatComponent.EquipWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1269700
	void CheckForCombat(); // Function Tiger.TigerCombatComponent.CheckForCombat // (Final|Native|Public|BlueprintCallable) // @ game+0x1269340
};

// Class Tiger.TigerCompassMarkerComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerCompassMarkerComponent : UActorComponent {
	struct UTigerCompassMarkerWidget* CompassMarkerWidget; // 0xb0(0x08)
	struct UTexture2D* MarkerTexture; // 0xb8(0x08)
	bool bShouldShowByDefault; // 0xc0(0x01)
	char pad_C1[0x17]; // 0xc1(0x17)

	void Show(); // Function Tiger.TigerCompassMarkerComponent.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x126a860
	void Hide(); // Function Tiger.TigerCompassMarkerComponent.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x1269bf0
};

// Class Tiger.TigerCompassMarkerWidget
// Size: 0x298 (Inherited: 0x280)
struct UTigerCompassMarkerWidget : UTigerWidget {
	struct FVector MarkerWorldLocation; // 0x280(0x0c)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UTexture2D* MarkerTexture; // 0x290(0x08)

	void SetColorBasedOnPlayerIndex(char InIndex); // Function Tiger.TigerCompassMarkerWidget.SetColorBasedOnPlayerIndex // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	float GetRelativeAngleOnCompass(); // Function Tiger.TigerCompassMarkerWidget.GetRelativeAngleOnCompass // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269b60
};

// Class Tiger.TigerCompassUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerCompassUI : UTigerWidget {

	void ShowCompassObject(struct UTigerCompassMarkerWidget* CompassObject); // Function Tiger.TigerCompassUI.ShowCompassObject // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void HideCompassObject(struct UTigerCompassMarkerWidget* CompassObject); // Function Tiger.TigerCompassUI.HideCompassObject // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerItemAsset
// Size: 0x128 (Inherited: 0x30)
struct UTigerItemAsset : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	struct UStaticMesh* StaticMesh; // 0x38(0x08)
	enum class ETigerInventoryItemType ItemType; // 0x40(0x01)
	enum class ETigerItemRarity ItemRarity; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
	struct FText Name; // 0x48(0x18)
	struct FText ShortName; // 0x60(0x18)
	int32_t MaxStackSize; // 0x78(0x04)
	int32_t DropFromStackCount; // 0x7c(0x04)
	struct FText Description; // 0x80(0x18)
	struct UTigerItemAsset* LowerRarity; // 0x98(0x08)
	int32_t SortWithinCategoryAscending; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
	struct FText TooltipItemType; // 0xa8(0x18)
	struct UTexture2D* UIIcon; // 0xc0(0x08)
	struct UTexture2D* HUDIcon; // 0xc8(0x08)
	struct UTigerWeapon* WeaponClass; // 0xd0(0x08)
	struct UTigerBuff* ItemBuff; // 0xd8(0x08)
	bool bShouldAutoPickUpItem; // 0xe0(0x01)
	bool bTriggerBuffOnItemPickup; // 0xe1(0x01)
	bool bRemoveBuffOnItemDropped; // 0xe2(0x01)
	char pad_E3[0x5]; // 0xe3(0x05)
	struct UAkAudioEvent* PingWantVoiceAudioEvent; // 0xe8(0x08)
	struct UAkAudioEvent* PingHaveVoiceAudioEvent; // 0xf0(0x08)
	struct UAkAudioEvent* PingHereVoiceAudioEvent; // 0xf8(0x08)
	struct UAkAudioEvent* PickUpAudioEvent; // 0x100(0x08)
	uint64_t PersistentTelemetryID; // 0x108(0x08)
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x110(0x08)
	struct FString EntryId; // 0x118(0x10)

	enum class ETigerWeaponType GetWeaponType(); // Function Tiger.TigerItemAsset.GetWeaponType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba970
	struct UTigerWeapon* GetWeaponClassDefaultObject(); // Function Tiger.TigerItemAsset.GetWeaponClassDefaultObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba840
	struct UTexture2D* GetHUDIcon(); // Function Tiger.TigerItemAsset.GetHUDIcon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba500
	struct FText GetDescription(); // Function Tiger.TigerItemAsset.GetDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba470
	bool CanBeDropped(); // Function Tiger.TigerItemAsset.CanBeDropped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba360
};

// Class Tiger.TigerConsumableAsset
// Size: 0x170 (Inherited: 0x128)
struct UTigerConsumableAsset : UTigerItemAsset {
	struct UAnimMontage* Montage; // 0x128(0x08)
	bool bCanBeUsedWhileMoving; // 0x130(0x01)
	char pad_131[0x3]; // 0x131(0x03)
	float UseTime; // 0x134(0x04)
	int32_t MaxStack; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct UAkAudioEvent* BeginUseAudioEvent; // 0x140(0x08)
	struct UAkAudioEvent* UseSuccessfulAudioEvent; // 0x148(0x08)
	struct UAkAudioEvent* UseFailedAudioEvent; // 0x150(0x08)
	struct UTigerCharacterEffect* SuccessfulUseCharacterEffect; // 0x158(0x08)
	struct ATigerBuffPostProcess* BeginUsePostProcess; // 0x160(0x08)
	struct ATigerBuffPostProcess* SuccessfulBuffPostProcess; // 0x168(0x08)
};

// Class Tiger.TigerHealingConsumableAsset
// Size: 0x178 (Inherited: 0x170)
struct UTigerHealingConsumableAsset : UTigerConsumableAsset {
	float HealAmount; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
};

// Class Tiger.TigerBuffingConsumableAsset
// Size: 0x178 (Inherited: 0x170)
struct UTigerBuffingConsumableAsset : UTigerConsumableAsset {
	struct UTigerBuff* BuffToApply; // 0x170(0x08)
};

// Class Tiger.TigerRevealItemConsumableAsset
// Size: 0x178 (Inherited: 0x170)
struct UTigerRevealItemConsumableAsset : UTigerConsumableAsset {
	float MaxDistanceToItem; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
};

// Class Tiger.TigerSupplyDropConsumableAsset
// Size: 0x188 (Inherited: 0x170)
struct UTigerSupplyDropConsumableAsset : UTigerConsumableAsset {
	struct AActor* SupplyDropFlare; // 0x170(0x08)
	struct AActor* SupplyDropHelicopterActor; // 0x178(0x08)
	float DistanceFromPlayer; // 0x180(0x04)
	float Height; // 0x184(0x04)
};

// Class Tiger.TigerConsumablesComponent
// Size: 0x188 (Inherited: 0xb0)
struct UTigerConsumablesComponent : UActorComponent {
	struct FMulticastInlineDelegate OnUseConsumableFinished; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnUseConsumableStarted; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnUseConsumableCancelled; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnUseConsumablePrevented; // 0xe0(0x10)
	struct UAnimMontage* FallbackUseMontage; // 0xf0(0x08)
	struct UTigerConsumableAsset* QuickUseConsumable; // 0xf8(0x08)
	struct UTigerBuff* MovableBuffClass; // 0x100(0x08)
	int32_t CancelConsumableUseOnTraversalAction; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct ATigerPlayer* Player; // 0x110(0x08)
	struct UAnimMontage* CurrentMontage; // 0x118(0x08)
	struct UTigerConsumableAsset* CurrentConsumable; // 0x120(0x08)
	struct UTigerConsumableAsset* QuickConsumables[0x6]; // 0x128(0x30)
	char pad_158[0x30]; // 0x158(0x30)

	void UseCallback(); // Function Tiger.TigerConsumablesComponent.UseCallback // (Final|Native|Private) // @ game+0x126aa70
	bool TriggerUseQuickUseConsumable(); // Function Tiger.TigerConsumablesComponent.TriggerUseQuickUseConsumable // (Final|Native|Public|BlueprintCallable) // @ game+0x126a9c0
	bool TriggerUseConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.TriggerUseConsumable // (Final|Native|Public|BlueprintCallable) // @ game+0x126a920
	bool TriggerDropConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.TriggerDropConsumable // (Final|Native|Public|BlueprintCallable) // @ game+0x126a880
	void TigerDelegateConsumableSuccessfullyFinishedUse__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumableSuccessfullyFinishedUse__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateConsumableStartedUse__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumableStartedUse__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateConsumablePrevented__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumablePrevented__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateConsumableCancelledUse__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumableCancelledUse__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void Server_UseConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.Server_UseConsumable // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x126a6d0
	void Server_StopUseConsumable(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerConsumablesComponent.Server_StopUseConsumable // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x126a610
	void OnTraversalAction(struct ATigerPlayer* InPlayer, enum class ETigerTraversalAction InTraversalAction); // Function Tiger.TigerConsumablesComponent.OnTraversalAction // (Final|Native|Private) // @ game+0x126a0d0
	void Multicast_StopUseConsumable(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerConsumablesComponent.Multicast_StopUseConsumable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1269f70
	void Multicast_SimulateUseConsumable(struct UTigerConsumableAsset* Consumable, float UseTime); // Function Tiger.TigerConsumablesComponent.Multicast_SimulateUseConsumable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1269ea0
	bool IsUsingConsumable(); // Function Tiger.TigerConsumablesComponent.IsUsingConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269ca0
	bool IsPlayingConsumableMontage(); // Function Tiger.TigerConsumablesComponent.IsPlayingConsumableMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269c40
	float GetUseProgress(); // Function Tiger.TigerConsumablesComponent.GetUseProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269b90
	struct UTigerConsumableAsset* GetCurrentlyUsingConsumable(); // Function Tiger.TigerConsumablesComponent.GetCurrentlyUsingConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269b10
	bool GetConsumableAtIndex(int32_t Index, struct UTigerConsumableAsset* Consumable, int32_t Stack); // Function Tiger.TigerConsumablesComponent.GetConsumableAtIndex // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1269920
	void Client_UseConsumableFailed(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerConsumablesComponent.Client_UseConsumableFailed // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1269670
	bool CanPickUpConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.CanPickUpConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12692a0
	bool CanBePickedup(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.CanBePickedup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12692a0
};

// Class Tiger.TigerWheelWidget
// Size: 0x2a0 (Inherited: 0x290)
struct UTigerWheelWidget : UTigerMenuWidget {
	float LockCameraForGamepadAfterUseTime; // 0x290(0x04)
	bool bShouldSetMouseLocation; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)
	struct UTigerWheelInterfaceWidget* Interface; // 0x298(0x08)

	void PrimaryAction(int32_t Index); // Function Tiger.TigerWheelWidget.PrimaryAction // (Native|Protected) // @ game+0x1371d10
	bool OpenWheel(); // Function Tiger.TigerWheelWidget.OpenWheel // (Native|Public|BlueprintCallable) // @ game+0x1371c50
	struct UTigerWheelInterfaceWidget* GetInterfaceWidget(); // Function Tiger.TigerWheelWidget.GetInterfaceWidget // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool CloseWheel(bool bTriggerAction); // Function Tiger.TigerWheelWidget.CloseWheel // (Native|Public|BlueprintCallable) // @ game+0x1371160
	void AlternateAction(int32_t Index); // Function Tiger.TigerWheelWidget.AlternateAction // (Native|Protected) // @ game+0x1370f80
};

// Class Tiger.TigerConsumableWheelWidget
// Size: 0x2b8 (Inherited: 0x2a0)
struct UTigerConsumableWheelWidget : UTigerWheelWidget {
	struct ATigerPlayer* Player; // 0x2a0(0x08)
	struct UTigerConsumablesComponent* ConsumablesComponent; // 0x2a8(0x08)
	struct UTigerInventoryComponent* InventoryComponent; // 0x2b0(0x08)
};

// Class Tiger.TigerContextualHelp
// Size: 0xb0 (Inherited: 0x28)
struct UTigerContextualHelp : UObject {
	float LifeTimeInSeconds; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FText HeaderText; // 0x30(0x18)
	struct FText DescriptionText; // 0x48(0x18)
	struct FName InputAction; // 0x60(0x08)
	bool bShouldHideOnInput; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct TSoftObjectPtr<struct UTexture2D> Icon; // 0x70(0x28)
	int32_t MatchesPlayedLimit; // 0x98(0x04)
	bool bWantsToShow; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	float CooldownInSeconds; // 0xa0(0x04)
	enum class ETigerContextualHelpType ContextualHelpType; // 0xa4(0x01)
	enum class ETigerContextualHelpShouldShowInGameMode ShouldShowInGameMode; // 0xa5(0x01)
	char pad_A6[0xa]; // 0xa6(0x0a)

	void SetupTriggerConditions(struct FTigerContextualHelpContext InContext); // Function Tiger.TigerContextualHelp.SetupTriggerConditions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnPlayerSpawned(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerContextualHelp.OnPlayerSpawned // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnHide(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerContextualHelp.OnHide // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool HasReachedMaxMatchesPlayedLimit(struct FTigerContextualHelpContext InContext); // Function Tiger.TigerContextualHelp.HasReachedMaxMatchesPlayedLimit // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270a70
	void ExtendLifetime(float InLifeTimeInSeconds, enum class ETigerContextualHelpType InType); // Function Tiger.TigerContextualHelp.ExtendLifetime // (Final|Native|Public|BlueprintCallable) // @ game+0x1270510
	bool CanEverShow(struct FTigerContextualHelpContext InContext); // Function Tiger.TigerContextualHelp.CanEverShow // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x12702a0
};

// Class Tiger.TigerContextualHelpComponent
// Size: 0x100 (Inherited: 0xb0)
struct UTigerContextualHelpComponent : UActorComponent {
	struct ATigerPlayerController* TigerPlayerController; // 0xb0(0x08)
	struct UTigerContextualHelpUI* ContextualHelpUI; // 0xb8(0x08)
	struct TArray<struct FTigerCurrentContextualHelp> ActiveContextualHelps; // 0xc0(0x10)
	struct TArray<struct UTigerContextualHelp*> ContextualHelpCandidates; // 0xd0(0x10)
	struct TArray<SoftClassProperty> ContextualHelpTypes; // 0xe0(0x10)
	float CooldownTime; // 0xf0(0x04)
	float MinimumDisplayTime; // 0xf4(0x04)
	char pad_F8[0x8]; // 0xf8(0x08)

	void PrepareContextualHelpComponentsForCurrentSession(struct FTigerContextualHelpContext InContext); // Function Tiger.TigerContextualHelpComponent.PrepareContextualHelpComponentsForCurrentSession // (Final|Native|Protected) // @ game+0x1270d50
	void OnPersistentPlayerStateInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerContextualHelpComponent.OnPersistentPlayerStateInitialized // (Final|Native|Protected) // @ game+0x1270cc0
	struct TArray<struct UTigerContextualHelp*> GetCurrentContextualHelpCandidates(); // Function Tiger.TigerContextualHelpComponent.GetCurrentContextualHelpCandidates // (Final|Native|Public|BlueprintCallable) // @ game+0x1270640
};

// Class Tiger.TigerContextualHelpUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerContextualHelpUI : UTigerWidget {

	void OnShowHelpWidget(struct UTigerContextualHelp* InData, enum class ETigerContextualHelpType InType); // Function Tiger.TigerContextualHelpUI.OnShowHelpWidget // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnHideHelpWidget(struct UTigerContextualHelp* InData, float OutAnimationDuration, enum class ETigerContextualHelpType InType); // Function Tiger.TigerContextualHelpUI.OnHideHelpWidget // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerCrosshairWidget
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerCrosshairWidget : UTigerWidget {
	enum class ETargetInteraction PreviousInteraction; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct UObject* PreviousInteractionObject; // 0x288(0x08)
	struct TWeakObjectPtr<struct ATigerCharacter> PreviousInteractionCharacter; // 0x290(0x08)
	struct UTigerInventoryComponent* Inventory; // 0x298(0x08)
	struct UMaterialInstanceDynamic* ProgressBarMaterial; // 0x2a0(0x08)
	struct UCanvasPanel* RootPanel; // 0x2a8(0x08)
	struct ATigerPlayer* TigerPlayer; // 0x2b0(0x08)
	struct UTigerWeaponCrosshairWidget* CurrentWeaponCrosshair; // 0x2b8(0x08)
	struct TArray<struct UTigerWeaponCrosshairWidget*> PreviousWeaponCrosshairs; // 0x2c0(0x10)
	float ProgressValue; // 0x2d0(0x04)
	enum class ETigerUIColor CurrentProgressBarColor; // 0x2d4(0x01)
	char pad_2D5[0xb]; // 0x2d5(0x0b)

	void UpdateInteraction(enum class ETargetInteraction Interaction, struct UObject* InteractionObject); // Function Tiger.TigerCrosshairWidget.UpdateInteraction // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void SetProgressBarColor(enum class ETigerUIColor UIColor); // Function Tiger.TigerCrosshairWidget.SetProgressBarColor // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnShowHitMarker(struct FLinearColor HitmarkerColor, bool bWasDownedOrKilled); // Function Tiger.TigerCrosshairWidget.OnShowHitMarker // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnInventoryUpdated(); // Function Tiger.TigerCrosshairWidget.OnInventoryUpdated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerCrowdAgentComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerCrowdAgentComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class Tiger.TigerCSVTable
// Size: 0x40 (Inherited: 0x28)
struct UTigerCSVTable : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void WriteToFile(struct FString Filename, struct FString Path); // Function Tiger.TigerCSVTable.WriteToFile // (Final|Native|Public|BlueprintCallable) // @ game+0x1271320
	void SetValueString(int32_t Row, int32_t Column, struct FString Value); // Function Tiger.TigerCSVTable.SetValueString // (Final|Native|Public|BlueprintCallable) // @ game+0x1270f40
	void SetValueFloat(int32_t Row, int32_t Column, float Value); // Function Tiger.TigerCSVTable.SetValueFloat // (Final|Native|Public|BlueprintCallable) // @ game+0x1270e00
	int32_t AddColumn(struct FString ColumnName); // Function Tiger.TigerCSVTable.AddColumn // (Final|Native|Public|BlueprintCallable) // @ game+0x1270150
	void AccumulateValue(int32_t Row, int32_t Column, float Value); // Function Tiger.TigerCSVTable.AccumulateValue // (Final|Native|Public|BlueprintCallable) // @ game+0x126ffe0
};

// Class Tiger.TigerDamageTriggerVolume
// Size: 0x280 (Inherited: 0x260)
struct ATigerDamageTriggerVolume : ATriggerVolume {
	float DamagePerSecond; // 0x260(0x04)
	bool bOnlyDamageKindred; // 0x264(0x01)
	bool bDoNotDamageDowned; // 0x265(0x01)
	char pad_266[0x2]; // 0x266(0x02)
	float DamageRate; // 0x268(0x04)
	bool bEnableDamage; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	struct TArray<struct FDamageTriggerOverlapData> OverlappingCharacters; // 0x270(0x10)

	void OnEndOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerDamageTriggerVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x1270bf0
	void OnBeginOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerDamageTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x1270b20
};

// Class Tiger.TigerDamageBase
// Size: 0x40 (Inherited: 0x40)
struct UTigerDamageBase : UDamageType {
};

// Class Tiger.DmgType_Ranged
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Ranged : UTigerDamageBase {
};

// Class Tiger.DmgType_RangedCritical
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_RangedCritical : UDmgType_Ranged {
};

// Class Tiger.DmgType_Melee
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Melee : UTigerDamageBase {
};

// Class Tiger.DmgType_Discipline
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Discipline : UTigerDamageBase {
};

// Class Tiger.DmgType_DisciplineFOTT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_DisciplineFOTT : UDmgType_Discipline {
};

// Class Tiger.DmgType_DOT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_DOT : UTigerDamageBase {
};

// Class Tiger.DmgType_ToreadorDOT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_ToreadorDOT : UDmgType_DOT {
};

// Class Tiger.DmgType_GameInflicted
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_GameInflicted : UTigerDamageBase {
};

// Class Tiger.DmgType_Environmental
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Environmental : UDmgType_GameInflicted {
};

// Class Tiger.DmgType_Mosquito
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Mosquito : UDmgType_GameInflicted {
};

// Class Tiger.DmgType_OutOfBoundsMosquito
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_OutOfBoundsMosquito : UDmgType_GameInflicted {
};

// Class Tiger.TigerDataDependentWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerDataDependentWidget : UTigerWidget {

	void OnDataLoaded(); // Function Tiger.TigerDataDependentWidget.OnDataLoaded // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void ListenToDataLoadingEvent(); // Function Tiger.TigerDataDependentWidget.ListenToDataLoadingEvent // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsDataLoaded(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerDataDependentWidget.IsDataLoaded // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void CheckDataLoaded(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerDataDependentWidget.CheckDataLoaded // (Final|Native|Private) // @ game+0x12703b0
};

// Class Tiger.TigerDeathScreen
// Size: 0x2e8 (Inherited: 0x290)
struct UTigerDeathScreen : UTigerMenuWidget {
	char pad_290[0x8]; // 0x290(0x08)
	struct TMap<enum class ETigerKillerType, struct FText> KillerTypeNames; // 0x298(0x50)

	bool ShouldReturnToElysium(); // Function Tiger.TigerDeathScreen.ShouldReturnToElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1271190
	void SetInformation(int32_t InPlayerPlacement, int32_t InNumGroupsAtStart, struct FString InInstigatorPlayerName, enum class ETigerKillerType InKillerType); // Function Tiger.TigerDeathScreen.SetInformation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	bool CanStartSpectating(); // Function Tiger.TigerDeathScreen.CanStartSpectating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270380
};

// Class Tiger.TigerDebugCameraHUD
// Size: 0x318 (Inherited: 0x318)
struct ATigerDebugCameraHUD : ADebugCameraHUD {
};

// Class Tiger.TigerDeferredGroupRetainerBox
// Size: 0x150 (Inherited: 0x150)
struct UTigerDeferredGroupRetainerBox : URetainerBox {

	void Construct(); // Function Tiger.TigerDeferredGroupRetainerBox.Construct // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerDeferredRenderBox
// Size: 0x130 (Inherited: 0x120)
struct UTigerDeferredRenderBox : UContentWidget {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class Tiger.TigerDestroySessionAsync
// Size: 0x78 (Inherited: 0x30)
struct UTigerDestroySessionAsync : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailed; // 0x40(0x10)
	char pad_50[0x28]; // 0x50(0x28)

	struct UTigerDestroySessionAsync* DestroySession(struct UObject* WorldContextObject, enum class ESessionType SESSIONTYPE); // Function Tiger.TigerDestroySessionAsync.DestroySession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1270440
};

// Class Tiger.TigerDialogueInteractionScreen
// Size: 0x2b0 (Inherited: 0x290)
struct UTigerDialogueInteractionScreen : UTigerMenuWidget {
	float TransitionTime; // 0x290(0x04)
	struct TWeakObjectPtr<struct ATigerBaseNPC> VendorNPC; // 0x294(0x08)
	struct TWeakObjectPtr<struct UTigerAnimInstance> TargetAnimationInstance; // 0x29c(0x08)
	struct TWeakObjectPtr<struct UTigerInteractiveNpcComponent> InteractiveNpcComponent; // 0x2a4(0x08)
	char pad_2AC[0x4]; // 0x2ac(0x04)

	void TransitionToPlayerCamera(); // Function Tiger.TigerDialogueInteractionScreen.TransitionToPlayerCamera // (Final|Native|Protected|BlueprintCallable) // @ game+0x12712a0
	void TransitionToInteractionCamera(); // Function Tiger.TigerDialogueInteractionScreen.TransitionToInteractionCamera // (Final|Native|Protected|BlueprintCallable) // @ game+0x1271280
};

// Class Tiger.TigerNpcDialogueList
// Size: 0x90 (Inherited: 0x30)
struct UTigerNpcDialogueList : UDataAsset {
	struct FString DialogueIdBase; // 0x30(0x10)
	struct TMap<struct FString, struct FTigerNpcDialogue> DialogueLines; // 0x40(0x50)
};

// Class Tiger.TigerDialogueManager
// Size: 0x100 (Inherited: 0x28)
struct UTigerDialogueManager : UObject {
	char pad_28[0xd8]; // 0x28(0xd8)

	void SortDialogueLines(struct ATigerPlayerState* InState); // Function Tiger.TigerDialogueManager.SortDialogueLines // (Final|Native|Public|BlueprintCallable) // @ game+0x12711f0
	bool HasMoreDialogue(); // Function Tiger.TigerDialogueManager.HasMoreDialogue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270a10
	bool HasHighPriorityDialogue(); // Function Tiger.TigerDialogueManager.HasHighPriorityDialogue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12709e0
	enum class ETigerClan GetSpeakerClan(); // Function Tiger.TigerDialogueManager.GetSpeakerClan // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270940
	struct FTigerNpcDialogue GetNextDialoguePack(); // Function Tiger.TigerDialogueManager.GetNextDialoguePack // (Final|Native|Public|BlueprintCallable) // @ game+0x12708a0
	bool GetNextDialogueLine(struct FText OutText, struct FText OutQuestDescription); // Function Tiger.TigerDialogueManager.GetNextDialogueLine // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1270720
	int32_t GetCurrentDialogueId(); // Function Tiger.TigerDialogueManager.GetCurrentDialogueId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12706c0
	bool CanInteract(); // Function Tiger.TigerDialogueManager.CanInteract // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270350
};

// Class Tiger.TigerDisciplineBase
// Size: 0x78 (Inherited: 0x28)
struct UTigerDisciplineBase : UObject {
	struct ATigerCharacter* Owner; // 0x28(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x30(0x08)
	struct UTigerActiveDisciplineConfig* BaseConfig; // 0x38(0x08)
	char pad_40[0x18]; // 0x40(0x18)
	int32_t PowerLevel; // 0x58(0x04)
	char pad_5C[0x8]; // 0x5c(0x08)
	float AIUseDuration; // 0x64(0x04)
	float AIMinCooldownDuration; // 0x68(0x04)
	float AIMaxCooldownDuration; // 0x6c(0x04)
	char pad_70[0x8]; // 0x70(0x08)

	bool UsesChargesUI(); // Function Tiger.TigerDisciplineBase.UsesChargesUI // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12712f0
	bool UsesCharges(); // Function Tiger.TigerDisciplineBase.UsesCharges // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12712c0
	bool ShouldUseCameraPresetWhenActive(); // Function Tiger.TigerDisciplineBase.ShouldUseCameraPresetWhenActive // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12711c0
	bool HasPreparationCameraPreset(); // Function Tiger.TigerDisciplineBase.HasPreparationCameraPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270a40
	bool HasCharge(); // Function Tiger.TigerDisciplineBase.HasCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12709c0
	bool HasCameraPreset(); // Function Tiger.TigerDisciplineBase.HasCameraPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270990
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerDisciplineBase.GetTigerPlayer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270960
	bool GetShouldDisplayActiveTimeLeft(); // Function Tiger.TigerDisciplineBase.GetShouldDisplayActiveTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270920
	struct UTigerCameraPreset* GetPreparationCameraPreset(); // Function Tiger.TigerDisciplineBase.GetPreparationCameraPreset // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12708e0
	int32_t GetMaxCharges(); // Function Tiger.TigerDisciplineBase.GetMaxCharges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12706f0
	int32_t GetCharges(); // Function Tiger.TigerDisciplineBase.GetCharges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270620
	struct UTigerCameraPreset* GetCameraPreset(); // Function Tiger.TigerDisciplineBase.GetCameraPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12705e0
};

// Class Tiger.TigerDisciplineAnimTriggered
// Size: 0xf0 (Inherited: 0x78)
struct UTigerDisciplineAnimTriggered : UTigerDisciplineBase {
	struct UTigerDisciplineAnimTriggeredConfig* AnimConfig; // 0x78(0x08)
	char pad_80[0x10]; // 0x80(0x10)
	struct UAnimMontage* LastPlayingMontage; // 0x90(0x08)
	struct TMap<struct UAnimMontage*, float> TriggerTimes; // 0x98(0x50)
	char pad_E8[0x8]; // 0xe8(0x08)
};

// Class Tiger.TigerDisciplineConfigBase
// Size: 0xe8 (Inherited: 0x28)
struct UTigerDisciplineConfigBase : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UTexture2D* UIIcon; // 0x30(0x08)
	struct FText DisciplineName; // 0x38(0x18)
	struct FText DisciplineDescription; // 0x50(0x18)
	bool bIsClanAbility; // 0x68(0x01)
	bool bEnablesGroupMemberHealthBars; // 0x69(0x01)
	enum class ETigerAIPlayerAction ActivationActionReported; // 0x6a(0x01)
	char pad_6B[0x5]; // 0x6b(0x05)
	struct UTigerDisciplineBase* DisciplineClass; // 0x70(0x08)
	enum class ETigerActionAllowed AllowedActions[0xe]; // 0x78(0x38)
	uint16_t ActionsThatShouldCancelDiscipline; // 0xb0(0x02)
	bool bShouldAutomaticallyUseCameraPreset; // 0xb2(0x01)
	char pad_B3[0x5]; // 0xb3(0x05)
	struct UTigerCameraPreset* PreparationCameraPreset; // 0xb8(0x08)
	struct UTigerCameraPreset* CameraPreset; // 0xc0(0x08)
	struct UTigerCameraPreset* CameraPresetIndoor; // 0xc8(0x08)
	struct UTigerWeaponCrosshairWidget* Crosshair; // 0xd0(0x08)
	struct UMediaSource* PreviewVideo; // 0xd8(0x08)
	uint64_t PersistentTelemetryID; // 0xe0(0x08)

	void GetLevelInfo(struct TArray<struct FTigerDisciplineLevelInfo> LevelInfo); // Function Tiger.TigerDisciplineConfigBase.GetLevelInfo // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x127a7d0
};

// Class Tiger.TigerActiveDisciplineConfig
// Size: 0x160 (Inherited: 0xe8)
struct UTigerActiveDisciplineConfig : UTigerDisciplineConfigBase {
	int32_t MaxLevel; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct FText CooldownText; // 0xf0(0x18)
	struct FText CooldownSuffix; // 0x108(0x18)
	int32_t MaxCharges; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct TArray<float> RechargeTimes; // 0x128(0x10)
	struct TArray<float> CooldownTimes; // 0x138(0x10)
	bool bShouldRotateTowardsCameraOnActivation; // 0x148(0x01)
	bool bShouldRotateTowardsCameraOnRelease; // 0x149(0x01)
	char pad_14A[0x2]; // 0x14a(0x02)
	float MovementMultiplier; // 0x14c(0x04)
	float GravityMultiplier; // 0x150(0x04)
	float PrimaryAINoiseEventRange; // 0x154(0x04)
	float SecondaryAINoiseEventRange; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)
};

// Class Tiger.TigerBlindingBeautyConfig
// Size: 0x1d8 (Inherited: 0x160)
struct UTigerBlindingBeautyConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* Montage; // 0x160(0x08)
	struct ATigerBlindingBeautyEffectActor* BlueprintActor; // 0x168(0x08)
	float BlueprintActorLifetime; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct UTigerBuff* BlindingDebuff; // 0x178(0x08)
	struct UTigerBuff* CharmDebuffPlayer; // 0x180(0x08)
	struct UTigerBuff* CharmDebuffNpc; // 0x188(0x08)
	struct TArray<float> BlindDuration; // 0x190(0x10)
	float CharmPlayerDuration; // 0x1a0(0x04)
	float CharmNpcDuration; // 0x1a4(0x04)
	float TriggerTime; // 0x1a8(0x04)
	float ActiveTimeAfterTrigger; // 0x1ac(0x04)
	float GuaranteedBlindRange; // 0x1b0(0x04)
	float LookBlindRange; // 0x1b4(0x04)
	float LookDotProductHitThreshold; // 0x1b8(0x04)
	char pad_1BC[0x4]; // 0x1bc(0x04)
	struct TArray<float> BlindDamage; // 0x1c0(0x10)
	bool bShouldDamageCivilians; // 0x1d0(0x01)
	bool bUseCameraAsLookDirection; // 0x1d1(0x01)
	char pad_1D2[0x6]; // 0x1d2(0x06)
};

// Class Tiger.TigerDisciplineBlindingBeauty
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineBlindingBeauty : UTigerDisciplineBase {
	struct UTigerBlindingBeautyConfig* Config; // 0x78(0x08)
	struct ATigerBlindingBeautyEffectActor* BlueprintActor; // 0x80(0x08)
	char pad_88[0x10]; // 0x88(0x10)
};

// Class Tiger.TigerDisciplineAnimTriggeredConfig
// Size: 0x170 (Inherited: 0x160)
struct UTigerDisciplineAnimTriggeredConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* Montage; // 0x160(0x08)
	enum class ETigerDisciplinesEnum DisciplineType; // 0x168(0x01)
	char pad_169[0x3]; // 0x169(0x03)
	float ActiveTimeAfterTrigger; // 0x16c(0x04)
};

// Class Tiger.TigerCharmConfig
// Size: 0x1d8 (Inherited: 0x170)
struct UTigerCharmConfig : UTigerDisciplineAnimTriggeredConfig {
	float Damage; // 0x170(0x04)
	float BondMaxDistance; // 0x174(0x04)
	float BackgroundFindTargetInterval; // 0x178(0x04)
	float BondPlayerDuration; // 0x17c(0x04)
	float BondNPCDuration; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct TArray<struct UTigerMajestyBuff*> CharmedBuff; // 0x188(0x10)
	struct TArray<struct UTigerBondingBuff*> BondingBuff; // 0x198(0x10)
	struct UTigerCharacterEffect* OnHitEffect; // 0x1a8(0x08)
	struct UTigerBuff* ThornsBuff; // 0x1b0(0x08)
	bool bShowDebugInfo; // 0x1b8(0x01)
	char pad_1B9[0x3]; // 0x1b9(0x03)
	float MaxDistance; // 0x1bc(0x04)
	float MinDistance; // 0x1c0(0x04)
	float PlayerTargetMultiplier; // 0x1c4(0x04)
	struct UCurveFloat* AimAxisValueCurve; // 0x1c8(0x08)
	struct UCurveFloat* DistanceFromUseValueCurve; // 0x1d0(0x08)
};

// Class Tiger.TigerBondingBuffInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBondingBuffInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBondingBuff
// Size: 0x270 (Inherited: 0x270)
struct UTigerBondingBuff : UTigerBuff {
};

// Class Tiger.TigerDisciplineCharm
// Size: 0x118 (Inherited: 0xf0)
struct UTigerDisciplineCharm : UTigerDisciplineAnimTriggered {
	char pad_F0[0x18]; // 0xf0(0x18)
	struct UTigerCharmConfig* Config; // 0x108(0x08)
	char pad_110[0x8]; // 0x110(0x08)

	void OnTickBond(struct ATigerCharacter* Player, struct ATigerCharacter* TargetNpc); // Function Tiger.TigerDisciplineCharm.OnTickBond // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStoppedBond(); // Function Tiger.TigerDisciplineCharm.OnStoppedBond // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStartedBond(struct ATigerCharacter* Player, struct ATigerCharacter* TargetNpc); // Function Tiger.TigerDisciplineCharm.OnStartedBond // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerDisciplineComponent
// Size: 0x258 (Inherited: 0xb0)
struct UTigerDisciplineComponent : UActorComponent {
	struct UTigerDisciplineConfigs* DisciplineConfigs; // 0xb0(0x08)
	struct USoundBase* DisciplineFailSound; // 0xb8(0x08)
	struct FMulticastInlineDelegate OnDisciplineUsedDelegate; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnActivatedDisciplineDelegate; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnDeactivatedDisciplineDelegate; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnDisciplineUnlocked; // 0xf0(0x10)
	struct FTigerScouterCharacterData ScouterCharacterData; // 0x100(0x30)
	struct UTigerBuffShackles* PrimaryShacklesBuff; // 0x130(0x08)
	struct UTigerBuff* SecondaryShacklesBuff; // 0x138(0x08)
	float WeaponRarityDamageMultipliers[0x5]; // 0x140(0x14)
	char pad_154[0x4]; // 0x154(0x04)
	struct ATigerPlayer* Player; // 0x158(0x08)
	char pad_160[0x88]; // 0x160(0x88)
	struct TMap<enum class ETigerDisciplinesEnum, struct UTigerDisciplineBase*> Disciplines; // 0x1e8(0x50)
	char pad_238[0x20]; // 0x238(0x20)

	bool WantsToStrafe(); // Function Tiger.TigerDisciplineComponent.WantsToStrafe // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1277120
	void UnlockDisciplineSlot(enum class ETigerDisciplineSlot InDisciplineSlot); // Function Tiger.TigerDisciplineComponent.UnlockDisciplineSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x12770a0
	void UnlockDiscipline(enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerDisciplineComponent.UnlockDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1277020
	enum class ETigerInputActionResult TryUseDiscipline(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.TryUseDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1276f90
	void TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.TryToAbortHoldingDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1276f70
	void TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.TryToAbortChannelingDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1276f50
	enum class ETigerInputActionResult TryReleaseDiscipline(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplineComponent.TryReleaseDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1276ec0
	void TigerDelegateDisciplineUsed__DelegateSignature(enum class ETigerDisciplineSlot InDisciplineSlot); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateDisciplineUsed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateDisciplineUnlocked__DelegateSignature(enum class ETigerDisciplineSlot InDisciplineSlot); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateDisciplineUnlocked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateDeactivatedDiscipline__DelegateSignature(enum class ETigerDisciplinesEnum InDiscipline); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateDeactivatedDiscipline__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateActivatedDiscipline__DelegateSignature(enum class ETigerDisciplinesEnum InDiscipline); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateActivatedDiscipline__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void Server_UseDiscipline(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_UseDiscipline // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1276dc0
	void Server_TryToInterruptActiveDiscipline(enum class ETigerCharacterActions InAction); // Function Tiger.TigerDisciplineComponent.Server_TryToInterruptActiveDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1276d10
	void Server_TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.Server_TryToAbortHoldingDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1276cc0
	void Server_TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.Server_TryToAbortChannelingDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1276c70
	void Server_SetPreparingDiscipline(enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerDisciplineComponent.Server_SetPreparingDiscipline // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1276bc0
	void Server_SetCrosshairHitLocation(struct FVector InLocation); // Function Tiger.TigerDisciplineComponent.Server_SetCrosshairHitLocation // (Final|Net|Native|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x1276b20
	void Server_ReleaseDisciplineFailed(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_ReleaseDisciplineFailed // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1276a20
	void Server_ReleaseDiscipline(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_ReleaseDiscipline // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1276920
	void Server_ForceInterruptActiveDiscipline(); // Function Tiger.TigerDisciplineComponent.Server_ForceInterruptActiveDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12768d0
	void Server_AnimTriggerNotify(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_AnimTriggerNotify // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12767d0
	void NotifyDisciplineEvent(enum class ETigerDisciplinesEnum Discipline, enum class ETigerDisciplineEvent Event); // Function Tiger.TigerDisciplineComponent.NotifyDisciplineEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1276700
	void Multicast_UseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Multicast_UseSucceeded // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1276620
	void Multicast_TryToInterruptActiveDiscipline(enum class ETigerCharacterActions InAction); // Function Tiger.TigerDisciplineComponent.Multicast_TryToInterruptActiveDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1276590
	void Multicast_TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.Multicast_TryToAbortHoldingDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1276570
	void Multicast_TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.Multicast_TryToAbortChannelingDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1276550
	void Multicast_SucceededAdditional(struct FDisciplineUse InDisciplineUse, bool bInSendReliableToAllTargets, char InEventFlags); // Function Tiger.TigerDisciplineComponent.Multicast_SucceededAdditional // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x12763f0
	void Multicast_ReleaseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Multicast_ReleaseSucceeded // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1276310
	void Multicast_ForceInterruptActiveDiscipline(); // Function Tiger.TigerDisciplineComponent.Multicast_ForceInterruptActiveDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12762f0
	void LockDisciplineSlot(enum class ETigerDisciplineSlot InDisciplineSlot); // Function Tiger.TigerDisciplineComponent.LockDisciplineSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1276270
	void LockDiscipline(enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerDisciplineComponent.LockDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x12761f0
	bool IsRecharging(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.IsRecharging // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1276160
	bool IsOnGlobalCoolDown(); // Function Tiger.TigerDisciplineComponent.IsOnGlobalCoolDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1276130
	bool IsDisciplineUnlocked(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.IsDisciplineUnlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12760a0
	bool IsDisciplineAtMaxPowerLevel(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.IsDisciplineAtMaxPowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1276010
	bool IsDisciplineActive(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.IsDisciplineActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275f80
	bool IsAnyWeaponAbilityActive(); // Function Tiger.TigerDisciplineComponent.IsAnyWeaponAbilityActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275f50
	bool IsAnyDisciplinePreparing(); // Function Tiger.TigerDisciplineComponent.IsAnyDisciplinePreparing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275f20
	bool IsAnyDisciplineActive(); // Function Tiger.TigerDisciplineComponent.IsAnyDisciplineActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275ef0
	void GetUnlockedDisciplines(struct TArray<enum class ETigerDisciplinesEnum> OutUnlockedDisciplines); // Function Tiger.TigerDisciplineComponent.GetUnlockedDisciplines // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1275e40
	struct UTexture2D* GetUIIconForSlot(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.GetUIIconForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1275db0
	struct UTexture2D* GetUIIconForDiscipline(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetUIIconForDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1275d20
	enum class ETigerDisciplineSlot GetSlotForDiscipline(struct UTigerDisciplineBase* Discipline); // Function Tiger.TigerDisciplineComponent.GetSlotForDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275c80
	float GetRechargeSecondsLeft(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetRechargeSecondsLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275bf0
	float GetRechargePercentage(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetRechargePercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275b60
	struct UTigerDisciplineBase* GetPreparingDiscipline(); // Function Tiger.TigerDisciplineComponent.GetPreparingDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275b30
	struct FText GetNameForDiscipline(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetNameForDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1275a40
	int32_t GetDisciplinePowerLevel(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.GetDisciplinePowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12759b0
	int32_t GetDisciplineMaxPowerLevel(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.GetDisciplineMaxPowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275920
	enum class ETigerDisciplinesEnum GetDisciplineForSlot(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.GetDisciplineForSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275890
	struct UTigerDisciplineConfigBase* GetDisciplineConfigBySlot(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplineComponent.GetDisciplineConfigBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275800
	struct UTigerDisciplineConfigBase* GetDisciplineConfig(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetDisciplineConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275770
	struct UTigerDisciplineBase* GetDiscipline(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12756e0
	struct FText GetDescriptionForDiscipline(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetDescriptionForDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x12755f0
	float GetCooldownSecondsLeft(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetCooldownSecondsLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275560
	float GetCooldownPercentageBySlot(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.GetCooldownPercentageBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12754d0
	float GetCooldownPercentage(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetCooldownPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275440
	struct TArray<enum class ETigerDisciplinesEnum> GetClanDisciplinesSortedByUnlockLevel(); // Function Tiger.TigerDisciplineComponent.GetClanDisciplinesSortedByUnlockLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12753b0
	enum class ETigerDisciplinesEnum GetBlockingDiscipline(); // Function Tiger.TigerDisciplineComponent.GetBlockingDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275390
	struct UTigerDisciplineBase* GetActiveDiscipline(); // Function Tiger.TigerDisciplineComponent.GetActiveDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275360
	void EquipDiscipline(enum class ETigerDisciplineSlot Slot, enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.EquipDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1275290
	void Client_UseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_UseSucceeded // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12751b0
	void Client_UseFailed(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_UseFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12750d0
	void Client_UseAnimTriggeredFailed(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_UseAnimTriggeredFailed // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1274ff0
	void Client_UpdateDisciplineLevel(enum class ETigerDisciplinesEnum DisciplineType, int32_t PowerLevel); // Function Tiger.TigerDisciplineComponent.Client_UpdateDisciplineLevel // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1274f20
	void Client_TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.Client_TryToAbortHoldingDiscipline // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1274f00
	void Client_TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.Client_TryToAbortChannelingDiscipline // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1274ee0
	void Client_SucceededAdditional(struct FDisciplineUse DisciplineUse, char EventFlags, struct ATigerPlayer* DisciplineOwner); // Function Tiger.TigerDisciplineComponent.Client_SucceededAdditional // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1274d90
	void Client_SendScoutedCharacterToGroupMember(struct ATigerCharacter* InScoutedCharacter, float InTime); // Function Tiger.TigerDisciplineComponent.Client_SendScoutedCharacterToGroupMember // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1274cc0
	void Client_ReleaseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_ReleaseSucceeded // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1274be0
	void Client_ReleaseFailed(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_ReleaseFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1274b00
	void Client_ReduceCooldowns(float InMultiplierToReduceBy, enum class ETigerDisciplineCooldownReductionType InReductionTypes); // Function Tiger.TigerDisciplineComponent.Client_ReduceCooldowns // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1274a30
	void Client_MomentumUpdateCooldowns(); // Function Tiger.TigerDisciplineComponent.Client_MomentumUpdateCooldowns // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1274a10
	void Client_LockDiscipline(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.Client_LockDiscipline // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1274990
	void Client_LockAllDisciplines(); // Function Tiger.TigerDisciplineComponent.Client_LockAllDisciplines // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1274970
	void Client_CancelCooldown(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.Client_CancelCooldown // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12748f0
	void AuthorityReduceCooldowns(float InAmount, enum class ETigerDisciplineCooldownReductionType InReductionType); // Function Tiger.TigerDisciplineComponent.AuthorityReduceCooldowns // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1274820
	void AddScoutedCharacter(struct ATigerCharacter* InScoutedCharacter, float InTime); // Function Tiger.TigerDisciplineComponent.AddScoutedCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1274750
};

// Class Tiger.TigerDisciplineConfigs
// Size: 0x78 (Inherited: 0x28)
struct UTigerDisciplineConfigs : UObject {
	struct TMap<enum class ETigerDisciplinesEnum, struct UTigerActiveDisciplineConfig*> Configs; // 0x28(0x50)
};

// Class Tiger.TigerDisplacementConfig
// Size: 0x1d8 (Inherited: 0x170)
struct UTigerDisplacementConfig : UTigerDisciplineAnimTriggeredConfig {
	bool bShowDebugInfo; // 0x170(0x01)
	char pad_171[0x3]; // 0x171(0x03)
	float AttackingRange; // 0x174(0x04)
	float AttackingRadius; // 0x178(0x04)
	float PlayerTargetMultiplier; // 0x17c(0x04)
	float MeleeAreaMultiplier; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct UCurveFloat* AimAxisValueCurve; // 0x188(0x08)
	struct UCurveFloat* DistanceFromUseValueCurve; // 0x190(0x08)
	float Damage; // 0x198(0x04)
	float BackgroundFindTargetInterval; // 0x19c(0x04)
	float PlayerToScoutedTargetDotProductCutoff; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct USoundBase* ActivationSound; // 0x1a8(0x08)
	struct UTigerBuffDOT* DOTToApply; // 0x1b0(0x08)
	struct UTigerBuff* BuffToApplyOnCasterWhenTeleporting; // 0x1b8(0x08)
	struct UTigerWidget* TargetMarkerWidgetClass; // 0x1c0(0x08)
	struct UAnimMontage* AirMontage; // 0x1c8(0x08)
	bool bInterruptClimbOnTarget; // 0x1d0(0x01)
	char pad_1D1[0x7]; // 0x1d1(0x07)
};

// Class Tiger.TigerDisciplineDisplacement
// Size: 0x148 (Inherited: 0xf0)
struct UTigerDisciplineDisplacement : UTigerDisciplineAnimTriggered {
	struct UTigerWidget* TargetMarker; // 0xf0(0x08)
	struct UTigerDisplacementConfig* Config; // 0xf8(0x08)
	char pad_100[0x10]; // 0x100(0x10)
	struct ATigerCharacter* ClientSidePotentialTarget; // 0x110(0x08)
	char pad_118[0x30]; // 0x118(0x30)

	void OnLockTarget(); // Function Tiger.TigerDisciplineDisplacement.OnLockTarget // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerEarthshockConfig
// Size: 0x258 (Inherited: 0x160)
struct UTigerEarthshockConfig : UTigerActiveDisciplineConfig {
	struct FText EffectRadiusText; // 0x160(0x18)
	struct FText EffectRadiusSuffix; // 0x178(0x18)
	float SurfaceAngleThreshold; // 0x190(0x04)
	float KnockupInitialVelocity; // 0x194(0x04)
	float HitboxConeHalfAngleInDegrees; // 0x198(0x04)
	float TerrainBlockTraceHeightGrace; // 0x19c(0x04)
	float ConeDamageRadius; // 0x1a0(0x04)
	float InnerHitSphereRadius; // 0x1a4(0x04)
	float ConeForwardOffset; // 0x1a8(0x04)
	float SphereTraceRadius; // 0x1ac(0x04)
	float MaxRangeAngleDeviationThreshold; // 0x1b0(0x04)
	float MinRangeAngleDeviationThreshold; // 0x1b4(0x04)
	float MinimumRange; // 0x1b8(0x04)
	float MaximumRange; // 0x1bc(0x04)
	float MaximumHeight; // 0x1c0(0x04)
	float DownTraceLength; // 0x1c4(0x04)
	float InitialJumpApexHeight; // 0x1c8(0x04)
	bool bUseSurfaceProjectedForward; // 0x1cc(0x01)
	char pad_1CD[0x3]; // 0x1cd(0x03)
	float AirAttackSpeed; // 0x1d0(0x04)
	float MaxTargetEffectDistanceUp; // 0x1d4(0x04)
	float MaxTargetEffectDistanceDown; // 0x1d8(0x04)
	float StunTime; // 0x1dc(0x04)
	struct UCurveFloat* TravelDistanceDamageMultiplierCurve; // 0x1e0(0x08)
	float Damage; // 0x1e8(0x04)
	float WallAngleLandingAnimationThreshold; // 0x1ec(0x04)
	float StartLandingAnimationOffsetGround; // 0x1f0(0x04)
	float StartLandingAnimationOffsetWall; // 0x1f4(0x04)
	struct UAnimMontage* AirAttackAnimationJump; // 0x1f8(0x08)
	struct UAnimMontage* AirAttackAnimationMidAir; // 0x200(0x08)
	struct UAnimMontage* AirAttackAnimationLandGround; // 0x208(0x08)
	struct UAnimMontage* AirAttackAnimationLandWall; // 0x210(0x08)
	struct UAkAudioEvent* TakeOffAudioEvent; // 0x218(0x08)
	struct UAkAudioEvent* LaunchAudioEvent; // 0x220(0x08)
	struct UAkAudioEvent* HitGroundSound; // 0x228(0x08)
	struct UAkAudioEvent* ImpactWarningSound; // 0x230(0x08)
	float CameraShakeBoundaryHeight; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct UMatineeCameraShake* CameraLowEffectShake; // 0x240(0x08)
	struct UMatineeCameraShake* CameraHighEffectShake; // 0x248(0x08)
	struct UMatineeCameraShake* CameraAirEffectShake; // 0x250(0x08)
};

// Class Tiger.TigerDisciplineEarthshock
// Size: 0x178 (Inherited: 0x78)
struct UTigerDisciplineEarthshock : UTigerDisciplineBase {
	struct FEarthshockUseDataNetworked EarthshockUseData; // 0x78(0x34)
	char pad_AC[0x4]; // 0xac(0x04)
	struct UTigerEarthshockConfig* EarthshockConfig; // 0xb0(0x08)
	char pad_B8[0xc0]; // 0xb8(0xc0)

	void OnTargetIndicatorUpdated(bool bInHasTargetLocation, struct FVector InTargetLocation, struct FVector InSurfaceNormal, bool bInTargetIsWall); // Function Tiger.TigerDisciplineEarthshock.OnTargetIndicatorUpdated // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnSpawnTargetIndicator(); // Function Tiger.TigerDisciplineEarthshock.OnSpawnTargetIndicator // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnRemoveTargetIndicator(); // Function Tiger.TigerDisciplineEarthshock.OnRemoveTargetIndicator // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnLanded(struct FVector InLocation, struct FVector InSurfaceNormal, bool bInTargetIsWall); // Function Tiger.TigerDisciplineEarthshock.OnLanded // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnEnemyCharacterHit(struct ATigerCharacter* InHitCharacter); // Function Tiger.TigerDisciplineEarthshock.OnEnemyCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDescentForcedMoveDone(enum class ETigerForcedMoveResult ForcedMoveResult); // Function Tiger.TigerDisciplineEarthshock.OnDescentForcedMoveDone // (Final|Native|Private) // @ game+0x127ab00
	void Multicast_SimulatedProxyImpact(struct FVector InConeDirection); // Function Tiger.TigerDisciplineEarthshock.Multicast_SimulatedProxyImpact // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x127aa80
	float GetLeapTime(struct FVector InLeapVector); // Function Tiger.TigerDisciplineEarthshock.GetLeapTime // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x127a730
	struct FVector GetConeDirection(); // Function Tiger.TigerDisciplineEarthshock.GetConeDirection // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x127a700
	bool EvaluateIsTargetLocationValid(bool bIsWall, struct FHitResult InHitSurface); // Function Tiger.TigerDisciplineEarthshock.EvaluateIsTargetLocationValid // (Event|Protected|HasOutParms|BlueprintEvent|Const) // @ game+0x16c0340
	struct FVector CalculateKnockbackForce(struct ATigerCharacter* InHitCharacter); // Function Tiger.TigerDisciplineEarthshock.CalculateKnockbackForce // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x127a3d0
	struct FVector CalculateConeDirection(); // Function Tiger.TigerDisciplineEarthshock.CalculateConeDirection // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x127a390
};

// Class Tiger.TigerFlowerOfDeathConfig
// Size: 0x190 (Inherited: 0x160)
struct UTigerFlowerOfDeathConfig : UTigerActiveDisciplineConfig {
	bool ShowDebugCapsule; // 0x160(0x01)
	char pad_161[0x3]; // 0x161(0x03)
	float TargetRadius; // 0x164(0x04)
	float OverrideDuration; // 0x168(0x04)
	float Damage; // 0x16c(0x04)
	struct UObject* EffectBlueprint; // 0x170(0x08)
	struct UAnimMontage* AttackerAnimation; // 0x178(0x08)
	struct USoundBase* ActivationSound; // 0x180(0x08)
	struct UTigerBuff* SpeedBuff; // 0x188(0x08)
};

// Class Tiger.TigerDisciplineFlowerOfDeath
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineFlowerOfDeath : UTigerDisciplineBase {
	struct UTigerFlowerOfDeathConfig* Config; // 0x78(0x08)
	char pad_80[0x18]; // 0x80(0x18)
};

// Class Tiger.TigerFOTTConfig
// Size: 0x2b0 (Inherited: 0x160)
struct UTigerFOTTConfig : UTigerActiveDisciplineConfig {
	bool bDebugHitboxVisualization; // 0x160(0x01)
	bool bDebugWallhitAngle; // 0x161(0x01)
	char pad_162[0x2]; // 0x162(0x02)
	struct FVector HitBoxExtents; // 0x164(0x0c)
	struct FVector HitBoxOffset; // 0x170(0x0c)
	char pad_17C[0x4]; // 0x17c(0x04)
	struct FText KnockbackDistanceText; // 0x180(0x18)
	struct TArray<float> KnockbackDistanceTooltipValues; // 0x198(0x10)
	struct FText KnockbackDistanceSuffix; // 0x1a8(0x18)
	float KnockbackTime; // 0x1c0(0x04)
	float TimeBeforeRagdollOnDeadNPCs; // 0x1c4(0x04)
	float RagdollKnockbackForceMultiplier; // 0x1c8(0x04)
	float KnockbackStunDuration; // 0x1cc(0x04)
	float KnockbackAngle; // 0x1d0(0x04)
	float MaxChargeDuration; // 0x1d4(0x04)
	float AttackDuration; // 0x1d8(0x04)
	float MaxWallStunAnglePitchDiff; // 0x1dc(0x04)
	float MaxWallStunAngleYawDiff; // 0x1e0(0x04)
	float MinimumChargeupTime; // 0x1e4(0x04)
	float EndOfAttackPercentageSpeedKept; // 0x1e8(0x04)
	float HitTargetsPercentageSpeedKept; // 0x1ec(0x04)
	struct UTigerBuff* SelfbuffWhileCharging; // 0x1f0(0x08)
	struct UTigerBuff* TargetKnockedIntoWallBuff; // 0x1f8(0x08)
	struct UCurveFloat* TravelDistance; // 0x200(0x08)
	struct TArray<struct UCurveFloat*> KnockbackDistance; // 0x208(0x10)
	struct UCurveFloat* FistDamage; // 0x218(0x08)
	struct UCurveFloat* TargetWallHitDamage; // 0x220(0x08)
	struct UCurveFloat* TargetWallHitStun; // 0x228(0x08)
	float WallEffectRadius; // 0x230(0x04)
	float WallEffectStayTime; // 0x234(0x04)
	float WallEffectFadeTime; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct UTigerAnimationSetAsset* ChargeupBlendspaceAnimationSet; // 0x240(0x08)
	struct UAnimMontage* TargetKnockbackAnimation; // 0x248(0x08)
	struct UCurveFloat* KnockbackAnimationPlayrate; // 0x250(0x08)
	struct UAnimMontage* ChargeupAnimation; // 0x258(0x08)
	struct UAnimMontage* ChargeupAnimationAir; // 0x260(0x08)
	float ChargeupAnimationSpeed; // 0x268(0x04)
	struct FName FullyChargedSectionName; // 0x26c(0x08)
	char pad_274[0x4]; // 0x274(0x04)
	struct UAnimMontage* AttackerAnimation; // 0x278(0x08)
	struct UAnimMontage* AttackerAnimationAir; // 0x280(0x08)
	float AttackAnimationSpeed; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UAnimMontage* RecoverAnimation; // 0x290(0x08)
	struct UAnimMontage* RecoverAnimationAir; // 0x298(0x08)
	struct UAnimMontage* WallHitStunAnimation; // 0x2a0(0x08)
	struct UAkAudioEvent* WallHitAudioEvent; // 0x2a8(0x08)
};

// Class Tiger.TigerDisciplineFOTT
// Size: 0xf0 (Inherited: 0x78)
struct UTigerDisciplineFOTT : UTigerDisciplineBase {
	struct UTigerFOTTConfig* Config; // 0x78(0x08)
	char pad_80[0x30]; // 0x80(0x30)
	struct UParticleSystemComponent* PlayerChargeupParticles; // 0xb0(0x08)
	struct UParticleSystemComponent* PlayerAttackParticles; // 0xb8(0x08)
	struct UParticleSystemComponent* PlayerAttackEndParticles; // 0xc0(0x08)
	char pad_C8[0x28]; // 0xc8(0x28)

	void TickDisciplineEvent(float DeltaTime); // Function Tiger.TigerDisciplineFOTT.TickDisciplineEvent // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OwnerCollided(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult Hit); // Function Tiger.TigerDisciplineFOTT.OwnerCollided // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x127ab80
	void OnTargetHitSomething(struct ATigerCharacter* Target, struct FVector HitLocation, struct FVector HitNormal); // Function Tiger.TigerDisciplineFOTT.OnTargetHitSomething // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnStartedChargeup(); // Function Tiger.TigerDisciplineFOTT.OnStartedChargeup // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnReleasedChargeup(); // Function Tiger.TigerDisciplineFOTT.OnReleasedChargeup // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnHitSomething(bool bHitACharacter); // Function Tiger.TigerDisciplineFOTT.OnHitSomething // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnCollidedWithWall(struct FVector HitLocation, struct FVector HitNormal); // Function Tiger.TigerDisciplineFOTT.OnCollidedWithWall // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnAbortedChargeup(); // Function Tiger.TigerDisciplineFOTT.OnAbortedChargeup // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Multicast_FOTTKnockback(struct ATigerCharacter* TigerChar, struct FVector HitLocation, struct FVector EndLocation, bool bWasKilledByHit); // Function Tiger.TigerDisciplineFOTT.Multicast_FOTTKnockback // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x127a930
	float GetChargeupProgress(bool ClampProgressAtOne); // Function Tiger.TigerDisciplineFOTT.GetChargeupProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127a660
	void CharacterCollided(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult Hit); // Function Tiger.TigerDisciplineFOTT.CharacterCollided // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x127a480
	void ApplyFOTT(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineFOTT.ApplyFOTT // (Final|Native|Private|HasOutParms) // @ game+0x127a2a0
};

// Class Tiger.TigerFrenzyConfig
// Size: 0x1a0 (Inherited: 0x160)
struct UTigerFrenzyConfig : UTigerActiveDisciplineConfig {
	float RoarRadius; // 0x160(0x04)
	float RoarDamage; // 0x164(0x04)
	float GroundedTime; // 0x168(0x04)
	float ImmobilizeTime; // 0x16c(0x04)
	float DelayBeforeRoarEffect; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct UTigerBuff* FrenzyBuff; // 0x178(0x08)
	struct UAnimMontage* RoarAnimation; // 0x180(0x08)
	struct USoundBase* RoarSound; // 0x188(0x08)
	struct USoundBase* BuffActiveSound; // 0x190(0x08)
	struct UParticleSystem* RoarParticles; // 0x198(0x08)
};

// Class Tiger.TigerDisciplineFrenzy
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineFrenzy : UTigerDisciplineBase {
	char pad_78[0x10]; // 0x78(0x10)
	struct UTigerFrenzyConfig* Config; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerGuardBreakConfig
// Size: 0x198 (Inherited: 0x160)
struct UTigerGuardBreakConfig : UTigerActiveDisciplineConfig {
	float DashDistance; // 0x160(0x04)
	float StartupTime; // 0x164(0x04)
	float DashTime; // 0x168(0x04)
	float StrikeDelay; // 0x16c(0x04)
	float StrikeDuration; // 0x170(0x04)
	float OnHitDamage; // 0x174(0x04)
	float BlockedOnHitDamage; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
	struct UTigerBuff* OnHitDebuff; // 0x180(0x08)
	struct FVector HitBoxSize; // 0x188(0x0c)
	bool DrawDebugInfo; // 0x194(0x01)
	char pad_195[0x3]; // 0x195(0x03)

	void OnTargetsHitByStrike(struct TArray<struct ATigerCharacter*> Targets); // Function Tiger.TigerGuardBreakConfig.OnTargetsHitByStrike // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnStrike(struct ATigerCharacter* Character); // Function Tiger.TigerGuardBreakConfig.OnStrike // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStartup(struct ATigerCharacter* Character); // Function Tiger.TigerGuardBreakConfig.OnStartup // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnDash(struct ATigerCharacter* Character, struct FVector Location, struct FVector Direction); // Function Tiger.TigerGuardBreakConfig.OnDash // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerDisciplineGuardBreak
// Size: 0xa8 (Inherited: 0x78)
struct UTigerDisciplineGuardBreak : UTigerDisciplineBase {
	struct UTigerGuardBreakConfig* Config; // 0x78(0x08)
	char pad_80[0x28]; // 0x80(0x28)
};

// Class Tiger.TigerIncitePainConfig
// Size: 0x180 (Inherited: 0x170)
struct UTigerIncitePainConfig : UTigerDisciplineAnimTriggeredConfig {
	float DamageAmount; // 0x170(0x04)
	float Radius; // 0x174(0x04)
	float Reach; // 0x178(0x04)
	bool bDebugDraw; // 0x17c(0x01)
	char pad_17D[0x3]; // 0x17d(0x03)
};

// Class Tiger.TigerDisciplineIncitePain
// Size: 0xf8 (Inherited: 0xf0)
struct UTigerDisciplineIncitePain : UTigerDisciplineAnimTriggered {
	struct UTigerIncitePainConfig* Config; // 0xf0(0x08)
};

// Class Tiger.TigerJumpConfig
// Size: 0x1f0 (Inherited: 0x170)
struct UTigerJumpConfig : UTigerDisciplineAnimTriggeredConfig {
	bool bDebugJumpline; // 0x170(0x01)
	bool bDebugBlockJump; // 0x171(0x01)
	char pad_172[0x2]; // 0x172(0x02)
	float JumpVelocity; // 0x174(0x04)
	bool bAllowDoublejumpAfterDiscipline; // 0x178(0x01)
	bool bShouldDelayJumpInAir; // 0x179(0x01)
	char pad_17A[0x6]; // 0x17a(0x06)
	struct UAnimMontage* LaunchMontage; // 0x180(0x08)
	struct UAnimMontage* GroundAnticipationMontage; // 0x188(0x08)
	float CameraPresetDuration; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct UMaterial* JumpFullscreenPostFX; // 0x198(0x08)
	struct UMaterialParameterCollection* JumpPostFXCollection; // 0x1a0(0x08)
	struct FName JumpPostFXStrengthParameterName; // 0x1a8(0x08)
	float JumpPostFXMaxStrength; // 0x1b0(0x04)
	float JumpEffectsDuration; // 0x1b4(0x04)
	float JumpEffectsLerpInTime; // 0x1b8(0x04)
	float JumpEffectsLerpOutTime; // 0x1bc(0x04)
	struct UAkAudioEvent* LeapStartedAudio; // 0x1c0(0x08)
	struct FVector FeetObstacleOffset; // 0x1c8(0x0c)
	float ObstacleDistanceCheck; // 0x1d4(0x04)
	float PartiallyBlockedJumpModifier; // 0x1d8(0x04)
	float BackLeapPitch; // 0x1dc(0x04)
	struct UCurveFloat* LeapPitchCurve; // 0x1e0(0x08)
	bool bCanLeapBackward; // 0x1e8(0x01)
	char pad_1E9[0x3]; // 0x1e9(0x03)
	float AnimationBlendoutTime; // 0x1ec(0x04)
};

// Class Tiger.TigerDisciplineJump
// Size: 0x158 (Inherited: 0xf0)
struct UTigerDisciplineJump : UTigerDisciplineAnimTriggered {
	char pad_F0[0x8]; // 0xf0(0x08)
	struct UTigerJumpConfig* Config; // 0xf8(0x08)
	struct UCapsuleComponent* CapsuleOverlapComponent; // 0x100(0x08)
	char pad_108[0x40]; // 0x108(0x40)
	struct TArray<struct AActor*> ActorsThatOverlapped; // 0x148(0x10)

	void OnLeapStarted(); // Function Tiger.TigerDisciplineJump.OnLeapStarted // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnLeapEnded(); // Function Tiger.TigerDisciplineJump.OnLeapEnded // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	struct FVector GetTargetPosition(struct FVector PlayerEyeLocation, struct FRotator CameraRotation, float JumpCheckDistance); // Function Tiger.TigerDisciplineJump.GetTargetPosition // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x127ed80
};

// Class Tiger.TigerLaceratingThrowConfig
// Size: 0x1c8 (Inherited: 0x170)
struct UTigerLaceratingThrowConfig : UTigerDisciplineAnimTriggeredConfig {
	struct ATigerLaceratingThrowProjectile* KnifeActor; // 0x170(0x08)
	struct TArray<struct UTigerBuff*> BuffToApplyOnHit; // 0x178(0x10)
	float ProjectileSpeed; // 0x188(0x04)
	float DamageOnHit; // 0x18c(0x04)
	float Reach; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct FText SlowText; // 0x198(0x18)
	struct FText SlowSuffix; // 0x1b0(0x18)
};

// Class Tiger.TigerDisciplineLaceratingThrow
// Size: 0xf8 (Inherited: 0xf0)
struct UTigerDisciplineLaceratingThrow : UTigerDisciplineAnimTriggered {
	struct UTigerLaceratingThrowConfig* Config; // 0xf0(0x08)
};

// Class Tiger.TigerMajestyConfig
// Size: 0x1c0 (Inherited: 0x160)
struct UTigerMajestyConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* Montage; // 0x160(0x08)
	float ApplyEffectTime; // 0x168(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)
	struct FText CharmDurationText; // 0x170(0x18)
	struct FText CharmDurationSuffix; // 0x188(0x18)
	struct TArray<struct UTigerMajestyBuff*> CharmedBuff; // 0x1a0(0x10)
	bool bDoFacingCheckOnNPCs; // 0x1b0(0x01)
	bool bIsEntityImmune; // 0x1b1(0x01)
	bool bRequireLineOfSight; // 0x1b2(0x01)
	char pad_1B3[0x1]; // 0x1b3(0x01)
	float Radius; // 0x1b4(0x04)
	float FacingAllowedYawDifference; // 0x1b8(0x04)
	bool bDebugDraw; // 0x1bc(0x01)
	char pad_1BD[0x3]; // 0x1bd(0x03)
};

// Class Tiger.TigerMajestyBuffInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerMajestyBuffInstance : UTigerBuffInstance {
};

// Class Tiger.TigerMajestyBuff
// Size: 0x278 (Inherited: 0x270)
struct UTigerMajestyBuff : UTigerBuff {
	float NPCDuration; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class Tiger.TigerDisciplineMajesty
// Size: 0x88 (Inherited: 0x78)
struct UTigerDisciplineMajesty : UTigerDisciplineBase {
	struct UTigerMajestyConfig* Config; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)
};

// Class Tiger.TigerParticleStrategy
// Size: 0x28 (Inherited: 0x28)
struct UTigerParticleStrategy : UObject {
};

// Class Tiger.TigerParticleStrategyPostSpawn
// Size: 0x28 (Inherited: 0x28)
struct UTigerParticleStrategyPostSpawn : UTigerParticleStrategy {

	void ExecutePostSpawnStrategy(struct UParticleSystemComponent* InParticleToExecuteOn, struct ATigerCharacter* InParticleInstigator); // Function Tiger.TigerParticleStrategyPostSpawn.ExecutePostSpawnStrategy // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x12e5ac0
};

// Class Tiger.TigerDisciplineParticleStrategy
// Size: 0x58 (Inherited: 0x28)
struct UTigerDisciplineParticleStrategy : UTigerParticleStrategyPostSpawn {
	struct FLinearColor StandardColorOverride; // 0x28(0x10)
	struct FLinearColor EnemyColorOverride; // 0x38(0x10)
	enum class ETigerDisciplineParticleStrategyColorModes ColorOverrideMode; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	struct FName ColorParameterName; // 0x4c(0x08)
	char pad_54[0x4]; // 0x54(0x04)

	void PickColors(struct UParticleSystemComponent* InParticleToExecuteOn, struct ATigerCharacter* InParticleInstigator, struct FLinearColor OutStandardColorOverride, struct FLinearColor OutEnemyColorOverride); // Function Tiger.TigerDisciplineParticleStrategy.PickColors // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x127f840
	void ApplyColors(struct UParticleSystemComponent* InParticleToExecuteOn, struct ATigerCharacter* InParticleInstigator, struct FLinearColor InStandardColorOverride, struct FLinearColor InEnemyColorOverride); // Function Tiger.TigerDisciplineParticleStrategy.ApplyColors // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x127eb30
};

// Class Tiger.TigerPassionConfig
// Size: 0x280 (Inherited: 0x160)
struct UTigerPassionConfig : UTigerActiveDisciplineConfig {
	float ProjectileMinLengthScale; // 0x160(0x04)
	float ProjectileMaxLengthScale; // 0x164(0x04)
	float ProjectileMinWidthScale; // 0x168(0x04)
	float ProjectileMaxWidthScale; // 0x16c(0x04)
	float ProjectileMinHeightScale; // 0x170(0x04)
	float ProjectileMaxHeightScale; // 0x174(0x04)
	float ProjectileMinSpeed; // 0x178(0x04)
	float ProjectileMaxSpeed; // 0x17c(0x04)
	float ProjectileMinRange; // 0x180(0x04)
	float ProjectileMaxRange; // 0x184(0x04)
	float PanicMinDuration; // 0x188(0x04)
	float PanicMaxDuration; // 0x18c(0x04)
	float ApathyMinDuration; // 0x190(0x04)
	float ApathyMaxDuration; // 0x194(0x04)
	float ApathyStartSlowMultiplier; // 0x198(0x04)
	float ApathyEndSlowMultiplier; // 0x19c(0x04)
	float WrathMinDuration; // 0x1a0(0x04)
	float WrathMaxDuration; // 0x1a4(0x04)
	float WrathMinAdditionalDamageMultiplier; // 0x1a8(0x04)
	float WrathMaxAdditionalDamageMultiplier; // 0x1ac(0x04)
	struct UAnimMontage* ChooseEffectAnimation; // 0x1b0(0x08)
	struct UAnimMontage* ChargeEffectAnimation; // 0x1b8(0x08)
	struct UAnimMontage* ReleaseEffectAnimation; // 0x1c0(0x08)
	struct TMap<enum class ETigerPassionEffect, struct UTigerBuff*> EffectBuffs; // 0x1c8(0x50)
	struct TMap<enum class ETigerPassionEffect, struct UParticleSystem*> ProjectileParticles; // 0x218(0x50)
	struct ATigerPassionProjectile* ProjectileActor; // 0x268(0x08)
	float TimeBetweenEffectChange; // 0x270(0x04)
	float ChooseEffectTimeOut; // 0x274(0x04)
	float MaxChargeTime; // 0x278(0x04)
	float UsageCooldown; // 0x27c(0x04)
};

// Class Tiger.TigerDisciplinePassion
// Size: 0xa0 (Inherited: 0x78)
struct UTigerDisciplinePassion : UTigerDisciplineBase {
	struct UTigerPassionConfig* Config; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
};

// Class Tiger.TigerProjectionDashConfig
// Size: 0x1f0 (Inherited: 0x170)
struct UTigerProjectionDashConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAnimMontage* DownedMontage; // 0x170(0x08)
	struct UAnimMontage* DashStartMontage; // 0x178(0x08)
	struct UAnimMontage* DashEnterMontage; // 0x180(0x08)
	struct UAnimMontage* DashExitMontage; // 0x188(0x08)
	struct UTexture2D* DashIcon; // 0x190(0x08)
	struct UTigerBuff* DashBuff; // 0x198(0x08)
	struct UTigerBuff* ThornsBuff; // 0x1a0(0x08)
	struct ATigerProjectionDashProjectile* ProjectionActor; // 0x1a8(0x08)
	struct AActor* TargetIndicatorActor; // 0x1b0(0x08)
	struct FVector TargetingRayStartOffset; // 0x1b8(0x0c)
	float DelayBeforeDashIsPossible; // 0x1c4(0x04)
	float DashSpeed; // 0x1c8(0x04)
	float DashExitVelocityScale; // 0x1cc(0x04)
	float DashEnterDuration; // 0x1d0(0x04)
	float DashExitDuration; // 0x1d4(0x04)
	float ProjectionMaxDistance; // 0x1d8(0x04)
	float ProjectionAutoDespawnDistance; // 0x1dc(0x04)
	float ProjectionSpeed; // 0x1e0(0x04)
	float ProjectionStoppedLifetime; // 0x1e4(0x04)
	float TargetIndicatorLerpSpeed; // 0x1e8(0x04)
	bool bDashMoveToExit; // 0x1ec(0x01)
	enum class ETigerProjectionDashCooldownStart CooldownStart; // 0x1ed(0x01)
	char pad_1EE[0x2]; // 0x1ee(0x02)
};

// Class Tiger.TigerDisciplineProjectionDash
// Size: 0x168 (Inherited: 0xf0)
struct UTigerDisciplineProjectionDash : UTigerDisciplineAnimTriggered {
	struct FVector DashStartLocation; // 0xf0(0x0c)
	struct FVector DashEnterLocation; // 0xfc(0x0c)
	struct FVector DashExitLocation; // 0x108(0x0c)
	struct FVector DashEndLocation; // 0x114(0x0c)
	struct UTigerProjectionDashConfig* Config; // 0x120(0x08)
	struct ATigerProjectionDashProjectile* SpawnedProjection; // 0x128(0x08)
	char pad_130[0x18]; // 0x130(0x18)
	struct AActor* TargetIndicator; // 0x148(0x08)
	char pad_150[0x18]; // 0x150(0x18)

	void Server_StopProjection(float InLerpAlpha); // Function Tiger.TigerDisciplineProjectionDash.Server_StopProjection // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x127fad0
	void OnProjectionDestroyedOnClient(enum class ETigerProjectionDashEndReason InReason); // Function Tiger.TigerDisciplineProjectionDash.OnProjectionDestroyedOnClient // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnOwnerLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerDisciplineProjectionDash.OnOwnerLifeStatusChanged // (Final|Native|Protected) // @ game+0x127f610
	void OnForcedMoveResult(enum class ETigerForcedMoveResult InForcedMoveResult); // Function Tiger.TigerDisciplineProjectionDash.OnForcedMoveResult // (Final|Native|Private) // @ game+0x127f590
	void OnDashStart(); // Function Tiger.TigerDisciplineProjectionDash.OnDashStart // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDashExit(); // Function Tiger.TigerDisciplineProjectionDash.OnDashExit // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDashEnter(); // Function Tiger.TigerDisciplineProjectionDash.OnDashEnter // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDashEnd(); // Function Tiger.TigerDisciplineProjectionDash.OnDashEnd // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Multicast_DashStart(struct FVector InStartLocation, struct FVector InEnterLocation, struct FVector InEndLocation); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashStart // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x127f280
	void Multicast_DashExit(struct FVector InExitLocation, struct FVector InEndLocation); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashExit // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x127f190
	void Multicast_DashEnter(); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashEnter // (Net|Native|Event|NetMulticast|Protected) // @ game+0x127f170
	void Multicast_DashEnd(struct FVector InStartLocation, struct FVector InEnterLocation, struct FVector InExitLocation, struct FVector InEndLocation); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashEnd // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x127efe0
	float GetCurrentProjectionMaxDistanceRatio(); // Function Tiger.TigerDisciplineProjectionDash.GetCurrentProjectionMaxDistanceRatio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127ece0
	void Client_TimeoutProjection(); // Function Tiger.TigerDisciplineProjectionDash.Client_TimeoutProjection // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x127ecc0
	void Client_DespawnProjectionDueToRange(); // Function Tiger.TigerDisciplineProjectionDash.Client_DespawnProjectionDueToRange // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x127eca0
};

// Class Tiger.TigerRejuvenatingVoiceConfig
// Size: 0x1c8 (Inherited: 0x170)
struct UTigerRejuvenatingVoiceConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAnimMontage* DownedMontage; // 0x170(0x08)
	struct UAnimMontage* DownedCancelMontage; // 0x178(0x08)
	struct UAnimMontage* DownedInterruptMontage; // 0x180(0x08)
	struct UAnimMontage* CancelMontage; // 0x188(0x08)
	struct UAnimMontage* InterruptMontage; // 0x190(0x08)
	struct UTigerBuff* HealingBuff; // 0x198(0x08)
	float ReceivedDamageThreshold; // 0x1a0(0x04)
	float CasterHealRange; // 0x1a4(0x04)
	float ProjectionHealRange; // 0x1a8(0x04)
	float ProjectionHealMultiplier; // 0x1ac(0x04)
	float SelfHealFlat; // 0x1b0(0x04)
	float SelfHealPercent; // 0x1b4(0x04)
	float TeamHealFlat; // 0x1b8(0x04)
	float TeamHealPercent; // 0x1bc(0x04)
	float HealTickRate; // 0x1c0(0x04)
	bool bOnlyHealRecentDamage; // 0x1c4(0x01)
	bool bRecentDamageVisibleForGroup; // 0x1c5(0x01)
	bool bShouldGlideWhenActive; // 0x1c6(0x01)
	char pad_1C7[0x1]; // 0x1c7(0x01)
};

// Class Tiger.TigerDisciplineRejuvenatingVoice
// Size: 0x138 (Inherited: 0xf0)
struct UTigerDisciplineRejuvenatingVoice : UTigerDisciplineAnimTriggered {
	struct UTigerRejuvenatingVoiceConfig* Config; // 0xf0(0x08)
	char pad_F8[0x40]; // 0xf8(0x40)

	void PulseHeal(float InHealMultiplier, bool bInOnCaster, bool bInOnProjection); // Function Tiger.TigerDisciplineRejuvenatingVoice.PulseHeal // (Final|Native|Public|BlueprintCallable) // @ game+0x127f9b0
	void OnPlayerExit(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnPlayerExit // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnPlayerEnter(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnPlayerEnter // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnPlayerDamageTaken(struct AActor* InDamagedActor, float InDamage, struct UDamageType* InDamageType, struct AController* InInstigatedBy, struct AActor* InDamageCauser); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnPlayerDamageTaken // (Final|Native|Public) // @ game+0x127f690
	void OnHealStop(); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnHealStop // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnHealStart(); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnHealStart // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnHealPulse(bool bInOnProjection); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnHealPulse // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Multicast_PlayerExit(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_PlayerExit // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x127f500
	void Multicast_PlayerEnter(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_PlayerEnter // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x127f470
	void Multicast_InterruptChanneling(); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_InterruptChanneling // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x127eca0
	void Multicast_HealStop(); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_HealStop // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x127ecc0
	void Multicast_HealStart(); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_HealStart // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x127f450
	void Multicast_HealPulse(bool bInOnProjection); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_HealPulse // (Net|Native|Event|NetMulticast|Protected) // @ game+0x127f3c0
	void Multicast_BuffHealTick(struct ATigerPlayer* InBuffOwner, char InHealAmount); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_BuffHealTick // (Net|Native|Event|NetMulticast|Protected) // @ game+0x127ef10
	bool HasProjection(); // Function Tiger.TigerDisciplineRejuvenatingVoice.HasProjection // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x127eee0
	struct FVector GetProjectionLocation(); // Function Tiger.TigerDisciplineRejuvenatingVoice.GetProjectionLocation // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x127ed40
	struct AActor* GetProjectionActor(); // Function Tiger.TigerDisciplineRejuvenatingVoice.GetProjectionActor // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x127ed10
};

// Class Tiger.TigerRepositionConfig
// Size: 0x188 (Inherited: 0x160)
struct UTigerRepositionConfig : UTigerActiveDisciplineConfig {
	struct ATigerRepositionTracer* TracerActor; // 0x160(0x08)
	struct UTigerBuffReposition* RewindBuff; // 0x168(0x08)
	float RewindTimeSeconds; // 0x170(0x04)
	float SampleRate; // 0x174(0x04)
	float RewindSpeed; // 0x178(0x04)
	float RewindPlaybackTimeMin; // 0x17c(0x04)
	float RewindPlaybackTimeMax; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
};

// Class Tiger.TigerBuffRepositionInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffRepositionInstance : UTigerBuffInstance {
	struct UPrimitiveComponent* Root; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffReposition
// Size: 0x278 (Inherited: 0x270)
struct UTigerBuffReposition : UTigerBuffStun {
	float NoiseNotifyEventRange; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class Tiger.TigerRepositionTracer
// Size: 0x228 (Inherited: 0x228)
struct ATigerRepositionTracer : AActor {

	void Trace(struct TArray<struct FVector> PreviousLocations, float Duration); // Function Tiger.TigerRepositionTracer.Trace // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerDisciplineReposition
// Size: 0xa0 (Inherited: 0x78)
struct UTigerDisciplineReposition : UTigerDisciplineBase {
	struct UTigerRepositionConfig* Config; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
};

// Class Tiger.TigerScoutsConfig
// Size: 0x1c0 (Inherited: 0x170)
struct UTigerScoutsConfig : UTigerDisciplineAnimTriggeredConfig {
	struct ATigerFamiliarScout* ScoutActor; // 0x170(0x08)
	struct UTigerFamiliarScoutPassive* PassiveClass; // 0x178(0x08)
	float RevealDuration; // 0x180(0x04)
	float PassiveScanRadius; // 0x184(0x04)
	float ActiveScanRadius; // 0x188(0x04)
	float ScoutDespawnDistance; // 0x18c(0x04)
	float Reach; // 0x190(0x04)
	float ScoutingMaxDistanceFromOwner; // 0x194(0x04)
	float TargetLocationNormalOffset; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct UAnimMontage* AirMontage; // 0x1a0(0x08)
	struct UAkAudioEvent* RevealedCharacterAudioEvent; // 0x1a8(0x08)
	struct FName BoneToSpawnFrom; // 0x1b0(0x08)
	bool bShouldAlwaysStartFromPlayer; // 0x1b8(0x01)
	char pad_1B9[0x7]; // 0x1b9(0x07)
};

// Class Tiger.TigerDisciplineScouts
// Size: 0x110 (Inherited: 0xf0)
struct UTigerDisciplineScouts : UTigerDisciplineAnimTriggered {
	struct UTigerFamiliarScoutPassive* Server_PassiveComponent; // 0xf0(0x08)
	struct ATigerFamiliarScout* Server_SpawnedFamiliar; // 0xf8(0x08)
	struct UTigerScoutsConfig* Config; // 0x100(0x08)
	char pad_108[0x8]; // 0x108(0x08)

	void Multicast_ScoutSpawnedResult(bool bAreScoutsOut); // Function Tiger.TigerDisciplineScouts.Multicast_ScoutSpawnedResult // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12842f0
};

// Class Tiger.TigerShacklesConfig
// Size: 0x1a0 (Inherited: 0x160)
struct UTigerShacklesConfig : UTigerActiveDisciplineConfig {
	struct UMaterialInterface* ShacklesAimingDecal; // 0x160(0x08)
	float MaxRange; // 0x168(0x04)
	float ShacklesAoeSize; // 0x16c(0x04)
	float ExplosionDepth; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct TArray<float> ExplosionDamage; // 0x178(0x10)
	struct ATigerShacklesMine* ShackleMine; // 0x188(0x08)
	float MineLifeTime; // 0x190(0x04)
	float DelayBeforeShackleActivation; // 0x194(0x04)
	struct FName CastAnimationName; // 0x198(0x08)
};

// Class Tiger.TigerDisciplineShackles
// Size: 0x90 (Inherited: 0x78)
struct UTigerDisciplineShackles : UTigerDisciplineBase {
	char pad_78[0x8]; // 0x78(0x08)
	struct UTigerShacklesConfig* Config; // 0x80(0x08)
	struct ADecalActor* ClientAimDecal; // 0x88(0x08)
};

// Class Tiger.TigerShockwavePunchConfig
// Size: 0x1f0 (Inherited: 0x170)
struct UTigerShockwavePunchConfig : UTigerDisciplineAnimTriggeredConfig {
	struct TArray<struct UAnimMontage*> PunchMontages; // 0x170(0x10)
	struct TArray<struct ATigerShockwaveWall*> ShockwaveActorToSpawn; // 0x180(0x10)
	struct FTigerShockwaveWallData ShockwaveWallData; // 0x190(0x60)
};

// Class Tiger.TigerDisciplineShockwavePunch
// Size: 0x120 (Inherited: 0xf0)
struct UTigerDisciplineShockwavePunch : UTigerDisciplineAnimTriggered {
	char pad_F0[0x20]; // 0xf0(0x20)
	struct UTigerShockwavePunchConfig* DisciplineConfig; // 0x110(0x08)
	struct UAnimMontage* PickedMontage; // 0x118(0x08)
};

// Class Tiger.TigerStunConfig
// Size: 0x168 (Inherited: 0x160)
struct UTigerStunConfig : UTigerActiveDisciplineConfig {
	float StunTime; // 0x160(0x04)
	float StunRadius; // 0x164(0x04)
};

// Class Tiger.TigerDisciplineStun
// Size: 0x80 (Inherited: 0x78)
struct UTigerDisciplineStun : UTigerDisciplineBase {
	struct UTigerStunConfig* Config; // 0x78(0x08)
};

// Class Tiger.TigerDisciplinesUi
// Size: 0x2b8 (Inherited: 0x280)
struct UTigerDisciplinesUi : UTigerWidget {
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x280(0x08)
	struct UTigerFeedingComponent* FeedingComponent; // 0x288(0x08)
	struct UTigerDisciplineBase* DisciplineForSlot[0x3]; // 0x290(0x18)
	enum class ETigerDisciplinesEnum DisciplineTypeForSlot[0x3]; // 0x2a8(0x03)
	char pad_2AB[0xd]; // 0x2ab(0x0d)

	void OnUpdatePassiveUI(); // Function Tiger.TigerDisciplinesUi.OnUpdatePassiveUI // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnSetNumberOfCharges(enum class ETigerDisciplineSlot DisciplineSlot); // Function Tiger.TigerDisciplinesUi.OnSetNumberOfCharges // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnInitializeDisciplineUi(); // Function Tiger.TigerDisciplinesUi.OnInitializeDisciplineUi // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDisciplineInterrupted(enum class ETigerDisciplineSlot InDisciplineSlot); // Function Tiger.TigerDisciplinesUi.OnDisciplineInterrupted // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool HasChargesIfApplicable(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplinesUi.HasChargesIfApplicable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1284260
	struct UTigerDisciplineBase* GetSkill(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplinesUi.GetSkill // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12841d0
	enum class ETigerDisciplinesEnum GetDisciplineTypeForSlot(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplinesUi.GetDisciplineTypeForSlot // (Final|Native|Protected|BlueprintCallable) // @ game+0x1284110
	int32_t GetChargesForSlot(enum class ETigerDisciplineSlot DisciplineSlot); // Function Tiger.TigerDisciplinesUi.GetChargesForSlot // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1284080
	void GetActiveTimeLeftForDiscipline(enum class ETigerDisciplinesEnum InDisciplineType, bool OutIsActive, float OutTimeLeft); // Function Tiger.TigerDisciplinesUi.GetActiveTimeLeftForDiscipline // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1283f50
};

// Class Tiger.TigerSwiftStrikeConfig
// Size: 0x1a0 (Inherited: 0x160)
struct UTigerSwiftStrikeConfig : UTigerActiveDisciplineConfig {
	float DashDistance; // 0x160(0x04)
	float StartupTime; // 0x164(0x04)
	float DashTime; // 0x168(0x04)
	float DashDamage; // 0x16c(0x04)
	struct FVector2D DashHitBoxSize; // 0x170(0x08)
	float StrikeDelay; // 0x178(0x04)
	float StrikeDuration; // 0x17c(0x04)
	float StrikeDamage; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct UTigerBuff* StrikeDebuff; // 0x188(0x08)
	struct FVector StrikeHitBoxSize; // 0x190(0x0c)
	bool DrawDebugInfo; // 0x19c(0x01)
	char pad_19D[0x3]; // 0x19d(0x03)

	void OnTargetsHitByStrike(struct TArray<struct ATigerCharacter*> Targets); // Function Tiger.TigerSwiftStrikeConfig.OnTargetsHitByStrike // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnTargetsHitByDash(struct TArray<struct ATigerCharacter*> Targets); // Function Tiger.TigerSwiftStrikeConfig.OnTargetsHitByDash // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnStrike(struct ATigerCharacter* Character); // Function Tiger.TigerSwiftStrikeConfig.OnStrike // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStartup(struct ATigerCharacter* Character); // Function Tiger.TigerSwiftStrikeConfig.OnStartup // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnDash(struct ATigerCharacter* Character, struct FVector Location, struct FVector Direction); // Function Tiger.TigerSwiftStrikeConfig.OnDash // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerDisciplineSwiftStrike
// Size: 0xa8 (Inherited: 0x78)
struct UTigerDisciplineSwiftStrike : UTigerDisciplineBase {
	struct UTigerSwiftStrikeConfig* Config; // 0x78(0x08)
	char pad_80[0x28]; // 0x80(0x28)
};

// Class Tiger.TigerTeleportConfig
// Size: 0x168 (Inherited: 0x160)
struct UTigerTeleportConfig : UTigerActiveDisciplineConfig {
	float TeleportDistance; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
};

// Class Tiger.TigerDisciplineTeleport
// Size: 0xa0 (Inherited: 0x78)
struct UTigerDisciplineTeleport : UTigerDisciplineBase {
	struct UTigerTeleportConfig* Config; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
};

// Class Tiger.TigerTrapsConfig
// Size: 0x2f8 (Inherited: 0x170)
struct UTigerTrapsConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAkAudioEvent* ThrowAudioEvent; // 0x170(0x08)
	struct UAkAudioEvent* LandAudioEvent; // 0x178(0x08)
	struct UAkAudioEvent* ArmingAudioEvent; // 0x180(0x08)
	struct UAkAudioEvent* ExplosionAudioEvent; // 0x188(0x08)
	struct UAkAudioEvent* FizzleAudioEvent; // 0x190(0x08)
	struct UAkAudioEvent* StartGasAudioEvent; // 0x198(0x08)
	struct UAkAudioEvent* StopGasAudioEvent; // 0x1a0(0x08)
	struct UCurveFloat* PitchCurve; // 0x1a8(0x08)
	struct UCurveFloat* EmissiveCurve; // 0x1b0(0x08)
	float EmissiveCurveLoopTime; // 0x1b8(0x04)
	struct FLinearColor AllyStatusColor; // 0x1bc(0x10)
	struct FLinearColor EnemyStatusColor; // 0x1cc(0x10)
	float MaxEmissiveBoost; // 0x1dc(0x04)
	struct UMaterialInterface* DecalMaterial; // 0x1e0(0x08)
	struct UAnimMontage* AimMontage; // 0x1e8(0x08)
	struct FName AimTrapSpawnSocket; // 0x1f0(0x08)
	struct AActor* AimTrapType; // 0x1f8(0x08)
	struct ATigerTrap* TrapType; // 0x200(0x08)
	struct TArray<struct UTigerBuff*> GasBuff; // 0x208(0x10)
	struct TArray<int32_t> MaxTrapsActive; // 0x218(0x10)
	struct FVector SpawnOffset; // 0x228(0x0c)
	float TerminalVelocity; // 0x234(0x04)
	float GravitationalPull; // 0x238(0x04)
	float AirFriction; // 0x23c(0x04)
	float ThrowForce; // 0x240(0x04)
	float ThrowMaxForce; // 0x244(0x04)
	float ThrowPlayerVelocityForceScale; // 0x248(0x04)
	float ThrowPitchOffset; // 0x24c(0x04)
	float ThrowMinPitch; // 0x250(0x04)
	float ThrowMaxPitch; // 0x254(0x04)
	float TriggerDelay; // 0x258(0x04)
	float ReleaseDelay; // 0x25c(0x04)
	float DecalFadeDuration; // 0x260(0x04)
	float ArmingDuration; // 0x264(0x04)
	struct TArray<float> GasDuration; // 0x268(0x10)
	struct TArray<float> TriggerRadius; // 0x278(0x10)
	struct TArray<float> ExplosionRadius; // 0x288(0x10)
	struct TArray<float> GasRadius; // 0x298(0x10)
	float DecalTriggerRadiusScale; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct TArray<float> AreaEffectScale; // 0x2b0(0x10)
	struct TArray<float> ExplosionEffectScale; // 0x2c0(0x10)
	struct TArray<float> GasEffectScale; // 0x2d0(0x10)
	struct TArray<float> ExplosionDamage; // 0x2e0(0x10)
	bool bHostileNpcTriggersTrap; // 0x2f0(0x01)
	bool bAllyAreaVisible; // 0x2f1(0x01)
	bool bAllyImmunityExplosion; // 0x2f2(0x01)
	bool bAllyImmunityGas; // 0x2f3(0x01)
	bool bClearGasBuffOnExit; // 0x2f4(0x01)
	bool bDrawDebugSpheres; // 0x2f5(0x01)
	char pad_2F6[0x2]; // 0x2f6(0x02)
};

// Class Tiger.TigerDisciplineTraps
// Size: 0x128 (Inherited: 0xf0)
struct UTigerDisciplineTraps : UTigerDisciplineAnimTriggered {
	struct UTigerTrapsConfig* Config; // 0xf0(0x08)
	struct AActor* AimTrapActor; // 0xf8(0x08)
	struct TArray<struct ATigerTrap*> CurrentTraps; // 0x100(0x10)
	struct TArray<int32_t> FreeTrapIndices; // 0x110(0x10)
	char pad_120[0x8]; // 0x120(0x08)

	void TrapTriggered(struct ATigerTrap* Trap); // Function Tiger.TigerDisciplineTraps.TrapTriggered // (Final|Native|Private) // @ game+0x12843f0
	void Multicast_StopDiscipline(); // Function Tiger.TigerDisciplineTraps.Multicast_StopDiscipline // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1284380
};

// Class Tiger.TigerVanishConfig
// Size: 0x1a0 (Inherited: 0x160)
struct UTigerVanishConfig : UTigerActiveDisciplineConfig {
	struct TArray<struct UTigerBuff*> VanishBuff; // 0x160(0x10)
	struct FText MovementSpeedText; // 0x170(0x18)
	struct FText MovementSpeedSuffix; // 0x188(0x18)
};

// Class Tiger.TigerDisciplineVanish
// Size: 0x80 (Inherited: 0x78)
struct UTigerDisciplineVanish : UTigerDisciplineBase {
	struct UTigerVanishConfig* Config; // 0x78(0x08)
};

// Class Tiger.TigerDistrictComponent
// Size: 0x118 (Inherited: 0xb0)
struct UTigerDistrictComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	bool bIsInsideHolyIncense; // 0xc0(0x01)
	bool bIsOutOfBounds; // 0xc1(0x01)
	char pad_C2[0x2]; // 0xc2(0x02)
	float DistanceToHolyIncense; // 0xc4(0x04)
	struct FVector2D ClosestGasLocation; // 0xc8(0x08)
	struct FVector2D ClosestGasNormal; // 0xd0(0x08)
	float OutOfBoundsDamagePerTick; // 0xd8(0x04)
	float OutOfBoundsDamageTickInterval; // 0xdc(0x04)
	char pad_E0[0x8]; // 0xe0(0x08)
	struct UCurveFloat* EffectStrengthScaling; // 0xe8(0x08)
	bool bDebugEffectStrength; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct ATigerCharacter* TigerCharacter; // 0xf8(0x08)
	struct ATigerLevelScriptActor* TigerLevelScriptActor; // 0x100(0x08)
	struct FTimerHandle DamageTimerHandle; // 0x108(0x08)
	char pad_110[0x8]; // 0x110(0x08)

	void TigerOnInsideHolyIncenseChanged__DelegateSignature(bool bIsInsideHolyIncense); // DelegateFunction Tiger.TigerDistrictComponent.TigerOnInsideHolyIncenseChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	bool ShouldTakeDamage(); // Function Tiger.TigerDistrictComponent.ShouldTakeDamage // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12843c0
	void OnWaveStopped(); // Function Tiger.TigerDistrictComponent.OnWaveStopped // (Final|Native|Private) // @ game+0x12843a0
	float GetEffectStrength(); // Function Tiger.TigerDistrictComponent.GetEffectStrength // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12841a0
};

// Class Tiger.TigerDistrictData
// Size: 0x60 (Inherited: 0x30)
struct UTigerDistrictData : UDataAsset {
	struct UTexture2D* MapTexture; // 0x30(0x08)
	struct FDistrictDataAnchor FirstAnchor; // 0x38(0x10)
	struct FDistrictDataAnchor SecondAnchor; // 0x48(0x10)
	bool bSpawnHighPotenceBlood; // 0x58(0x01)
	bool bSpawnSuperHighPotenceBlood; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
};

// Class Tiger.TigerDodgeBuff
// Size: 0x278 (Inherited: 0x270)
struct UTigerDodgeBuff : UTigerBuff {
	struct UCurveFloat* MaxSpeedCurve; // 0x270(0x08)
};

// Class Tiger.TigerDodgeBuffInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerDodgeBuffInstance : UTigerBuffInstance {
	struct UTigerDodgeBuff* BuffClassDefaultObject; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerDoor
// Size: 0x290 (Inherited: 0x280)
struct ATigerDoor : ATigerInteractiveObject {
	struct UStaticMeshComponent* DoorMesh; // 0x280(0x08)
	struct ATigerPlayer* InteractingPlayer; // 0x288(0x08)
};

// Class Tiger.TigerDsBackendAgent
// Size: 0x50 (Inherited: 0x28)
struct UTigerDsBackendAgent : UObject {
	struct FString DsAgentType; // 0x28(0x10)
	float HeartbeatIntervalSeconds; // 0x38(0x04)
	char pad_3C[0x14]; // 0x3c(0x14)
};

// Class Tiger.TigerDsPresenceSubsystem
// Size: 0x38 (Inherited: 0x30)
struct UTigerDsPresenceSubsystem : UGameInstanceSubsystem {
	struct UTigerPresenceService* PresenceService; // 0x30(0x08)
};

// Class Tiger.TigerDsReliableTimeSubSystem
// Size: 0x50 (Inherited: 0x30)
struct UTigerDsReliableTimeSubSystem : UGameInstanceSubsystem {
	char pad_30[0x20]; // 0x30(0x20)

	bool IsReliableDateTimeSet(); // Function Tiger.TigerDsReliableTimeSubSystem.IsReliableDateTimeSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x92d040
	struct FDateTime GetCurrentDateTimeUtc(struct UObject* InWorldContextObject); // Function Tiger.TigerDsReliableTimeSubSystem.GetCurrentDateTimeUtc // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1287a80
};

// Class Tiger.TigerDynamicObject
// Size: 0x258 (Inherited: 0x228)
struct ATigerDynamicObject : AActor {
	struct FComponentReference MeshComponentRef; // 0x228(0x28)
	float PlayerImpactMultiplier; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
};

// Class Tiger.TigerEditorGameSettings
// Size: 0xa0 (Inherited: 0x38)
struct UTigerEditorGameSettings : USharkLocalDeveloperSettings {
	bool bMatchWaitsForMultipleGroupsInEditor; // 0x38(0x01)
	bool bMatchWaitsForReadyStatesInEditor; // 0x39(0x01)
	bool bEnableSpawnCountdownInEditor; // 0x3a(0x01)
	bool bEnableNpcSpawningInEditor; // 0x3b(0x01)
	bool bUseLocalVendorCategories; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	struct TSoftObjectPtr<struct UTigerSeasonConfigAsset> SeasonConfigOverride; // 0x40(0x28)
	bool bShowGeneratedMeshActorsInOutliner; // 0x68(0x01)
	bool bSimulateParticlesInEditor; // 0x69(0x01)
	char pad_6A[0x6]; // 0x6a(0x06)
	SoftClassProperty PreviewerClass; // 0x70(0x28)
	struct FColor IndoorVolumeColor; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerGameMode
// Size: 0x4b8 (Inherited: 0x2c8)
struct ATigerGameMode : AGameModeBase {
	char pad_2C8[0x10]; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnRestartPlayer; // 0x2d8(0x10)
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x2e8(0x08)
	struct UTigerMasqueradeCoordinator* MasqueradeCoordinator; // 0x2f0(0x08)
	char pad_2F8[0x70]; // 0x2f8(0x70)
	SoftClassProperty SpawnMechanicClass; // 0x368(0x28)
	struct UTigerAICoordinator* AICoordinator; // 0x390(0x08)
	struct UTigerNPCSpawningCoordinator* NPCSpawner; // 0x398(0x08)
	enum class ESessionType SessionTraveledFrom; // 0x3a0(0x01)
	enum class ETigerGameType GameType; // 0x3a1(0x01)
	char pad_3A2[0x5e]; // 0x3a2(0x5e)
	struct UTigerSpawnMechanic* SpawnMechanic; // 0x400(0x08)
	struct UTigerSessionService* TigerSessionService; // 0x408(0x08)
	char pad_410[0x50]; // 0x410(0x50)
	struct ATigerItemCluster* ItemClusterClass; // 0x460(0x08)
	char pad_468[0x4]; // 0x468(0x04)
	float ServerLoadScalabilityUpdateFrequency; // 0x46c(0x04)
	float ServerLoadScalability30HzTarget; // 0x470(0x04)
	float ServerLoadScalability20HzTarget; // 0x474(0x04)
	bool ServerLoadScalabilityEnabled; // 0x478(0x01)
	char pad_479[0x17]; // 0x479(0x17)
	struct UTigerPlayerServerLoginProcess* PlayerServerLoginProcess; // 0x490(0x08)
	char pad_498[0x18]; // 0x498(0x18)
	float NetworkProfileOnPlayerConnectionDuration; // 0x4b0(0x04)
	char pad_4B4[0x4]; // 0x4b4(0x04)

	bool TryRestartPlayerIfNeeded(struct ATigerPlayerController* Player); // Function Tiger.TigerGameMode.TryRestartPlayerIfNeeded // (Final|Native|Public|BlueprintCallable) // @ game+0x129bcc0
	void TigerEnableServerScalability(bool InEnabled); // Function Tiger.TigerGameMode.TigerEnableServerScalability // (Final|Exec|Native|Public) // @ game+0x124be70
	void ShutdownServer(); // Function Tiger.TigerGameMode.ShutdownServer // (Final|Native|Public|BlueprintCallable) // @ game+0x129bbd0
	void SetPlayerIsReadyToPlay(struct ATigerPlayerController* PlayerController); // Function Tiger.TigerGameMode.SetPlayerIsReadyToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x129aee0
	void SendChatMessageToGroupMembers(struct UTigerChatComponent* InMessageSender, struct FText InMessageText); // Function Tiger.TigerGameMode.SendChatMessageToGroupMembers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x129a1d0
	void SendChatMessageToAllClients(struct UTigerChatComponent* InMessageSender, struct FText InMessageText); // Function Tiger.TigerGameMode.SendChatMessageToAllClients // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x129a0c0
	void OnRestartPlayer__DelegateSignature(struct AController* NewPlayer); // DelegateFunction Tiger.TigerGameMode.OnRestartPlayer__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnNpcDeathEvent__DelegateSignature(struct ATigerNPC* NPC, struct AController* InstigatorController); // DelegateFunction Tiger.TigerGameMode.OnNpcDeathEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	struct UTigerAICoordinator* GetAICoordinator(); // Function Tiger.TigerGameMode.GetAICoordinator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1299d40
	void CreateClientSpawners(struct AController* InNewPlayer); // Function Tiger.TigerGameMode.CreateClientSpawners // (Final|Native|Private) // @ game+0x1299c20
};

// Class Tiger.TigerElysiumGameMode
// Size: 0x4d8 (Inherited: 0x4b8)
struct ATigerElysiumGameMode : ATigerGameMode {
	char pad_4B8[0x20]; // 0x4b8(0x20)

	void OnShowAdminMessages(); // Function Tiger.TigerElysiumGameMode.OnShowAdminMessages // (Final|Native|Private) // @ game+0x12885d0
	void OnReloadAdminMessages(); // Function Tiger.TigerElysiumGameMode.OnReloadAdminMessages // (Final|Native|Private) // @ game+0x12883f0
};

// Class Tiger.TigerGameSession
// Size: 0x298 (Inherited: 0x240)
struct ATigerGameSession : AGameSession {
	char pad_240[0x58]; // 0x240(0x58)
};

// Class Tiger.TigerElysiumGameSession
// Size: 0x298 (Inherited: 0x298)
struct ATigerElysiumGameSession : ATigerGameSession {
};

// Class Tiger.TigerGameState
// Size: 0x320 (Inherited: 0x278)
struct ATigerGameState : AGameStateBase {
	struct FMulticastInlineDelegate OnWeatherScenarioChangedEvent; // 0x278(0x10)
	char bIsFakeMatchmakingDelayActive[0x2]; // 0x288(0x02)
	char pad_28A[0x1e]; // 0x28a(0x1e)
	struct FGuid MatchID; // 0x2a8(0x10)
	struct TWeakObjectPtr<struct ATigerHolyIncense> HolyIncense; // 0x2b8(0x08)
	char pad_2C0[0x4]; // 0x2c0(0x04)
	float SynchronizedTime; // 0x2c4(0x04)
	char pad_2C8[0x10]; // 0x2c8(0x10)
	struct UTigerWeatherScenarioData* WeatherScenarioClass; // 0x2d8(0x08)
	struct UTigerWeatherScenarioData* WeatherScenario; // 0x2e0(0x08)
	char pad_2E8[0x20]; // 0x2e8(0x20)
	struct FString ServerId; // 0x308(0x10)
	enum class ETigerServerScalabilityTarget CurrentScalabilityTarget; // 0x318(0x01)
	char pad_319[0x7]; // 0x319(0x07)

	void TigerPrintServerScalabilityTarget(); // Function Tiger.TigerGameState.TigerPrintServerScalabilityTarget // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerDisplayServerId(); // Function Tiger.TigerGameState.TigerDisplayServerId // (Final|Exec|Native|Private) // @ game+0xb45020
	void OnWeatherScenarioChanged__DelegateSignature(struct UTigerWeatherScenarioData* WeatherScenarioData); // DelegateFunction Tiger.TigerGameState.OnWeatherScenarioChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnRep_WeatherScenarioClass(); // Function Tiger.TigerGameState.OnRep_WeatherScenarioClass // (Final|Native|Private) // @ game+0x1299f80
	void OnRep_SynchronizedTime(); // Function Tiger.TigerGameState.OnRep_SynchronizedTime // (Final|Native|Private) // @ game+0x1299f60
	void OnRep_FakeMatchmakingDisabledForMode(); // Function Tiger.TigerGameState.OnRep_FakeMatchmakingDisabledForMode // (Final|Native|Private) // @ game+0x1299f40
	void Multicast_SynchronizeTime(float InNewSynchronizedTime); // Function Tiger.TigerGameState.Multicast_SynchronizeTime // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1299eb0
	float GetSynchronizedTimeNonInterpolated(); // Function Tiger.TigerGameState.GetSynchronizedTimeNonInterpolated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1299df0
	float GetSynchronizedTime(); // Function Tiger.TigerGameState.GetSynchronizedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1299dc0
	struct FGuid GetMatchId(); // Function Tiger.TigerGameState.GetMatchId // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1299d90
};

// Class Tiger.TigerElysiumGameState
// Size: 0x460 (Inherited: 0x320)
struct ATigerElysiumGameState : ATigerGameState {
	char pad_320[0x50]; // 0x320(0x50)
	struct FTigerMetaStoreEntriesKeeper FlashStoreStoreEntries; // 0x370(0x40)
	char pad_3B0[0x10]; // 0x3b0(0x10)
	struct FTigerMetaStoreEntriesKeeper BattlepassStoreEntries; // 0x3c0(0x40)
	struct FTigerMetaStoreEntriesKeeper RankSkipStoreEntries; // 0x400(0x40)
	char pad_440[0x20]; // 0x440(0x20)

	void OnRep_RankSkipEntriesChanged(); // Function Tiger.TigerElysiumGameState.OnRep_RankSkipEntriesChanged // (Final|Native|Private) // @ game+0x1288520
	void OnRep_FlashStoreEntriesChanged(); // Function Tiger.TigerElysiumGameState.OnRep_FlashStoreEntriesChanged // (Final|Native|Private) // @ game+0x1288430
	void OnRep_BattlepassEntriesChanged(); // Function Tiger.TigerElysiumGameState.OnRep_BattlepassEntriesChanged // (Final|Native|Private) // @ game+0x1288410
};

// Class Tiger.TigerHUD
// Size: 0x3f8 (Inherited: 0x318)
struct ATigerHUD : AHUD {
	struct FMulticastInlineDelegate OnInGameMenuToggled; // 0x318(0x10)
	struct FMulticastInlineDelegate OnMenuOpened; // 0x328(0x10)
	struct UTigerIngameMenuWidget* IngameMenuUI; // 0x338(0x08)
	struct UTigerGroupUIWidget* GroupStatus; // 0x340(0x08)
	struct UTigerEmoteWheelWidget* EmoteWheel; // 0x348(0x08)
	struct UTigerNotificationsUI* NotificationsUI; // 0x350(0x08)
	struct UTigerContextualHelpUI* ContextualHelpUI; // 0x358(0x08)
	char pad_360[0x18]; // 0x360(0x18)
	struct ATigerPlayerController* TigerPlayerController; // 0x378(0x08)
	struct UTigerCrosshairWidget* Crosshair; // 0x380(0x08)
	struct TArray<struct FAutoInitializedWidget> AutoInitializedWidgets; // 0x388(0x10)
	char pad_398[0x10]; // 0x398(0x10)
	struct UTigerMenuWidget* CurrentlyOpenMenu; // 0x3a8(0x08)
	char pad_3B0[0x10]; // 0x3b0(0x10)
	struct TArray<struct UUserWidget*> HiddenWidgets; // 0x3c0(0x10)
	struct TArray<struct TWeakObjectPtr<struct UWidgetComponent>> HiddenWidgetComponents; // 0x3d0(0x10)
	char pad_3E0[0x18]; // 0x3e0(0x18)

	void ShowOnScreenUI(); // Function Tiger.TigerHUD.ShowOnScreenUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12aa330
	void RemoveOnScreenWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerHUD.RemoveOnScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12a9b10
	void OpenMenuWidget(struct UTigerMenuWidget* InMenuWidget, int32_t InZOrder); // Function Tiger.TigerHUD.OpenMenuWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12a9990
	void OnPawnPossessed(); // Function Tiger.TigerHUD.OnPawnPossessed // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnMenuWidgetOpened__DelegateSignature(struct UTigerMenuWidget* InMenuWidget); // DelegateFunction Tiger.TigerHUD.OnMenuWidgetOpened__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnInGameMenuToggled__DelegateSignature(bool bIsOpen); // DelegateFunction Tiger.TigerHUD.OnInGameMenuToggled__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void HideOnScreenUI(); // Function Tiger.TigerHUD.HideOnScreenUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12a9780
	int32_t GetDefaultZOrderForAutoInitializedWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerHUD.GetDefaultZOrderForAutoInitializedWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a95f0
	void CloseMenuWidget(struct UTigerMenuWidget* InMenuWidget); // Function Tiger.TigerHUD.CloseMenuWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12a9450
	void CloseIngameMenu(); // Function Tiger.TigerHUD.CloseIngameMenu // (Native|Public|BlueprintCallable) // @ game+0x12a9430
	void AddOnScreenWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerHUD.AddOnScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12a92b0
};

// Class Tiger.TigerElysiumHUD
// Size: 0x518 (Inherited: 0x3f8)
struct ATigerElysiumHUD : ATigerHUD {
	struct UTigerDialogueInteractionScreen* DialogueInteractionWidget; // 0x3f8(0x08)
	SoftClassProperty SoftPromotionalUiClass; // 0x400(0x28)
	struct UTigerPromotionalUI* PromotionalUi; // 0x428(0x08)
	struct UTigerDialogueInteractionScreen* CurrentVendorUI; // 0x430(0x08)
	SoftClassProperty DialogueInteractionCameraPreset; // 0x438(0x28)
	struct UTigerWidget* ElysiumPlayerInfoUI; // 0x460(0x08)
	struct UTigerWidget* InGameQueueIndicatorUI; // 0x468(0x08)
	struct UTigerWidget* Watermark; // 0x470(0x08)
	struct UTigerWidget* ProgressHUD; // 0x478(0x08)
	struct UTigerInputMenuUI* SettingsMenuUi; // 0x480(0x08)
	struct TArray<struct FAutoInitializedWidget> OpenMenuHiddenWidgets; // 0x488(0x10)
	struct TArray<struct UTigerWidget*> OpenMenuWidgetIgnoreList; // 0x498(0x10)
	struct TArray<struct TWeakObjectPtr<struct UTigerWidget>> HiddenTigerWidgets; // 0x4a8(0x10)
	SoftClassProperty ScreenTransitionWidgetToUse; // 0x4b8(0x28)
	struct UTigerScreenTransition* ScreenTransitionWidget; // 0x4e0(0x08)
	int32_t VendorUIZOrder; // 0x4e8(0x04)
	char pad_4EC[0x4]; // 0x4ec(0x04)
	struct FMulticastInlineDelegate OnPreloadingDone; // 0x4f0(0x10)
	char pad_500[0x8]; // 0x500(0x08)
	struct FMulticastInlineDelegate OnPromotionalPopupClosed; // 0x508(0x10)

	void UseScreenTransition(); // Function Tiger.TigerElysiumHUD.UseScreenTransition // (Final|Native|Protected|BlueprintCallable) // @ game+0xb45020
	void ToggleVanityInventory(); // Function Tiger.TigerElysiumHUD.ToggleVanityInventory // (Final|Native|Protected|BlueprintCallable) // @ game+0x1289210
	void ToggleElysiumGameMenuSubmenu(struct UTigerIngameSubmenuWidget* InSubwidgetClass); // Function Tiger.TigerElysiumHUD.ToggleElysiumGameMenuSubmenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12890f0
	void ToggleElysiumGameMenu(); // Function Tiger.TigerElysiumHUD.ToggleElysiumGameMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12890d0
	void ShowHiddenWidgets(); // Function Tiger.TigerElysiumHUD.ShowHiddenWidgets // (Final|Native|Protected|BlueprintCallable) // @ game+0x12890b0
	bool ShouldCurrentVendorUIUseTransitions(); // Function Tiger.TigerElysiumHUD.ShouldCurrentVendorUIUseTransitions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1289080
	void PromotionalPopupClosed(); // Function Tiger.TigerElysiumHUD.PromotionalPopupClosed // (Final|Native|Public|BlueprintCallable) // @ game+0x1288780
	void OpenElysiumGameMenu(struct UTigerIngameSubmenuWidget* InSubwidgetClass); // Function Tiger.TigerElysiumHUD.OpenElysiumGameMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12885f0
	void OnPromotionalUiClosed__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnPromotionalUiClosed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPreloadingDoneMulti__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnPreloadingDoneMulti__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPreloadingDone__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnPreloadingDone__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	void IsPreloadingDoneAsync(struct FDelegate InDelegate); // Function Tiger.TigerElysiumHUD.IsPreloadingDoneAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1287e10
	bool IsElysiumGameMenuOpen(); // Function Tiger.TigerElysiumHUD.IsElysiumGameMenuOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287db0
	bool IsCurrentlyInScreenTransition(); // Function Tiger.TigerElysiumHUD.IsCurrentlyInScreenTransition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287d80
	void HideCreatedWidgets(); // Function Tiger.TigerElysiumHUD.HideCreatedWidgets // (Final|Native|Protected|BlueprintCallable) // @ game+0x1287d60
	void HandleVendorFadeInTransition(); // Function Tiger.TigerElysiumHUD.HandleVendorFadeInTransition // (Final|Native|Protected) // @ game+0x1287cb0
	void FinishSetupOfVendorUI(); // Function Tiger.TigerElysiumHUD.FinishSetupOfVendorUI // (Final|Native|Protected) // @ game+0xb45020
	void FinishClosingVendorUI(); // Function Tiger.TigerElysiumHUD.FinishClosingVendorUI // (Final|Native|Protected) // @ game+0x1287a60
	void CloseElysiumGameMenu(); // Function Tiger.TigerElysiumHUD.CloseElysiumGameMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1287960
};

// Class Tiger.TigerElysiumNpcBase
// Size: 0x470 (Inherited: 0x228)
struct ATigerElysiumNpcBase : AActor {
	bool bAllowCollision; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)
	struct UCapsuleComponent* CapsuleComponent; // 0x230(0x08)
	struct USkeletalMeshComponent* BodyMesh; // 0x238(0x08)
	struct USkeletalMeshComponent* HeadMesh; // 0x240(0x08)
	struct USkeletalMeshComponent* HairMesh; // 0x248(0x08)
	struct USkeletalMeshComponent* HoodieMesh; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)
	struct FTigerElysiumNpcData NpcData; // 0x260(0x1d0)
	struct UStaticMeshComponent* FirstPropSm; // 0x430(0x08)
	struct USkeletalMeshComponent* FirstPropSk; // 0x438(0x08)
	struct UChildActorComponent* FirstPropBp; // 0x440(0x08)
	struct UStaticMeshComponent* SecondPropSm; // 0x448(0x08)
	struct USkeletalMeshComponent* SecondPropSk; // 0x450(0x08)
	struct UChildActorComponent* SecondPropBp; // 0x458(0x08)
	char pad_460[0x10]; // 0x460(0x10)

	void LoadAssetsCompleted(); // Function Tiger.TigerElysiumNpcBase.LoadAssetsCompleted // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void LoadAssets(); // Function Tiger.TigerElysiumNpcBase.LoadAssets // (Final|Native|Protected|BlueprintCallable) // @ game+0x1288140
	void CreatePropFromNonActorAsset(struct FTigerElysiumNpcProp InPropStructure); // Function Tiger.TigerElysiumNpcBase.CreatePropFromNonActorAsset // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1287980
};

// Class Tiger.TigerElysiumNpcNameplateWidget
// Size: 0x288 (Inherited: 0x280)
struct UTigerElysiumNpcNameplateWidget : UTigerWidget {
	struct TWeakObjectPtr<struct UTigerInteractiveNpcComponent> InteractiveNpcComponent; // 0x280(0x08)
};

// Class Tiger.TigerPlayerState
// Size: 0x558 (Inherited: 0x328)
struct ATigerPlayerState : APlayerState {
	bool bGhostModeOnInit; // 0x328(0x01)
	bool bIsGroupLeader; // 0x329(0x01)
	char pad_32A[0x6]; // 0x32a(0x06)
	struct UTigerGroupStateComponent* GroupStateComponent; // 0x330(0x08)
	struct UTigerPlayerMasqueradeComponent* PlayerMasqueradeComponent; // 0x338(0x08)
	bool bIsGroupFull; // 0x340(0x01)
	char pad_341[0x7]; // 0x341(0x07)
	struct UTigerPersistentPlayerState* PersistentPlayerState; // 0x348(0x08)
	struct FMulticastInlineDelegate OnGroupChangedDelegate; // 0x350(0x10)
	struct FMulticastInlineDelegate OnGroupFullnessChangedDelegate; // 0x360(0x10)
	struct FMulticastInlineDelegate OnNameChangedDelegate; // 0x370(0x10)
	struct FMulticastInlineDelegate OnApperanceChanged; // 0x380(0x10)
	struct FMulticastInlineDelegate OnPlayerCardLoaded; // 0x390(0x10)
	enum class ETigerPowerKitType ArchetypeType; // 0x3a0(0x01)
	enum class ETigerGroupingMode GROUPINGMODE; // 0x3a1(0x01)
	char pad_3A2[0x6]; // 0x3a2(0x06)
	struct FMulticastInlineDelegate OnPawnChanged; // 0x3a8(0x10)
	struct FMulticastInlineDelegate OnArchetypeChanged; // 0x3b8(0x10)
	struct FMulticastInlineDelegate OnSeasonLevelChanged; // 0x3c8(0x10)
	struct UTigerCollectibleProgressCache* CollectibleProgressCache; // 0x3d8(0x08)
	struct FTigerGroupId GroupID; // 0x3e0(0x10)
	int32_t CurrentSpectatorCount; // 0x3f0(0x04)
	int32_t CurrentSeasonLevel; // 0x3f4(0x04)
	struct FTigerCharacterAppearance CharacterAppearance; // 0x3f8(0x80)
	bool bHasLoadedAppearance; // 0x478(0x01)
	char pad_479[0x3]; // 0x479(0x03)
	struct FTigerPersistentPlayerCardData PlayerCardData; // 0x47c(0x0c)
	char pad_488[0x20]; // 0x488(0x20)
	bool bHasLoadedPlayerCard; // 0x4a8(0x01)
	char pad_4A9[0x83]; // 0x4a9(0x83)
	struct TWeakObjectPtr<struct APawn> OwningPawn; // 0x52c(0x08)
	char pad_534[0x4]; // 0x534(0x04)
	struct ATigerPlayerAppearanceCache* AppearanceCache; // 0x538(0x08)
	struct AActor* Killer; // 0x540(0x08)
	char pad_548[0x10]; // 0x548(0x10)

	bool SharesGroup(struct ATigerPlayerState* OtherPlayer); // Function Tiger.TigerPlayerState.SharesGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131b1a0
	void Server_SetCharacterAppearance(struct FTigerCharacterAppearance NewCharacterAppearance); // Function Tiger.TigerPlayerState.Server_SetCharacterAppearance // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x131b0c0
	void Server_SetArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerPlayerState.Server_SetArchetype // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x131b010
	void Server_PersistCharacterChanges(); // Function Tiger.TigerPlayerState.Server_PersistCharacterChanges // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x131afc0
	void Server_LeaveGroup(); // Function Tiger.TigerPlayerState.Server_LeaveGroup // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x131af70
	void RandomizeCharacterMeshes(); // Function Tiger.TigerPlayerState.RandomizeCharacterMeshes // (Final|Native|Protected|BlueprintCallable) // @ game+0x131af30
	void OptionallyLeavePartyAndLeaveGroupIfNotInAParty(bool bInShouldLeaveParty); // Function Tiger.TigerPlayerState.OptionallyLeavePartyAndLeaveGroupIfNotInAParty // (Final|Native|Public|BlueprintCallable) // @ game+0x131add0
	void OnSeasonLevelChanged__DelegateSignature(int32_t InSeasonLevel); // DelegateFunction Tiger.TigerPlayerState.OnSeasonLevelChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnRep_PlayerCardData(); // Function Tiger.TigerPlayerState.OnRep_PlayerCardData // (Final|Native|Protected) // @ game+0x131adb0
	void OnRep_GroupIsFull(); // Function Tiger.TigerPlayerState.OnRep_GroupIsFull // (Final|Native|Protected) // @ game+0x131ad90
	void OnRep_GroupChanged(); // Function Tiger.TigerPlayerState.OnRep_GroupChanged // (Final|Native|Protected) // @ game+0x131ad70
	void OnRep_CurrentSeasonLevel(); // Function Tiger.TigerPlayerState.OnRep_CurrentSeasonLevel // (Final|Native|Protected) // @ game+0x131ad50
	void OnRep_CharacterAppearance(); // Function Tiger.TigerPlayerState.OnRep_CharacterAppearance // (Final|Native|Protected) // @ game+0x131ad10
	void OnRep_ArchetypeType(); // Function Tiger.TigerPlayerState.OnRep_ArchetypeType // (Final|Native|Public) // @ game+0x131acf0
	void OnPlayerKilledBy(struct AActor* InKiller); // Function Tiger.TigerPlayerState.OnPlayerKilledBy // (Final|Native|Protected) // @ game+0x131ac60
	void OnPlayerCardLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnPlayerCardLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPlayerApperanceChanged__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerPlayerState.OnPlayerApperanceChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPersistentPlayerDataInitialized(); // Function Tiger.TigerPlayerState.OnPersistentPlayerDataInitialized // (Native|Protected) // @ game+0x131ac40
	void OnPawnChanged__DelegateSignature(struct APawn* NewPawn); // DelegateFunction Tiger.TigerPlayerState.OnPawnChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnNameChangedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnNameChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnGroupModifiedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnGroupModifiedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnGroupChangedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnGroupChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnArchetypeTypeChangedDelegate__DelegateSignature(struct UTigerPlayerClanData* InClanData, struct UTigerPowerKit* InArchetypeData); // DelegateFunction Tiger.TigerPlayerState.OnArchetypeTypeChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void LeaveGroup(); // Function Tiger.TigerPlayerState.LeaveGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x131a8b0
	bool IsGroupLeader(); // Function Tiger.TigerPlayerState.IsGroupLeader // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a880
	bool IsGroupFull(); // Function Tiger.TigerPlayerState.IsGroupFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a850
	bool HasGroup(); // Function Tiger.TigerPlayerState.HasGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a7f0
	bool HasAnySpectators(); // Function Tiger.TigerPlayerState.HasAnySpectators // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a7c0
	void HandleOnDailyChallengesInitializedEvent(); // Function Tiger.TigerPlayerState.HandleOnDailyChallengesInitializedEvent // (Final|Native|Protected) // @ game+0xb45020
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerPlayerState.GetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a790
	int32_t GetSpectatorCount(); // Function Tiger.TigerPlayerState.GetSpectatorCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a760
	struct FTigerPlayerMatchStats GetPlayerMatchStats(); // Function Tiger.TigerPlayerState.GetPlayerMatchStats // (Final|Native|Public|BlueprintCallable) // @ game+0x131a720
	struct FTigerPlayerMatchMetaStats GetPlayerMatchMetaStats(); // Function Tiger.TigerPlayerState.GetPlayerMatchMetaStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a6b0
	struct FTigerCharacterCardData GetPlayerCardCustomizations(); // Function Tiger.TigerPlayerState.GetPlayerCardCustomizations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a670
	int32_t GetNumKindredsKilled(); // Function Tiger.TigerPlayerState.GetNumKindredsKilled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a650
	enum class ETigerClan GetClanFromArchetype(); // Function Tiger.TigerPlayerState.GetClanFromArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a4b0
	void Client_OnRecievedReward(); // Function Tiger.TigerPlayerState.Client_OnRecievedReward // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x131a3c0
	void Client_OnCollectibleAwardsReceived(struct UTigerCollectibleData* InCollectible, struct FTigerRewardsCollection InRewards); // Function Tiger.TigerPlayerState.Client_OnCollectibleAwardsReceived // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x131a2d0
	void ApplyPlayerCard(); // Function Tiger.TigerPlayerState.ApplyPlayerCard // (Final|Native|Public|BlueprintCallable) // @ game+0x131a2b0
	void ApplyCharacterAppearance(); // Function Tiger.TigerPlayerState.ApplyCharacterAppearance // (Final|Native|Public|BlueprintCallable) // @ game+0x131a290
};

// Class Tiger.TigerElysiumPlayerState
// Size: 0x5c8 (Inherited: 0x558)
struct ATigerElysiumPlayerState : ATigerPlayerState {
	char pad_558[0x8]; // 0x558(0x08)
	struct FMulticastInlineDelegate OnIsInPartyChanged; // 0x560(0x10)
	struct FMulticastInlineDelegate OnPartySizeChanged; // 0x570(0x10)
	struct FMulticastInlineDelegate OnAppearanceChanged; // 0x580(0x10)
	bool bIsInParty; // 0x590(0x01)
	int8_t PartySize; // 0x591(0x01)
	bool bIsReadyForMatchmaking; // 0x592(0x01)
	char pad_593[0x5]; // 0x593(0x05)
	struct FMulticastInlineDelegate OnGroupReadyStateChanged; // 0x598(0x10)
	struct FMulticastInlineDelegate OnLocalPlayerReadyStateChanged; // 0x5a8(0x10)
	struct UTigerGrimoireEntry* TrainingVideoGrimoireEntry; // 0x5b8(0x08)
	char pad_5C0[0x8]; // 0x5c0(0x08)

	void TryInvitePlayerToGroup(struct ATigerPlayerState* OtherPlayer); // Function Tiger.TigerElysiumPlayerState.TryInvitePlayerToGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x1289230
	void ToggleReadyState(bool bOutNewReadyState); // Function Tiger.TigerElysiumPlayerState.ToggleReadyState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1289180
	void TigerOnAppearanceChanged__DelegateSignature(enum class ETigerPlayerApperanceChangeReason InReason); // DelegateFunction Tiger.TigerElysiumPlayerState.TigerOnAppearanceChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void SetReadyState(bool bInNewReadyState); // Function Tiger.TigerElysiumPlayerState.SetReadyState // (Final|Native|Public|BlueprintCallable) // @ game+0x1288ff0
	void Server_TryInvitePlayerToGroup(struct ATigerPlayerState* OtherPlayer); // Function Tiger.TigerElysiumPlayerState.Server_TryInvitePlayerToGroup // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1288f30
	void Server_SetPartySize(int8_t InPartySize); // Function Tiger.TigerElysiumPlayerState.Server_SetPartySize // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1288e30
	void Server_SetJoinReadyState(bool bInIsReady); // Function Tiger.TigerElysiumPlayerState.Server_SetJoinReadyState // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1288d70
	void Server_GetStoreCategories(); // Function Tiger.TigerElysiumPlayerState.Server_GetStoreCategories // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1288c70
	void Server_EquipItem(SoftClassProperty InItemPath, SoftClassProperty InPotentialCombinedItemPath, int32_t InSlot); // Function Tiger.TigerElysiumPlayerState.Server_EquipItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1288af0
	void Server_EquipCardItem(SoftClassProperty InItemPath); // Function Tiger.TigerElysiumPlayerState.Server_EquipCardItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1288a10
	void Server_DeclineInvitation(struct FTigerGroupInvitation GroupInvitation); // Function Tiger.TigerElysiumPlayerState.Server_DeclineInvitation // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1288960
	void Server_AddPlayerToGroup(struct FTigerPartyId InPartyId, bool bInAssignLeader); // Function Tiger.TigerElysiumPlayerState.Server_AddPlayerToGroup // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1288850
	void Server_AcceptInvitation(struct FTigerGroupInvitation GroupInvitation); // Function Tiger.TigerElysiumPlayerState.Server_AcceptInvitation // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x12887a0
	void PartyMemberJoinedOrLeft(struct FTigerPartyId InPartyId, struct FString InPlayerId); // Function Tiger.TigerElysiumPlayerState.PartyMemberJoinedOrLeft // (Final|Native|Private|HasOutParms) // @ game+0x1288680
	void OnRep_PartySize(); // Function Tiger.TigerElysiumPlayerState.OnRep_PartySize // (Final|Native|Protected) // @ game+0x1288450
	void OnPartySizeChanged__DelegateSignature(int32_t InPartySize); // DelegateFunction Tiger.TigerElysiumPlayerState.OnPartySizeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnNewPlayerCard(struct FTigerPersistentPlayerCardData InCard); // Function Tiger.TigerElysiumPlayerState.OnNewPlayerCard // (Final|Native|Private|HasOutParms) // @ game+0x1288350
	void OnNewCharacterAppearance(struct FTigerCharacterAppearance InAppearance); // Function Tiger.TigerElysiumPlayerState.OnNewCharacterAppearance // (Final|Native|Private|HasOutParms) // @ game+0x1288290
	void OnIsInPartyChanged__DelegateSignature(bool bInIsInParty); // DelegateFunction Tiger.TigerElysiumPlayerState.OnIsInPartyChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnGroupReadyStateChanged__DelegateSignature(bool bInIsGroupReady); // DelegateFunction Tiger.TigerElysiumPlayerState.OnGroupReadyStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void Multicast_OnAppearanceChanged(enum class ETigerPlayerApperanceChangeReason InReason); // Function Tiger.TigerElysiumPlayerState.Multicast_OnAppearanceChanged // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1288210
	void LeftPartyDelegate__DelegateSignature(struct FTigerParty InParty); // DelegateFunction Tiger.TigerElysiumPlayerState.LeftPartyDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x16c0340
	void LeftParty(struct FTigerParty InParty); // Function Tiger.TigerElysiumPlayerState.LeftParty // (Final|Native|Private|HasOutParms) // @ game+0x1288050
	void LeaveGroupByGroupId(struct FTigerGroupId InGroupId); // Function Tiger.TigerElysiumPlayerState.LeaveGroupByGroupId // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1287fb0
	void JoinedPartyDelegate__DelegateSignature(struct FTigerParty InParty); // DelegateFunction Tiger.TigerElysiumPlayerState.JoinedPartyDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x16c0340
	void JoinedParty(struct FTigerParty InParty); // Function Tiger.TigerElysiumPlayerState.JoinedParty // (Final|Native|Private|HasOutParms) // @ game+0x1287ec0
	bool IsFirstTimeMatchMaking(); // Function Tiger.TigerElysiumPlayerState.IsFirstTimeMatchMaking // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287de0
	int32_t GetPartySize(); // Function Tiger.TigerElysiumPlayerState.GetPartySize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287c10
	void Client_ReceiveOutfitVendorCategories(struct TArray<struct FTigerClientCategoryDefinition> ClientCategories); // Function Tiger.TigerElysiumPlayerState.Client_ReceiveOutfitVendorCategories // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1287890
	void Client_ReceiveGroupInvitation(struct FTigerGroupInvitation GroupInvitation, struct ATigerPlayerState* Inviter); // Function Tiger.TigerElysiumPlayerState.Client_ReceiveGroupInvitation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12877b0
	void Client_OnGroupMemberReadyStateChanged(struct ATigerElysiumPlayerState* InGroupMember, bool bInNewReadyState, bool bInIsEveryoneReady); // Function Tiger.TigerElysiumPlayerState.Client_OnGroupMemberReadyStateChanged // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1287690
};

// Class Tiger.TigerEmoteControllerComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerEmoteControllerComponent : UActorComponent {
	char SelectableEmoteCount; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
	struct ATigerPlayerController* PlayerController; // 0xb8(0x08)
	char pad_C0[0x18]; // 0xc0(0x18)

	void Server_StopEmote(); // Function Tiger.TigerEmoteControllerComponent.Server_StopEmote // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1288ee0
	void Server_PlayEmote(char InIndex); // Function Tiger.TigerEmoteControllerComponent.Server_PlayEmote // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1288cc0
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerEmoteControllerComponent.OnSelectedCharacterChanged // (Final|Native|Private) // @ game+0x1288540
	void OnIconsLoaded__DelegateSignature(struct TArray<struct UTexture2D*> InIcons); // DelegateFunction Tiger.TigerEmoteControllerComponent.OnIconsLoaded__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x16c0340
	void LoadEmoteIcons(struct FDelegate InDelegate); // Function Tiger.TigerEmoteControllerComponent.LoadEmoteIcons // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1288160
	bool HasEmoteAtIndex(char InIndex); // Function Tiger.TigerEmoteControllerComponent.HasEmoteAtIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287cd0
	struct TArray<struct UTigerCharacterEmoteCustomization*> GetSelectedEmotes(); // Function Tiger.TigerEmoteControllerComponent.GetSelectedEmotes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287c30
	void GetEmoteNames(struct TArray<struct FText> OutEmoteNames); // Function Tiger.TigerEmoteControllerComponent.GetEmoteNames // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287b10
	void Client_EmoteFailed(); // Function Tiger.TigerEmoteControllerComponent.Client_EmoteFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1246c40
};

// Class Tiger.TigerEmotePlayerComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerEmotePlayerComponent : UActorComponent {
	struct FTigerPlayingEmote PlayingEmote; // 0xb0(0x10)
	struct ATigerPlayer* Player; // 0xc0(0x08)

	void OnRep_PlayingEmote(struct FTigerPlayingEmote OldEmote); // Function Tiger.TigerEmotePlayerComponent.OnRep_PlayingEmote // (Final|Native|Private|HasOutParms) // @ game+0x1288470
};

// Class Tiger.TigerEmoteWheelWidget
// Size: 0x2b0 (Inherited: 0x2a0)
struct UTigerEmoteWheelWidget : UTigerWheelWidget {
	struct ATigerPlayer* Player; // 0x2a0(0x08)
	struct UTigerEmoteControllerComponent* EmoteController; // 0x2a8(0x08)

	void PopulateLoadedEmotes(struct TArray<struct UTexture2D*> InEmoteIcons); // Function Tiger.TigerEmoteWheelWidget.PopulateLoadedEmotes // (Final|Native|Private|HasOutParms) // @ game+0x128d600
};

// Class Tiger.TigerEmptyActorWithChild
// Size: 0x230 (Inherited: 0x228)
struct ATigerEmptyActorWithChild : AActor {
	struct UChildActorComponent* ChildActorComponent; // 0x228(0x08)
};

// Class Tiger.TigerEngineSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerEngineSettings : UDeveloperSettings {
	bool bVerifyGc; // 0x38(0x01)
	bool bCreateGameInstanceGcCluster; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	float AcousticPortalAutoCloseDistance; // 0x3c(0x04)
};

// Class Tiger.TigerEnragedEffectActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerEnragedEffectActor : AActor {
	bool bIsActive; // 0x228(0x01)
	bool bHasDamageBuff; // 0x229(0x01)
	bool bIsRegenerating; // 0x22a(0x01)
	char pad_22B[0x5]; // 0x22b(0x05)

	void OnRegenStopped(); // Function Tiger.TigerEnragedEffectActor.OnRegenStopped // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnRegenStarted(); // Function Tiger.TigerEnragedEffectActor.OnRegenStarted // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnEnragedDeactivated(); // Function Tiger.TigerEnragedEffectActor.OnEnragedDeactivated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnEnragedActivated(); // Function Tiger.TigerEnragedEffectActor.OnEnragedActivated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDamageBuffRemoved(); // Function Tiger.TigerEnragedEffectActor.OnDamageBuffRemoved // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnCharacterAction(enum class ETigerCharacterAction InAction); // Function Tiger.TigerEnragedEffectActor.OnCharacterAction // (Final|Native|Protected) // @ game+0x128cfe0
	void Multicast_RegenStopped(); // Function Tiger.TigerEnragedEffectActor.Multicast_RegenStopped // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x128cf30
	void Multicast_RegenStarted(); // Function Tiger.TigerEnragedEffectActor.Multicast_RegenStarted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xb8c8c0
	void Multicast_EnragedDeactivated(); // Function Tiger.TigerEnragedEffectActor.Multicast_EnragedDeactivated // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x128ce90
	void Multicast_EnragedActivated(); // Function Tiger.TigerEnragedEffectActor.Multicast_EnragedActivated // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xc6ae10
	void Multicast_DamageBuffRemoved(); // Function Tiger.TigerEnragedEffectActor.Multicast_DamageBuffRemoved // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x128ce70
	struct ATigerPlayer* GetPlayer(); // Function Tiger.TigerEnragedEffectActor.GetPlayer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x128cd40
};

// Class Tiger.TigerEnteringNewAreaPrompt
// Size: 0x2c8 (Inherited: 0x2a8)
struct UTigerEnteringNewAreaPrompt : UTigerSimpleTextPrompt {
	struct FText SubText; // 0x2a8(0x18)
	struct UTexture2D* TextBackground; // 0x2c0(0x08)
};

// Class Tiger.TigerEntityCheckpointActorSpawner
// Size: 0x200 (Inherited: 0x200)
struct UTigerEntityCheckpointActorSpawner : USceneComponent {
	struct AActor* ActorToSpawn; // 0x1f8(0x08)
};

// Class Tiger.TigerNPCInstantSpawner
// Size: 0x260 (Inherited: 0x260)
struct ATigerNPCInstantSpawner : ATigerNPCSpawningBase {

	struct ATigerBaseNPC* SpawnNpcAtLocation(struct FVector Location, struct UTigerNPCAsset* NpcAssetToUse, struct FRotator Rotation, bool bIgnoreSpawnSetting); // Function Tiger.TigerNPCInstantSpawner.SpawnNpcAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12e1be0
};

// Class Tiger.TigerEntityLeaderSpawner
// Size: 0x260 (Inherited: 0x260)
struct ATigerEntityLeaderSpawner : ATigerNPCInstantSpawner {

	struct ATigerBaseNPC* SpawnEntityLeader(); // Function Tiger.TigerEntityLeaderSpawner.SpawnEntityLeader // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerEntityCheckpointSupplyDropLocation
// Size: 0x230 (Inherited: 0x228)
struct ATigerEntityCheckpointSupplyDropLocation : AActor {
	struct USceneComponent* SupplyRoot; // 0x228(0x08)
};

// Class Tiger.TigerNPCPointSpawner
// Size: 0x288 (Inherited: 0x260)
struct ATigerNPCPointSpawner : ATigerNPCSpawningBase {
	struct TArray<struct FTigerNPCSpawningPoint> SpawningPoints; // 0x260(0x10)
	int32_t MaxNPCsToSpawn; // 0x270(0x04)
	int32_t MinNPCsToSpawn; // 0x274(0x04)
	int32_t MaxNPCsToSpawnGroup; // 0x278(0x04)
	int32_t MinNPCsToSpawnGroup; // 0x27c(0x04)
	char pad_280[0x8]; // 0x280(0x08)
};

// Class Tiger.TigerEntityCheckpoint
// Size: 0x2b0 (Inherited: 0x288)
struct ATigerEntityCheckpoint : ATigerNPCPointSpawner {
	struct ATigerBaseNPC* EntityLeader; // 0x288(0x08)
	struct AActor* SupplyDropLocation; // 0x290(0x08)
	struct UTigerSupplyDropConsumableAsset* SupplyDropConsumable; // 0x298(0x08)
	struct UActorComponent* SupplyDropComponent; // 0x2a0(0x08)
	bool bIsAcknowledged; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)

	void OnRep_Acknowledged(bool bOldIsAcknowledged); // Function Tiger.TigerEntityCheckpoint.OnRep_Acknowledged // (Final|Native|Private) // @ game+0x128d3f0
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerEntityCheckpoint.MatchStateChanged // (Final|Native|Private) // @ game+0x128cda0
};

// Class Tiger.TigerEntityCombatComponent
// Size: 0x138 (Inherited: 0xb0)
struct UTigerEntityCombatComponent : UActorComponent {
	float TimeBeforeAttackingNewPlayer; // 0xb0(0x04)
	float ClosestAllowedDistanceToBeSprinting; // 0xb4(0x04)
	float SprintingCooldownDuration; // 0xb8(0x04)
	float MaxLaserLength; // 0xbc(0x04)
	float MaxAngleFromOriginalWeapon; // 0xc0(0x04)
	float LaserInterpolateSpeed; // 0xc4(0x04)
	float LaserInterpolateRuberbandSpeedMultiplier; // 0xc8(0x04)
	struct FName MaterialScaleName; // 0xcc(0x08)
	struct FName MaterialFadeLaserName; // 0xd4(0x08)
	bool bHideLaserDuringReload; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
	float NotInCombatFadedLaserLength; // 0xe0(0x04)
	float ReloadingFadedLaserLength; // 0xe4(0x04)
	struct ATigerNPC* NpcOwner; // 0xe8(0x08)
	char pad_F0[0x10]; // 0xf0(0x10)
	struct UStaticMeshComponent* LaserPointer; // 0x100(0x08)
	struct UParticleSystemComponent* LaserPointerOriginGlowParticleSystem; // 0x108(0x08)
	char pad_110[0x28]; // 0x110(0x28)

	void Multicast_EntityEvent(enum class ETigerEntityEvent InEntityEvent); // Function Tiger.TigerEntityCombatComponent.Multicast_EntityEvent // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x128ceb0
};

// Class Tiger.TigerEntityHelicopter
// Size: 0x2e0 (Inherited: 0x228)
struct ATigerEntityHelicopter : AActor {
	struct UAkAudioEvent* PreparingToFireSound; // 0x228(0x08)
	struct UAkAudioEvent* TargetEnteredSpotlightSound; // 0x230(0x08)
	struct UAkAudioEvent* TargetLeftSpotlightSound; // 0x238(0x08)
	struct ATigerProjectile* ProjectileClass; // 0x240(0x08)
	struct UTigerRangedWeapon* WeaponType; // 0x248(0x08)
	struct UTigerRangedWeapon* Weapon; // 0x250(0x08)
	struct UDataTable* RangedWeaponsDatatable; // 0x258(0x08)
	char pad_260[0x8]; // 0x260(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> TargetedPlayer; // 0x268(0x08)
	struct USceneComponent* LineOfSightStart; // 0x270(0x08)
	char pad_278[0xc]; // 0x278(0x0c)
	struct FVector_NetQuantize10 SpotlightEndTarget; // 0x284(0x0c)
	struct USceneComponent* SceneRoot; // 0x290(0x08)
	struct UChildActorComponent* HelicopterChildActor; // 0x298(0x08)
	float SpotlightMovementSpeed; // 0x2a0(0x04)
	char pad_2A4[0x14]; // 0x2a4(0x14)
	float TargetSpottedDelayBeforeFiring; // 0x2b8(0x04)
	char pad_2BC[0x24]; // 0x2bc(0x24)

	void SetSpotlightForLos(struct USceneComponent* SpotLightPosition); // Function Tiger.TigerEntityHelicopter.SetSpotlightForLos // (Final|Native|Protected|BlueprintCallable) // @ game+0x128d7a0
	void Multicast_PlayAudio(struct UAkAudioEvent* AudioEventToPlay); // Function Tiger.TigerEntityHelicopter.Multicast_PlayAudio // (Net|Native|Event|NetMulticast|Protected) // @ game+0x128cf50
	void Multicast_FireProjectile(); // Function Tiger.TigerEntityHelicopter.Multicast_FireProjectile // (Net|Native|Event|NetMulticast|Protected) // @ game+0x128cf30
	void GetLookAtRotatorForSpotLight(struct FVector SpotLightPosition, float OutDistance, struct FRotator OutLookAtRotator); // Function Tiger.TigerEntityHelicopter.GetLookAtRotatorForSpotLight // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x128cc00
};

// Class Tiger.TigerEntityJudgeHelicopter
// Size: 0x320 (Inherited: 0x2e0)
struct ATigerEntityJudgeHelicopter : ATigerEntityHelicopter {
	struct ATigerJudge* Judge; // 0x2e0(0x08)
	char pad_2E8[0x8]; // 0x2e8(0x08)
	float DesiredForwardOffsetFromJudge; // 0x2f0(0x04)
	float DesiredHeight; // 0x2f4(0x04)
	float MaxSpeed; // 0x2f8(0x04)
	float MaxTargetDistance2DFromJudge; // 0x2fc(0x04)
	float MinimumTargetHeight; // 0x300(0x04)
	float MinimumHeightOverJudge; // 0x304(0x04)
	float LoseTargetTime; // 0x308(0x04)
	char pad_30C[0x4]; // 0x30c(0x04)
	struct FTimerHandle KillSelfHandle; // 0x310(0x08)
	enum class ETigerJudgeHelicopterSpotlightState CurrentSpotlightState; // 0x318(0x01)
	char pad_319[0x7]; // 0x319(0x07)

	bool ShouldFlyAway(); // Function Tiger.TigerEntityJudgeHelicopter.ShouldFlyAway // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x128d830
	void SelectNewTarget(struct TArray<struct ATigerPlayer*> PossibleTargets); // Function Tiger.TigerEntityJudgeHelicopter.SelectNewTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x128d6b0
	bool HasTarget(); // Function Tiger.TigerEntityJudgeHelicopter.HasTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x128cd70
};

// Class Tiger.TigerEntityPatrollingHelicopter
// Size: 0x498 (Inherited: 0x2e0)
struct ATigerEntityPatrollingHelicopter : ATigerEntityHelicopter {
	struct FTigerAISplinePathData PathData; // 0x2e0(0xa0)
	struct TArray<struct FVector> GeneratedCirclularPath; // 0x380(0x10)
	struct TMap<enum class ETigerPatrollingHelicopterSpotlightState, struct FColor> SpotlightColours; // 0x390(0x50)
	struct FVector CurrentTrackingFlightTarget; // 0x3e0(0x0c)
	char pad_3EC[0x18]; // 0x3ec(0x18)
	int32_t NumberOfPointsInCirclularPath; // 0x404(0x04)
	int32_t CurrentSplineWaypointIndex; // 0x408(0x04)
	int32_t CurrentTrackingIndex; // 0x40c(0x04)
	char pad_410[0x4]; // 0x410(0x04)
	float IdleRotationSpeed; // 0x414(0x04)
	float HoverRotationSpeed; // 0x418(0x04)
	float IdleFlightSpeed; // 0x41c(0x04)
	float HoverFlightSpeed; // 0x420(0x04)
	float LostPlayerStateNewSpotlightTargetRadius; // 0x424(0x04)
	float MaxTimeToSearchForLostPlayer; // 0x428(0x04)
	float CurrentTimeUntilReturnToPatrol; // 0x42c(0x04)
	float MasqueradePointGainFromSpotlightPerSecond; // 0x430(0x04)
	float SpaceBetweenMeshes; // 0x434(0x04)
	float MovementDistanceThresholdSquared; // 0x438(0x04)
	float BelowRoofHeightCutOffTime; // 0x43c(0x04)
	float TimeCurrentTargetWasBelowRoofHeight; // 0x440(0x04)
	float TargetedPlayerHoverCircleRadius; // 0x444(0x04)
	float LostPlayerHoverCircleRadius; // 0x448(0x04)
	char pad_44C[0x4]; // 0x44c(0x04)
	float CircleGrowthRate; // 0x450(0x04)
	float MaxTimeToFindGunFireEventCulprit; // 0x454(0x04)
	char pad_458[0x14]; // 0x458(0x14)
	float TimeToLoseInvisibleBloodhuntTarget; // 0x46c(0x04)
	float DelayUntilPlayTargetSpottingSounds; // 0x470(0x04)
	enum class ETigerPatrollingHelicopterState CurrentState; // 0x474(0x01)
	enum class ETigerPatrollingHelicopterSpotlightState CurrentSpotlightState; // 0x475(0x01)
	bool bHasReachedTarget; // 0x476(0x01)
	bool bNeedToCalculateEntryVectorForTracking; // 0x477(0x01)
	bool bWasLastTargetedPlayerBloodHunted; // 0x478(0x01)
	bool bHasActiveTask; // 0x479(0x01)
	bool bIsFiring; // 0x47a(0x01)
	char pad_47B[0x5]; // 0x47b(0x05)
	struct UTigerAICoordinator* AICoordinator; // 0x480(0x08)
	struct USplineComponent* Spline; // 0x488(0x08)
	char pad_490[0x8]; // 0x490(0x08)

	void UpdateSpotlightPositionFromPatrollingLightSweep(); // Function Tiger.TigerEntityPatrollingHelicopter.UpdateSpotlightPositionFromPatrollingLightSweep // (Final|Native|Protected|BlueprintCallable) // @ game+0x128d880
	void UpdateClientSpotlight(); // Function Tiger.TigerEntityPatrollingHelicopter.UpdateClientSpotlight // (Final|Native|Protected|BlueprintCallable) // @ game+0x128d860
	void OnStoppedShooting(); // Function Tiger.TigerEntityPatrollingHelicopter.OnStoppedShooting // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnStartedShooting(); // Function Tiger.TigerEntityPatrollingHelicopter.OnStartedShooting // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnRep_IsFiring(); // Function Tiger.TigerEntityPatrollingHelicopter.OnRep_IsFiring // (Final|Native|Protected) // @ game+0x128d480
	float GetSpotlightRadius(); // Function Tiger.TigerEntityPatrollingHelicopter.GetSpotlightRadius // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerEquipWheelWidget
// Size: 0x2a0 (Inherited: 0x2a0)
struct UTigerEquipWheelWidget : UTigerWheelWidget {

	void Populate(struct TArray<struct UTigerInventoryItemBase*> InItemArray, int32_t InMaxItemCount); // Function Tiger.TigerEquipWheelWidget.Populate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x128d500
};

// Class Tiger.TigerExperienceEvent
// Size: 0x50 (Inherited: 0x28)
struct UTigerExperienceEvent : UObject {
	int32_t BaseExperienceGain[0x2]; // 0x28(0x08)
	struct UTexture2D* EventIcon; // 0x30(0x08)
	struct FText Description; // 0x38(0x18)

	void GetExperienceAmount(struct ATigerPlayer* Player, struct ATigerCharacter* EventTiedCharacter, enum class EMatchBalanceMode BalanceMode, int32_t OutOwnPlayerExperienceGain, int32_t OutExperienceToAddToEveryGroupMemberIncludingSelf); // Function Tiger.TigerExperienceEvent.GetExperienceAmount // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x128ca40
	int32_t GetBalanceModeExperience(enum class EMatchBalanceMode InBalanceMode); // Function Tiger.TigerExperienceEvent.GetBalanceModeExperience // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x128c9b0
};

// Class Tiger.TigerCheatExperienceEvent
// Size: 0x50 (Inherited: 0x50)
struct UTigerCheatExperienceEvent : UTigerExperienceEvent {
};

// Class Tiger.TigerEyewearAnimInstance
// Size: 0x450 (Inherited: 0x3c0)
struct UTigerEyewearAnimInstance : UTigerAnimInstance {
	struct FTransform NoseTransform; // 0x3c0(0x30)
	struct FTransform EarRightTransform; // 0x3f0(0x30)
	struct FTransform EarLeftTransform; // 0x420(0x30)
};

// Class Tiger.TigerFamiliarScout
// Size: 0x2a0 (Inherited: 0x228)
struct ATigerFamiliarScout : AActor {
	char pad_228[0x4]; // 0x228(0x04)
	float MoveSpeed; // 0x22c(0x04)
	float RecallMoveSpeed; // 0x230(0x04)
	struct FVector TargetLocation; // 0x234(0x0c)
	struct FTimerHandle ArrivalTimerHandle; // 0x240(0x08)
	bool bReturnToOwner; // 0x248(0x01)
	char pad_249[0x3]; // 0x249(0x03)
	struct FVector ManuallyScoutAtLocation; // 0x24c(0x0c)
	int32_t rank; // 0x258(0x04)
	char pad_25C[0x20]; // 0x25c(0x20)
	bool bIsMoving; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
	struct FVector Velocity; // 0x280(0x0c)
	float ScoutTimeToReachTarget; // 0x28c(0x04)
	char pad_290[0x10]; // 0x290(0x10)

	void OnTargetLocationChanged(); // Function Tiger.TigerFamiliarScout.OnTargetLocationChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnScoutStartedReturnToOwner(); // Function Tiger.TigerFamiliarScout.OnScoutStartedReturnToOwner // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnRep_TargetLocation(); // Function Tiger.TigerFamiliarScout.OnRep_TargetLocation // (Final|Native|Private) // @ game+0x128d4e0
	void OnRep_ReturnToOwner(); // Function Tiger.TigerFamiliarScout.OnRep_ReturnToOwner // (Final|Native|Protected|BlueprintCallable) // @ game+0x128d4c0
	void OnRep_ManuallyScoutAtLocation(); // Function Tiger.TigerFamiliarScout.OnRep_ManuallyScoutAtLocation // (Final|Native|Private) // @ game+0x128d4a0
	void OnArrivedAtOwner(); // Function Tiger.TigerFamiliarScout.OnArrivedAtOwner // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void DeactivateScouting(); // Function Tiger.TigerFamiliarScout.DeactivateScouting // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void AttachToCharacter(struct ATigerCharacter* Character); // Function Tiger.TigerFamiliarScout.AttachToCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x128c920
	void ActivateScouting(); // Function Tiger.TigerFamiliarScout.ActivateScouting // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerFamiliarScoutPassive
// Size: 0xe8 (Inherited: 0xb0)
struct UTigerFamiliarScoutPassive : UActorComponent {
	struct TArray<struct ATigerCharacter*> OverlappingCharacters; // 0xb0(0x10)
	struct UParticleSystemComponent* OrbitingParticles; // 0xc0(0x08)
	struct USphereComponent* ScanSphere; // 0xc8(0x08)
	struct ATigerPlayer* Player; // 0xd0(0x08)
	struct UTigerScoutsConfig* Config; // 0xd8(0x08)
	bool bIsPassiveActivated; // 0xe0(0x01)
	bool bPlayerIsVisible; // 0xe1(0x01)
	char pad_E2[0x6]; // 0xe2(0x06)

	void ScoutSpawned(struct ATigerFamiliarScout* SpawnedScout); // Function Tiger.TigerFamiliarScoutPassive.ScoutSpawned // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnComponentEndOverlapScanSphere(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerFamiliarScoutPassive.OnComponentEndOverlapScanSphere // (Final|Native|Private) // @ game+0x128d290
	void OnComponentBeginOverlapScanSphere(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult InSweepResult); // Function Tiger.TigerFamiliarScoutPassive.OnComponentBeginOverlapScanSphere // (Final|Native|Private|HasOutParms) // @ game+0x128d060
	void EvaluateVisibility(); // Function Tiger.TigerFamiliarScoutPassive.EvaluateVisibility // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	struct UParticleSystemComponent* CreateOrbitingParticles(); // Function Tiger.TigerFamiliarScoutPassive.CreateOrbitingParticles // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerFeedingAnimationAsset
// Size: 0x390 (Inherited: 0x30)
struct UTigerFeedingAnimationAsset : UDataAsset {
	struct FTigerFeedingDataByGender FeedingDataByClan[0x3]; // 0x30(0x360)
};

// Class Tiger.TigerFeedingComponent
// Size: 0x1f8 (Inherited: 0xb0)
struct UTigerFeedingComponent : UActorComponent {
	bool bIsBloodDrained; // 0xb0(0x01)
	bool bIsBeingFedOn; // 0xb1(0x01)
	bool bDidAttackEndFeed; // 0xb2(0x01)
	char pad_B3[0x5]; // 0xb3(0x05)
	struct FMulticastInlineDelegate OnStoppedFeeding; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnFeedingDoneEvent; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnStartedFeedingApproach; // 0xd8(0x10)
	struct FMulticastInlineDelegate OnStartedFeeding; // 0xe8(0x10)
	struct FMulticastInlineDelegate OnFeedingApproachDone; // 0xf8(0x10)
	float MaximumFeedingDistance; // 0x108(0x04)
	int32_t MaxFeedingTicks; // 0x10c(0x04)
	float FeedTickTime; // 0x110(0x04)
	float PartRequiredForBloodDrainedState; // 0x114(0x04)
	float FeedHealthAmount; // 0x118(0x04)
	float TravelSpeed; // 0x11c(0x04)
	int32_t FeedingTicksLeft; // 0x120(0x04)
	int32_t CurrentFeedingTicksLeft; // 0x124(0x04)
	struct TWeakObjectPtr<struct ATigerNPC> DesiredFeedingTarget; // 0x128(0x08)
	struct TWeakObjectPtr<struct ATigerNPC> CurrentTarget; // 0x130(0x08)
	struct UMatineeCameraShake* FeedingCameraShake; // 0x138(0x08)
	struct UTigerFeedingAnimationAsset* FeedingAnimationAsset; // 0x140(0x08)
	float FeedingCameraDecoupleDelay; // 0x148(0x04)
	float ApproachUIProgress; // 0x14c(0x04)
	float CapsuleDistanceCompensator; // 0x150(0x04)
	bool bFeedingDebug; // 0x154(0x01)
	char pad_155[0x7b]; // 0x155(0x7b)
	struct UAnimMontage* FedOnApproachAnim; // 0x1d0(0x08)
	struct UAnimMontage* FedOnFeedingAnim; // 0x1d8(0x08)
	struct UAnimMontage* FedOnDecoupleAnim; // 0x1e0(0x08)
	struct FTimerHandle DecoupleTimerCamera; // 0x1e8(0x08)
	char pad_1F0[0x8]; // 0x1f0(0x08)

	void TigerStartedFeedingApproach__DelegateSignature(float TravelTime); // DelegateFunction Tiger.TigerFeedingComponent.TigerStartedFeedingApproach__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerFeedingMulticastDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerFeedingComponent.TigerFeedingMulticastDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateStoppedFeeding__DelegateSignature(bool bWasAttacked); // DelegateFunction Tiger.TigerFeedingComponent.TigerDelegateStoppedFeeding__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void Server_StartFeeding(struct ATigerNPC* InTarget, struct FVector InDesiredAttackerFeedingLocation); // Function Tiger.TigerFeedingComponent.Server_StartFeeding // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1292430
	void RestoreFeedingTicks(); // Function Tiger.TigerFeedingComponent.RestoreFeedingTicks // (Final|Native|Public|BlueprintCallable) // @ game+0x1292140
	void OnRep_DesiredFeedingTargetChanged(); // Function Tiger.TigerFeedingComponent.OnRep_DesiredFeedingTargetChanged // (Final|Native|Private) // @ game+0x1291e00
	void OnFeedingDoneEvent__DelegateSignature(bool bTargetIsDrained, struct ATigerCharacter* InTargetFedOn); // DelegateFunction Tiger.TigerFeedingComponent.OnFeedingDoneEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void Multicast_AttackerAbortFeeding(bool bInWasAttacked); // Function Tiger.TigerFeedingComponent.Multicast_AttackerAbortFeeding // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1263aa0
	bool IsFeeding(); // Function Tiger.TigerFeedingComponent.IsFeeding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291b30
	bool IsFedOn(); // Function Tiger.TigerFeedingComponent.IsFedOn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291b00
	bool IsDecoupling(); // Function Tiger.TigerFeedingComponent.IsDecoupling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291ad0
	float GetNormalizedFeedingAmount(); // Function Tiger.TigerFeedingComponent.GetNormalizedFeedingAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291980
	float GetFeedingProgress(); // Function Tiger.TigerFeedingComponent.GetFeedingProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12917e0
	void Client_AttackerAbortFeeding(bool bInWasAttacked); // Function Tiger.TigerFeedingComponent.Client_AttackerAbortFeeding // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12914a0
};

// Class Tiger.TigerFetchPremiumCurrencyManager
// Size: 0x60 (Inherited: 0x28)
struct UTigerFetchPremiumCurrencyManager : UObject {
	struct UShMidasAdapter* MidasAdapter; // 0x28(0x08)
	struct UTigerStoreService* StoreService; // 0x30(0x08)
	struct TWeakObjectPtr<struct UTigerGameInstance> GameInstance; // 0x38(0x08)
	char pad_40[0x20]; // 0x40(0x20)
};

// Class Tiger.TigerFindSessionAsync
// Size: 0xf0 (Inherited: 0x30)
struct UTigerFindSessionAsync : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailed; // 0x40(0x10)
	char pad_50[0xa0]; // 0x50(0xa0)

	struct FTigerBpFindSessionSelectedSession SelectSession(struct FTigerBpFindSessionResultList FindSessionResult, int32_t Index); // Function Tiger.TigerFindSessionAsync.SelectSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1292160
	void ReportMatchFoundSuccessfully(struct FTigerBpFindSessionResultList InResult); // Function Tiger.TigerFindSessionAsync.ReportMatchFoundSuccessfully // (Final|Native|Protected|HasOutParms) // @ game+0x1292030
	struct UTigerFindSessionAsync* FindSession(struct UObject* WorldContextObject, struct APlayerController* PlayerController, enum class ESessionType SESSIONTYPE); // Function Tiger.TigerFindSessionAsync.FindSession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1291590
};

// Class Tiger.TigerFirstTimeArchetypeSelectionUI
// Size: 0x470 (Inherited: 0x3b0)
struct UTigerFirstTimeArchetypeSelectionUI : UTigerSceneBackgroundUI {
	struct FMulticastInlineDelegate OnPreloadingDone; // 0x3b0(0x10)
	struct FMulticastInlineDelegate OnSelectedArchetypeChanged; // 0x3c0(0x10)
	struct FName CameraSocketName; // 0x3d0(0x08)
	struct FName AnimationSequenceName; // 0x3d8(0x08)
	struct UAkAudioEvent* CharacterSelectedAudioEvent; // 0x3e0(0x08)
	struct UAkAudioEvent* CharacterHoveredAudioEvent; // 0x3e8(0x08)
	struct UAkAudioEvent* EnterElysiumAudioEvent; // 0x3f0(0x08)
	enum class ETigerPowerKitType DefaultSelectedArchetype; // 0x3f8(0x01)
	char pad_3F9[0x7]; // 0x3f9(0x07)
	SoftClassProperty PaperDollClass; // 0x400(0x28)
	struct ATigerPaperDoll* CachedPaperDollClass; // 0x428(0x08)
	struct ATigerPaperDoll* PaperDoll; // 0x430(0x08)
	int32_t SelectedAppearanceIndex; // 0x438(0x04)
	enum class ETigerPowerKitType SelectedArchetypeType; // 0x43c(0x01)
	char pad_43D[0x3]; // 0x43d(0x03)
	struct UTigerPlayerClanData* CurrentClanData; // 0x440(0x08)
	struct TArray<struct FTigerCharacterAppearance> ArchetypeApperances; // 0x448(0x10)
	char pad_458[0x18]; // 0x458(0x18)

	void PreviewArchetype(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerFirstTimeArchetypeSelectionUI.PreviewArchetype // (Final|Native|Protected|BlueprintCallable) // @ game+0x1291e40
	void OnStartGameNative(); // Function Tiger.TigerFirstTimeArchetypeSelectionUI.OnStartGameNative // (Final|Native|Protected|BlueprintCallable) // @ game+0x1291e20
	void OnStartGame(struct FTigerPersistentCharacterID InSelectedCharacterId); // Function Tiger.TigerFirstTimeArchetypeSelectionUI.OnStartGame // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnPreloadingDone__DelegateSignature(); // DelegateFunction Tiger.TigerFirstTimeArchetypeSelectionUI.OnPreloadingDone__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void ArchetypeSelectionDelegate__DelegateSignature(struct UTigerPowerKit* InArchetypeData, struct FTigerCharacterAppearance InCharacterAppearance); // DelegateFunction Tiger.TigerFirstTimeArchetypeSelectionUI.ArchetypeSelectionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
};

// Class Tiger.TigerFriend
// Size: 0xa8 (Inherited: 0x28)
struct UTigerFriend : UObject {
	struct FMulticastInlineDelegate OnOnlineStatusChanged; // 0x28(0x10)
	struct FMulticastInlineDelegate OnLocationChanged; // 0x38(0x10)
	struct FString DISPLAYNAME; // 0x48(0x10)
	struct FTigerPersistentPlayerID PlayerId; // 0x58(0x10)
	struct FSharkUserId SharkmobUserId; // 0x68(0x10)
	struct FString PlatformUesrId; // 0x78(0x10)
	char pad_88[0x8]; // 0x88(0x08)
	struct FString Location; // 0x90(0x10)
	char pad_A0[0x8]; // 0xa0(0x08)

	void OnOnlineStatusChanged__DelegateSignature(bool bInOnline); // DelegateFunction Tiger.TigerFriend.OnOnlineStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnLocationChanged__DelegateSignature(struct FString InLocation); // DelegateFunction Tiger.TigerFriend.OnLocationChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	struct FSharkUserId GetSharkmobUserId(); // Function Tiger.TigerFriend.GetSharkmobUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291a90
	struct FTigerPersistentPlayerID GetPlayerId(); // Function Tiger.TigerFriend.GetPlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291a50
	struct FString GetPlatformUserId(); // Function Tiger.TigerFriend.GetPlatformUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291a10
	bool GetOnline(); // Function Tiger.TigerFriend.GetOnline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12919e0
	struct FString GetLocation(); // Function Tiger.TigerFriend.GetLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291940
	bool GetIsSharkmobFriend(); // Function Tiger.TigerFriend.GetIsSharkmobFriend // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291560
	struct FString GetDisplayName(); // Function Tiger.TigerFriend.GetDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291760
	bool CouldRemove(); // Function Tiger.TigerFriend.CouldRemove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291560
	bool CouldInviteToParty(); // Function Tiger.TigerFriend.CouldInviteToParty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291530
};

// Class Tiger.TigerFriendInvite
// Size: 0x68 (Inherited: 0x28)
struct UTigerFriendInvite : UObject {
	struct FString DISPLAYNAME; // 0x28(0x10)
	struct FTigerPersistentPlayerID PlayerId; // 0x38(0x10)
	struct FSharkUserId SharkmobUserId; // 0x48(0x10)
	struct FString PlatformUserId; // 0x58(0x10)

	struct FString GetDisplayName(); // Function Tiger.TigerFriendInvite.GetDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12917a0
};

// Class Tiger.TigerFriendService
// Size: 0x180 (Inherited: 0x28)
struct UTigerFriendService : UObject {
	char pad_28[0x158]; // 0x28(0x158)
};

// Class Tiger.TigerFriendSubsystem
// Size: 0x160 (Inherited: 0x30)
struct UTigerFriendSubsystem : UGameInstanceSubsystem {
	struct TArray<struct UTigerFriend*> Friends; // 0x30(0x10)
	struct TArray<struct UTigerFriendInvite*> Invites; // 0x40(0x10)
	enum class ETigerOnlineServiceStatus ServiceStatus; // 0x50(0x01)
	char pad_51[0xdf]; // 0x51(0xdf)
	struct UTigerPresenceSubsystem* PresenceSubsystem; // 0x130(0x08)
	char pad_138[0x10]; // 0x138(0x10)
	struct FString FriendSubsystemType; // 0x148(0x10)
	struct UTigerFriendSubsystemImpl* Impl; // 0x158(0x08)

	void TigerFriendSetServiceStatus(enum class ETigerOnlineServiceStatus InServiceStatus); // Function Tiger.TigerFriendSubsystem.TigerFriendSetServiceStatus // (Final|Exec|Native|Public) // @ game+0x1264db0
	void SortFriends(); // Function Tiger.TigerFriendSubsystem.SortFriends // (Final|Native|Public|BlueprintCallable) // @ game+0x1292530
	void SendInvite(struct FSharkUserId InInviteeSharkmobUserId, struct FTigerPersistentPlayerID InInviteePlayerId); // Function Tiger.TigerFriendSubsystem.SendInvite // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1292310
	void RemoveFriend(struct FSharkUserId InFriendSharkmobUserId); // Function Tiger.TigerFriendSubsystem.RemoveFriend // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1291f80
	void RejectInvite(struct FSharkUserId InFromSharkmobUserId); // Function Tiger.TigerFriendSubsystem.RejectInvite // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1291ed0
	void OnPlayersPresenceChange(struct TArray<struct FTigerPlayerPresenceInfo> InPlayersPresenceInfo); // Function Tiger.TigerFriendSubsystem.OnPlayersPresenceChange // (Final|Native|Private|HasOutParms) // @ game+0x1291d20
	void OnPlayerPresenceChange(struct FTigerPlayerPresenceInfo InPlayerPresenceInfo); // Function Tiger.TigerFriendSubsystem.OnPlayerPresenceChange // (Final|Native|Private|HasOutParms) // @ game+0x1291c60
	void LoadInvites(); // Function Tiger.TigerFriendSubsystem.LoadInvites // (Final|Native|Public|BlueprintCallable) // @ game+0x1291c40
	void LoadFriends(); // Function Tiger.TigerFriendSubsystem.LoadFriends // (Final|Native|Public|BlueprintCallable) // @ game+0x1291c20
	bool IsFriend(struct FTigerPersistentPlayerID InPlayerId); // Function Tiger.TigerFriendSubsystem.IsFriend // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291b60
	int32_t GetNumFriendsOnline(); // Function Tiger.TigerFriendSubsystem.GetNumFriendsOnline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12919b0
	bool GetIsEnabled(); // Function Tiger.TigerFriendSubsystem.GetIsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291910
	struct FText GetInvitesUnsupportedReason(); // Function Tiger.TigerFriendSubsystem.GetInvitesUnsupportedReason // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291870
	enum class ETigerFriendLoadStatus GetInvitesLoadStatus(); // Function Tiger.TigerFriendSubsystem.GetInvitesLoadStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291840
	enum class ETigerFriendLoadStatus GetFriendsLoadStatus(); // Function Tiger.TigerFriendSubsystem.GetFriendsLoadStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291810
	struct FText GetDisabledReason(); // Function Tiger.TigerFriendSubsystem.GetDisabledReason // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12916c0
	bool GetAreInvitesSupported(); // Function Tiger.TigerFriendSubsystem.GetAreInvitesSupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1291690
	void AcceptInvite(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerFriendSubsystem.AcceptInvite // (Final|Native|Public|BlueprintCallable) // @ game+0x1291410
};

// Class Tiger.TigerFriendSubsystemImpl
// Size: 0x30 (Inherited: 0x28)
struct UTigerFriendSubsystemImpl : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Tiger.TigerFriendSubsystemMockImpl
// Size: 0x30 (Inherited: 0x30)
struct UTigerFriendSubsystemMockImpl : UTigerFriendSubsystemImpl {
};

// Class Tiger.TigerFriendSubsystemSharknetImpl
// Size: 0x88 (Inherited: 0x30)
struct UTigerFriendSubsystemSharknetImpl : UTigerFriendSubsystemImpl {
	char pad_30[0x8]; // 0x30(0x08)
	struct UTigerFriendService* FriendService; // 0x38(0x08)
	char pad_40[0x48]; // 0x40(0x48)
};

// Class Tiger.TigerFullscreenFXManager
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerFullscreenFXManager : UActorComponent {
	struct ATigerPlayerController* Controller; // 0xb0(0x08)
	char pad_B8[0x8]; // 0xb8(0x08)
	struct UMaterial* TimedPostFXMaterial; // 0xc0(0x08)
	struct UMaterialParameterCollection* TimedPostFXCollection; // 0xc8(0x08)
	struct FName TimedPostFXCollectionName; // 0xd0(0x08)
	char pad_D8[0x18]; // 0xd8(0x18)
};

// Class Tiger.TigerGameFlowState
// Size: 0x40 (Inherited: 0x30)
struct UTigerGameFlowState : UBlueprintAsyncActionBase {
	char pad_30[0x10]; // 0x30(0x10)

	void OnEnter(); // Function Tiger.TigerGameFlowState.OnEnter // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	struct ATigerPlayerController* GetPlayerController(); // Function Tiger.TigerGameFlowState.GetPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296380
};

// Class Tiger.TigerGameFlowStateMap
// Size: 0x80 (Inherited: 0x30)
struct UTigerGameFlowStateMap : UDataAsset {
	struct TMap<struct UTigerGameFlowState*, struct UTigerGameFlowState*> FlowStateMap; // 0x30(0x50)
};

// Class Tiger.TigerGameFlowStateBoot
// Size: 0x80 (Inherited: 0x40)
struct UTigerGameFlowStateBoot : UTigerGameFlowState {
	struct FMulticastInlineDelegate OnLaunchTutorial; // 0x40(0x10)
	struct FMulticastInlineDelegate OnEnterElysiumFirstTime; // 0x50(0x10)
	struct FMulticastInlineDelegate OnEnterElysium; // 0x60(0x10)
	struct FMulticastInlineDelegate OnPreloadingDone; // 0x70(0x10)

	bool IsLandingPageEnabled(); // Function Tiger.TigerGameFlowStateBoot.IsLandingPageEnabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296790
	bool IsIntroEnabled(); // Function Tiger.TigerGameFlowStateBoot.IsIntroEnabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296740
	struct UTigerGameFlowStateBoot* EnterBoot(struct UObject* InWorldContextObject); // Function Tiger.TigerGameFlowStateBoot.EnterBoot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1295cb0
	bool CommandlineSkipTutorial(); // Function Tiger.TigerGameFlowStateBoot.CommandlineSkipTutorial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12958c0
	bool CommandlineForceTutorial(); // Function Tiger.TigerGameFlowStateBoot.CommandlineForceTutorial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295890
};

// Class Tiger.TigerGameGCClusterSubSystem
// Size: 0x50 (Inherited: 0x30)
struct UTigerGameGCClusterSubSystem : UGameInstanceSubsystem {
	char pad_30[0x8]; // 0x30(0x08)
	struct TArray<struct AActor*> CurrentActorsToProcess; // 0x38(0x10)
	char pad_48[0x8]; // 0x48(0x08)

	void FillClusterFromLevels(); // Function Tiger.TigerGameGCClusterSubSystem.FillClusterFromLevels // (Final|Native|Public) // @ game+0x1295d40
};

// Class Tiger.TigerExpRequirements
// Size: 0x40 (Inherited: 0x28)
struct UTigerExpRequirements : UObject {
	struct FTigerExpLevelRequirements ExpLevelRequirements; // 0x28(0x18)

	int32_t GetSeasonLevelCount(); // Function Tiger.TigerExpRequirements.GetSeasonLevelCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296520
	int32_t GetLevelFromExp(int32_t Exp); // Function Tiger.TigerExpRequirements.GetLevelFromExp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296280
	int32_t GetExpFromLevel(int32_t Level); // Function Tiger.TigerExpRequirements.GetExpFromLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12961a0
	bool ClampAtMaxLevel(); // Function Tiger.TigerExpRequirements.ClampAtMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x92d040
};

// Class Tiger.TigerPreloadedNiagaraSystems
// Size: 0x68 (Inherited: 0x30)
struct UTigerPreloadedNiagaraSystems : UDataAsset {
	struct FMulticastInlineDelegate OnLoadedAllAssetsEvent; // 0x30(0x10)
	struct TArray<struct TSoftObjectPtr<struct UNiagaraSystem>> Systems; // 0x40(0x10)
	char pad_50[0x18]; // 0x50(0x18)
};

// Class Tiger.TigerPreloadedClasses
// Size: 0x38 (Inherited: 0x28)
struct UTigerPreloadedClasses : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Tiger.TigerGameModeLoadingScreens
// Size: 0x80 (Inherited: 0x30)
struct UTigerGameModeLoadingScreens : UDataAsset {
	struct TMap<SoftClassProperty, struct UTigerLoadingScreenAsset*> LoadingScreenAssets; // 0x30(0x50)
};

// Class Tiger.TigerGCClusterObject
// Size: 0x28 (Inherited: 0x28)
struct UTigerGCClusterObject : UObject {
};

// Class Tiger.TigerGameInstance
// Size: 0x760 (Inherited: 0x1a8)
struct UTigerGameInstance : UGameInstance {
	struct FMulticastInlineDelegate OnTitleScreenClosed; // 0x1a8(0x10)
	SoftClassProperty DisciplineConfigsClassPtr; // 0x1b8(0x28)
	struct UObject* DisciplineConfigsClass; // 0x1e0(0x08)
	struct TArray<struct UTigerPlayerClanData*> AvailablePlayerClans; // 0x1e8(0x10)
	struct UTigerExpRequirements* SeasonExpRequirements; // 0x1f8(0x08)
	struct UTigerExpRequirements* ArchetypeExpRequirements; // 0x200(0x08)
	struct UTigerTitleListAsset* TitleList; // 0x208(0x08)
	struct UTigerOnlineStatusMessages* OnlineStatusMessagesClass; // 0x210(0x08)
	struct UTigerSaveGame* CurrentSaveGame; // 0x218(0x08)
	struct UTigerPreloadedNiagaraSystems* PreloadedNiagaraSystems; // 0x220(0x08)
	struct UTigerLoadingScreenUI* LoadingScreen; // 0x228(0x08)
	char pad_230[0x50]; // 0x230(0x50)
	struct TArray<struct UTigerCharacterPreset*> BotCharacterPresets; // 0x280(0x10)
	bool bBotsIgnorePlayer; // 0x290(0x01)
	bool bEnableBotsAsClients; // 0x291(0x01)
	bool bOnlyBotsAliveEndsMatch; // 0x292(0x01)
	bool bIsJoiningMatch; // 0x293(0x01)
	bool bHasShownTitleScreen; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)
	struct FString BotAutoJoinServer; // 0x298(0x10)
	int32_t LoadingScreenZValue; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct UTigerGameModeLoadingScreens* GameModeLoadingScreens; // 0x2b0(0x08)
	struct UDataTable* SoftCurrencies; // 0x2b8(0x08)
	struct FMulticastInlineDelegate OnFindMatchFailed; // 0x2c0(0x10)
	struct UTigerGeneralUserSettings* GeneralUserSettingsClass; // 0x2d0(0x08)
	struct UTigerGeneralUserSettings* GeneralUserSettings; // 0x2d8(0x08)
	struct UTigerQuestCollection* QuestCollection; // 0x2e0(0x08)
	struct UTigerPartyService* PartyService; // 0x2e8(0x08)
	struct UTigerPlayerDataService* PlayerDataService; // 0x2f0(0x08)
	struct UTigerStoreService* StoreService; // 0x2f8(0x08)
	struct UShMidasAdapter* MidasAdapter; // 0x300(0x08)
	struct UTigerFetchPremiumCurrencyManager* FetchPremiumCurrencyManager; // 0x308(0x08)
	struct TWeakObjectPtr<struct UTigerWidget> SoftwareCursor; // 0x310(0x08)
	struct UTigerPartyManager* PartyManager; // 0x318(0x08)
	struct UTigerAuthenticationManager* AuthenticationManager; // 0x320(0x08)
	struct UTigerTelemetryEventHandler* TelemetryEventHandler; // 0x328(0x08)
	struct ATigerStatisticsGatherer* StatisticsGatherer; // 0x330(0x08)
	struct UTigerPushConnectionManager* PushConnectionManager; // 0x338(0x08)
	char pad_340[0xd8]; // 0x340(0xd8)
	struct UTigerPreloadedClasses* PreloadedClasses; // 0x418(0x08)
	struct TMap<struct UTigerBloodTrackPassiveConfig*, struct FString> BloodTrackPassiveToEncodedId; // 0x420(0x50)
	struct TMap<struct FString, struct UTigerBloodTrackPassiveConfig*> EncodedIdToBloodTrackPassive; // 0x470(0x50)
	enum class ETigerGroupingMode LastSelectedGroupingMode; // 0x4c0(0x01)
	char pad_4C1[0x7]; // 0x4c1(0x07)
	struct UDataTable* BotNameTable; // 0x4c8(0x08)
	char pad_4D0[0x10]; // 0x4d0(0x10)
	struct UTigerDsBackendAgent* DsBackendAgent; // 0x4e0(0x08)
	struct USharkAccounts* AccountSystem; // 0x4e8(0x08)
	struct TArray<struct UTigerAmmoAsset*> AmmoPickupItems; // 0x4f0(0x10)
	struct FTigerSeasonConfig ClientSeasonConfig; // 0x500(0x258)
	char pad_758[0x8]; // 0x758(0x08)

	void WaitForCurrentMatchStats(int32_t TimeoutSecs, struct FDelegate Delegate); // Function Tiger.TigerGameInstance.WaitForCurrentMatchStats // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1296940
	bool TravelToSession(struct FString InSessionURL, enum class ESessionType InSessionType); // Function Tiger.TigerGameInstance.TravelToSession // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1296840
	void TransferToPartyElysium(); // Function Tiger.TigerGameInstance.TransferToPartyElysium // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void ToggleTutorialMenu(); // Function Tiger.TigerGameInstance.ToggleTutorialMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void ToggleMatchMeny(); // Function Tiger.TigerGameInstance.ToggleMatchMeny // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void TigerOnTitleScreenClosed__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.TigerOnTitleScreenClosed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void StartPushConnection(); // Function Tiger.TigerGameInstance.StartPushConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x1296820
	void ShowWinScreen(); // Function Tiger.TigerGameInstance.ShowWinScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void ShowPostMatchScreen(bool bInShouldLeaveParty); // Function Tiger.TigerGameInstance.ShowPostMatchScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	bool ShouldDebugGameFlow(); // Function Tiger.TigerGameInstance.ShouldDebugGameFlow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296800
	void ReturnToElysium(); // Function Tiger.TigerGameInstance.ReturnToElysium // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void ReturnToBootWithError(struct FString InError); // Function Tiger.TigerGameInstance.ReturnToBootWithError // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void ReceivePartyInvitation(struct UTigerPartyInvite* Invite, struct UTigerUser* Host); // Function Tiger.TigerGameInstance.ReceivePartyInvitation // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void ReceiveInvitation(struct FTigerGroupInvitation Invitation, struct ATigerPlayerState* Inviter); // Function Tiger.TigerGameInstance.ReceiveInvitation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void PostLoadMapWithWorld(); // Function Tiger.TigerGameInstance.PostLoadMapWithWorld // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnMatchStatsReceivedMulticastDelegate__DelegateSignature(bool bTimedOut); // DelegateFunction Tiger.TigerGameInstance.OnMatchStatsReceivedMulticastDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnMatchStatsReceivedDelegate__DelegateSignature(bool bTimedOut); // DelegateFunction Tiger.TigerGameInstance.OnMatchStatsReceivedDelegate__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	void OnFindMatchFailed__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.OnFindMatchFailed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void LaunchTutorialNative(); // Function Tiger.TigerGameInstance.LaunchTutorialNative // (Final|Native|Public|BlueprintCallable) // @ game+0x12967e0
	void LaunchTransferFromMatch(); // Function Tiger.TigerGameInstance.LaunchTransferFromMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x12967c0
	void KickToLoginScreen(); // Function Tiger.TigerGameInstance.KickToLoginScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void JoinSessionThroughUrl(struct FString SessionURL); // Function Tiger.TigerGameInstance.JoinSessionThroughUrl // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsJoiningMatch(); // Function Tiger.TigerGameInstance.IsJoiningMatch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296770
	bool IsAllowedToOpenMainMenu(); // Function Tiger.TigerGameInstance.IsAllowedToOpenMainMenu // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool HasCurrentMatchStats(); // Function Tiger.TigerGameInstance.HasCurrentMatchStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296710
	bool HasCompletedBattlepass(int32_t InCurrentSeasonLevel); // Function Tiger.TigerGameInstance.HasCompletedBattlepass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296670
	void HandleOnDisplaySettingsApplied(); // Function Tiger.TigerGameInstance.HandleOnDisplaySettingsApplied // (Final|Native|Private) // @ game+0x1296650
	struct ATigerWeatherController* GetWeatherController(); // Function Tiger.TigerGameInstance.GetWeatherController // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1296620
	struct UTigerVoipTalkerState* GetVoipTalkerState(); // Function Tiger.TigerGameInstance.GetVoipTalkerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12965d0
	struct FLinearColor GetUIColor(enum class ETigerUIColor UIColor, enum class ETigerColourSpace ColorSpace); // Function Tiger.TigerGameInstance.GetUIColor // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	struct UTigerTitleListAsset* GetTitleList(); // Function Tiger.TigerGameInstance.GetTitleList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12965b0
	struct UTigerTelemetryEventHandler* GetTelemetryEventHandler(); // Function Tiger.TigerGameInstance.GetTelemetryEventHandler // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296580
	struct ATigerStatisticsGatherer* GetStatisticsGatherer(); // Function Tiger.TigerGameInstance.GetStatisticsGatherer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296550
	struct UTigerExpRequirements* GetSeasonExpRequirements(); // Function Tiger.TigerGameInstance.GetSeasonExpRequirements // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296500
	struct FDateTime GetSeasonEndDate(); // Function Tiger.TigerGameInstance.GetSeasonEndDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12964c0
	struct TSoftObjectPtr<struct UTexture2D> GetSeasonBannerTexture(); // Function Tiger.TigerGameInstance.GetSeasonBannerTexture // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12963d0
	struct UTigerQuestCollection* GetQuestCollection(); // Function Tiger.TigerGameInstance.GetQuestCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12963b0
	struct UShMidasAdapter* GetPaymentManager(); // Function Tiger.TigerGameInstance.GetPaymentManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296350
	struct UTigerPartyManager* GetPartyManager(); // Function Tiger.TigerGameInstance.GetPartyManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296320
	struct FTigerMatchStats GetLastMatchStats(); // Function Tiger.TigerGameInstance.GetLastMatchStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296240
	struct FTigerCharacterAppearance GetDefaultCharacterAppearanceForArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetDefaultCharacterAppearanceForArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296100
	enum class ESessionType GetCurrentSessionType(); // Function Tiger.TigerGameInstance.GetCurrentSessionType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12960d0
	enum class ETigerClan GetClanTypeFromArchetypeType(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetClanTypeFromArchetypeType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1296040
	struct UTigerPlayerClanData* GetClanDataFromArchetypeType(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetClanDataFromArchetypeType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295fb0
	struct UTigerPlayerClanData* GetClanData(enum class ETigerClan Clan); // Function Tiger.TigerGameInstance.GetClanData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295f20
	struct FDateTime GetBattlepassEndDate(); // Function Tiger.TigerGameInstance.GetBattlepassEndDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295eb0
	struct TArray<struct UTigerPlayerClanData*> GetAvailableClans(); // Function Tiger.TigerGameInstance.GetAvailableClans // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295e30
	struct UTigerAuthenticationManager* GetAuthenticationManager(); // Function Tiger.TigerGameInstance.GetAuthenticationManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295e10
	struct UTigerExpRequirements* GetArchetypeExpRequirements(); // Function Tiger.TigerGameInstance.GetArchetypeExpRequirements // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295df0
	struct UTigerPowerKit* GetArchetypeData(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetArchetypeData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295d60
	void DebugOnWorldCleanup(struct UWorld* World, bool bSessionEnded, bool bCleanupResources); // Function Tiger.TigerGameInstance.DebugOnWorldCleanup // (Final|Native|Protected) // @ game+0x1295ba0
	void DebugOnWorldBeginTearDown(struct UWorld* World); // Function Tiger.TigerGameInstance.DebugOnWorldBeginTearDown // (Final|Native|Protected) // @ game+0x1295b10
	void DebugOnStreamingStarted(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerGameInstance.DebugOnStreamingStarted // (Final|Native|Protected) // @ game+0x1295b10
	void DebugOnPreWorldFinishDestroy(struct UWorld* World); // Function Tiger.TigerGameInstance.DebugOnPreWorldFinishDestroy // (Final|Native|Protected) // @ game+0x1295b10
	void DebugOnPreSpawnStreamingFinished(); // Function Tiger.TigerGameInstance.DebugOnPreSpawnStreamingFinished // (Final|Native|Protected) // @ game+0xb45020
	void DebugOnPostWorldCreation(struct UWorld* World); // Function Tiger.TigerGameInstance.DebugOnPostWorldCreation // (Final|Native|Protected) // @ game+0x1295b10
	void DebugOnPostWorldCleanUp(struct UWorld* World, bool bSessionEnded, bool bCleanupResources); // Function Tiger.TigerGameInstance.DebugOnPostWorldCleanUp // (Final|Native|Protected) // @ game+0x1295ba0
	void DebugOnMapPreLoad(struct FString InNameOfMapToLoad); // Function Tiger.TigerGameInstance.DebugOnMapPreLoad // (Final|Native|Protected) // @ game+0x1263e90
	void DebugOnMapPostLoad(struct UWorld* InNewWorld); // Function Tiger.TigerGameInstance.DebugOnMapPostLoad // (Final|Native|Protected) // @ game+0x1295b10
	void DebugOnInitialStreamingFinished(); // Function Tiger.TigerGameInstance.DebugOnInitialStreamingFinished // (Final|Native|Protected) // @ game+0xb45020
	void DebugOnGameStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerGameInstance.DebugOnGameStateChanged // (Final|Native|Protected) // @ game+0x1295a40
	void DebugOnCharacterStartedLoading(); // Function Tiger.TigerGameInstance.DebugOnCharacterStartedLoading // (Final|Native|Protected) // @ game+0xb45020
	void DebugOnCharacterFinishedLoading(); // Function Tiger.TigerGameInstance.DebugOnCharacterFinishedLoading // (Final|Native|Protected) // @ game+0xb45020
	void CreateLoadingScreenWidget(float InFadeInTime, struct UTigerLoadingScreenAsset* InLoadingScreenAsset, struct UTigerLoadingScreenUI* InWidgetClass); // Function Tiger.TigerGameInstance.CreateLoadingScreenWidget // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void CreateLoadingScreenForGameMode(SoftClassProperty InGameModePath, float InFadeInTime); // Function Tiger.TigerGameInstance.CreateLoadingScreenForGameMode // (Final|Native|Public|BlueprintCallable) // @ game+0x12958f0
	void CloseWinScreen(); // Function Tiger.TigerGameInstance.CloseWinScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void CloseMatchMenu(); // Function Tiger.TigerGameInstance.CloseMatchMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void CheckOnlyBotsAliveEndsMatch(); // Function Tiger.TigerGameInstance.CheckOnlyBotsAliveEndsMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x1295870
	void CheckForBotsAsClients(); // Function Tiger.TigerGameInstance.CheckForBotsAsClients // (Final|Native|Public|BlueprintCallable) // @ game+0x1295850
	void CheckBotsIgnorePlayer(); // Function Tiger.TigerGameInstance.CheckBotsIgnorePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1295830
	void Cheat_QuitTutorial(); // Function Tiger.TigerGameInstance.Cheat_QuitTutorial // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void CharacterCustomizationLoadingStarted__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.CharacterCustomizationLoadingStarted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void CharacterCustomizationLoadingFinished__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.CharacterCustomizationLoadingFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void CallOnTitleScreenClosed(); // Function Tiger.TigerGameInstance.CallOnTitleScreenClosed // (Final|Native|Public|BlueprintCallable) // @ game+0x1295810
};

// Class Tiger.TigerGameSettings
// Size: 0x1f8 (Inherited: 0x38)
struct UTigerGameSettings : USharkLocalDeveloperSettings {
	struct FSoftObjectPath QuestCollection; // 0x38(0x18)
	bool bEnableNpcSpawning; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float NpcLocationCorrectionInterval; // 0x54(0x04)
	float ItemClusterSize; // 0x58(0x04)
	float ItemClusterExtraReplicationRange; // 0x5c(0x04)
	int32_t BuildingSystemVersion; // 0x60(0x04)
	int32_t RoofSystemVersion; // 0x64(0x04)
	int32_t RoofSystemFreeTransformableVersion; // 0x68(0x04)
	struct FVector SideVolumeExtents; // 0x6c(0x0c)
	float BelowSideMargin; // 0x78(0x04)
	float BelowDepthMargin; // 0x7c(0x04)
	float BelowVolumeHeight; // 0x80(0x04)
	float ShallowBalconyDepth; // 0x84(0x04)
	bool bEnableApartments; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
	struct ATigerBuildingWallPreviewer* BuildingWallPreviewerClass; // 0x90(0x08)
	bool bEnableStatisticsGathering; // 0x98(0x01)
	bool bEnableLandingPage; // 0x99(0x01)
	bool bEnableIntro; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
	struct FSoftObjectPath TutorialLevel; // 0xa0(0x18)
	struct FSoftObjectPath TransferFromMatchLevel; // 0xb8(0x18)
	SoftClassProperty CustomizationOptions; // 0xd0(0x28)
	SoftClassProperty ItemsDatabase; // 0xf8(0x28)
	SoftClassProperty GrimoireTree; // 0x120(0x28)
	struct TSoftObjectPtr<struct UTigerGrimoireEntry> TrainingVideoGrimoireEntry; // 0x148(0x28)
	SoftClassProperty ChallengeDatabase; // 0x170(0x28)
	int32_t MaxPlayerNameLength; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct FString PromotionalPopupConfigUrl; // 0x1a0(0x10)
	struct TSoftObjectPtr<struct UMaterial> AssetStatusDoNotUseMaterial; // 0x1b0(0x28)
	bool bLogNetworkMovementFlagsOnServer; // 0x1d8(0x01)
	char pad_1D9[0x3]; // 0x1d9(0x03)
	struct FRotator SavedPlayerRotation; // 0x1dc(0x0c)
	struct FVector SavedPlayerLocation; // 0x1e8(0x0c)
	char pad_1F4[0x4]; // 0x1f4(0x04)

	struct UTigerChallengeTypeDatabase* GetChallengeDatabaseMutable(); // Function Tiger.TigerGameSettings.GetChallengeDatabaseMutable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295ef0
};

// Class Tiger.TigerLocalAIControllerBase
// Size: 0x478 (Inherited: 0x330)
struct ATigerLocalAIControllerBase : AAIController {
	struct UBehaviorTree* BehaviorTree; // 0x330(0x08)
	struct UTigerInteractionControllerComponent* InteractionControllerComponent; // 0x338(0x08)
	float LowShieldThreshold; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct ATigerPlayerController* LocalPlayerController; // 0x348(0x08)
	float SightRange; // 0x350(0x04)
	float LoseSightModifier; // 0x354(0x04)
	float VisionAngleDegrees; // 0x358(0x04)
	float AimOffsetAmount; // 0x35c(0x04)
	float AimAccuracy; // 0x360(0x04)
	float MinimumAcceptableDamageMultiplier; // 0x364(0x04)
	struct ATigerPlayerCameraManager* TigerPlayerCameraManager; // 0x368(0x08)
	struct UBehaviorTreeComponent* BehaviorComp; // 0x370(0x08)
	struct UAIPerceptionComponent* AIPerceptionComp; // 0x378(0x08)
	struct UBlackboardComponent* BlackboardComp; // 0x380(0x08)
	struct UMovementComponent* playerMovComp; // 0x388(0x08)
	struct UPathFollowingComponent* PathFollowingComp; // 0x390(0x08)
	struct APawn* LocalPawn; // 0x398(0x08)
	struct ATigerPlayer* PlayerPawn; // 0x3a0(0x08)
	char pad_3A8[0x28]; // 0x3a8(0x28)
	struct TMap<struct AActor*, float> TemporaryIgnoredTargets; // 0x3d0(0x50)
	char pad_420[0x10]; // 0x420(0x10)
	struct ATigerCharacter* FocusCharacter; // 0x430(0x08)
	char pad_438[0x24]; // 0x438(0x24)
	float LowHealthThreshold; // 0x45c(0x04)
	char pad_460[0x18]; // 0x460(0x18)

	void SetTargetPosition(struct FVector InNewPosition, enum class ETigerAIPlayerTargetType TargetType); // Function Tiger.TigerLocalAIControllerBase.SetTargetPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12c3d00
	void SetLureTarget(struct UObject* InNewLureTarget, enum class ETigerAIPlayerTargetType TargetType); // Function Tiger.TigerLocalAIControllerBase.SetLureTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x12c3a80
	void LocalUnPossess(); // Function Tiger.TigerLocalAIControllerBase.LocalUnPossess // (Native|Public|BlueprintCallable) // @ game+0x12c3700
	void LocalPossess(struct APawn* InPawn); // Function Tiger.TigerLocalAIControllerBase.LocalPossess // (Native|Public|BlueprintCallable) // @ game+0x12c3670
	struct ATigerPlayerController* GetPlayerController(); // Function Tiger.TigerLocalAIControllerBase.GetPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x12c3460
};

// Class Tiger.TigerGameplayPerfBenchmarkController
// Size: 0x478 (Inherited: 0x478)
struct ATigerGameplayPerfBenchmarkController : ATigerLocalAIControllerBase {

	void StartBehaviorTree(struct UBehaviorTree* InBehaviorTree); // Function Tiger.TigerGameplayPerfBenchmarkController.StartBehaviorTree // (Final|Native|Public|BlueprintCallable) // @ game+0x129bbf0
};

// Class Tiger.TigerGameplayStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerGameplayStatics : UGameplayStatics {
};

// Class Tiger.TigerGameSingleton
// Size: 0x78 (Inherited: 0x28)
struct UTigerGameSingleton : UObject {
	struct TMap<struct UAnimSequence*, struct UAnimMontage*> GeneratedMontages; // 0x28(0x50)
};

// Class Tiger.TigerGameViewportClient
// Size: 0x380 (Inherited: 0x360)
struct UTigerGameViewportClient : UGameViewportClient {
	char pad_360[0x20]; // 0x360(0x20)
};

// Class Tiger.TigerGasOverlay
// Size: 0x340 (Inherited: 0x108)
struct UTigerGasOverlay : UWidget {
	struct FSlateBrush WaveTextureBrush; // 0x108(0x88)
	struct FSlateBrush TargetTextureBrush; // 0x190(0x88)
	struct FSlateBrush WavePolyTextureBrush; // 0x218(0x88)
	struct FSlateBrush TargetPolyTextureBrush; // 0x2a0(0x88)
	struct ATigerPlayerController* PlayerController; // 0x328(0x08)
	char pad_330[0x10]; // 0x330(0x10)

	void UpdateGeomtery(); // Function Tiger.TigerGasOverlay.UpdateGeomtery // (Final|Native|Public|BlueprintCallable) // @ game+0x129bd60
};

// Class Tiger.TigerGeneralUserSettings
// Size: 0x2f8 (Inherited: 0x28)
struct UTigerGeneralUserSettings : UObject {
	struct UAkAudioEvent* EnableAtmosMixEvent; // 0x28(0x08)
	struct UAkAudioEvent* EnableHeadphonesEvent; // 0x30(0x08)
	struct FMulticastInlineDelegate OnQualityOptionChanged; // 0x38(0x10)
	struct FMulticastInlineDelegate OnDisplaySettingsApplied; // 0x48(0x10)
	struct FMulticastInlineDelegate OnGraphicsSettingsApplied; // 0x58(0x10)
	char pad_68[0x8]; // 0x68(0x08)
	struct FTigerAudioSettings UserAudioSettings; // 0x70(0x24)
	struct FTigerAudioSettings DefaultAudioSettings; // 0x94(0x24)
	struct FTigerLanguageSettings UserLanguageSettings; // 0xb8(0x28)
	struct FTigerLanguageSettings DefaultLanguageSettings; // 0xe0(0x28)
	struct FTigerGameplaySettings UserGameplaySettings; // 0x108(0x08)
	struct FTigerGameplaySettings DefaultGameplaySettings; // 0x110(0x08)
	struct TArray<struct FString> AvailableAudioLanguages; // 0x118(0x10)
	struct TMap<struct FString, struct FString> LanguageDisplayName; // 0x128(0x50)
	char pad_178[0x10]; // 0x178(0x10)
	struct FTigerDisplaySettings TempDisplaySettings; // 0x188(0x28)
	struct FTigerDisplaySettings UserDisplaySettings; // 0x1b0(0x28)
	struct FTigerDisplaySettings DefaultDisplaySettings; // 0x1d8(0x28)
	struct FTigerGraphicsSettings TempGraphicsSettings; // 0x200(0x4c)
	struct FTigerGraphicsSettings UserGraphicsSettings; // 0x24c(0x4c)
	struct FTigerGraphicsSettings DefaultGraphicsSettings; // 0x298(0x4c)
	char pad_2E4[0x14]; // 0x2e4(0x14)

	bool WillNeedRestart(); // Function Tiger.TigerGeneralUserSettings.WillNeedRestart // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129bd80
	void ToggleSwapOutDefaultWeapon(); // Function Tiger.TigerGeneralUserSettings.ToggleSwapOutDefaultWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x129bca0
	void ToggleMuteGeneralChat(); // Function Tiger.TigerGeneralUserSettings.ToggleMuteGeneralChat // (Final|Native|Public|BlueprintCallable) // @ game+0x129bc80
	bool ShouldPromptRevertTimer(); // Function Tiger.TigerGeneralUserSettings.ShouldPromptRevertTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129bba0
	void SetWindowMode(int32_t InWindowMode); // Function Tiger.TigerGeneralUserSettings.SetWindowMode // (Final|Native|Public|BlueprintCallable) // @ game+0x129bb10
	void SetVolumetricFogQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetVolumetricFogQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129ba80
	void SetVoiceChatVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetVoiceChatVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x129ba00
	void SetVisualEffectQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetVisualEffectQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129b970
	void SetViewDistanceQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetViewDistanceQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129b8e0
	void SetVideoVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetVideoVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x129b860
	void SetUseSubtitles(bool bInUsed); // Function Tiger.TigerGeneralUserSettings.SetUseSubtitles // (Final|Native|Public|BlueprintCallable) // @ game+0x129b7d0
	void SetUsePushToTalk(bool bInUse); // Function Tiger.TigerGeneralUserSettings.SetUsePushToTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x129b740
	void SetUseLightShafts(bool bInUseLightShaft); // Function Tiger.TigerGeneralUserSettings.SetUseLightShafts // (Final|Native|Public|BlueprintCallable) // @ game+0x129b6b0
	void SetUseFilmGrain(bool bInIsEnabled); // Function Tiger.TigerGeneralUserSettings.SetUseFilmGrain // (Final|Native|Public|BlueprintCallable) // @ game+0x129b620
	void SetUseDX12(bool bInUseDX12); // Function Tiger.TigerGeneralUserSettings.SetUseDX12 // (Final|Native|Public|BlueprintCallable) // @ game+0x129b590
	void SetUseChromaticAberration(bool bInIsEnabled); // Function Tiger.TigerGeneralUserSettings.SetUseChromaticAberration // (Final|Native|Public|BlueprintCallable) // @ game+0x129b500
	void SetTextureQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetTextureQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129b470
	void SetTextureFilteringQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetTextureFilteringQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129b3e0
	void SetTextLanguage(struct FString InLanguage); // Function Tiger.TigerGeneralUserSettings.SetTextLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x129b340
	void SetSubSurfaceScatteringQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetSubSurfaceScatteringQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129b2b0
	void SetShadowQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetShadowQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129b220
	void SetSfxVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetSfxVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x129b1a0
	void SetScreenSpaceReflectionQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetScreenSpaceReflectionQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129b110
	void SetResolutionScale(float InScale); // Function Tiger.TigerGeneralUserSettings.SetResolutionScale // (Final|Native|Public|BlueprintCallable) // @ game+0x129b090
	void SetResolution(struct FIntPoint InResolution); // Function Tiger.TigerGeneralUserSettings.SetResolution // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x129b000
	void SetQualityPreset(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetQualityPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x129af70
	void SetMusicVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetMusicVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x129ae60
	void SetMotionBlurQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetMotionBlurQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129add0
	void SetMicVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetMicVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x129ad50
	void SetMaterialQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetMaterialQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129acc0
	void SetMasterVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetMasterVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x129ac40
	void SetLightingQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetLightingQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129abb0
	void SetLensFlareQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetLensFlareQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129ab20
	void SetGamma(float InGamma); // Function Tiger.TigerGeneralUserSettings.SetGamma // (Final|Native|Public|BlueprintCallable) // @ game+0x129aaa0
	void SetFsrSharpening(float InSharpeningAmount); // Function Tiger.TigerGeneralUserSettings.SetFsrSharpening // (Final|Native|Public|BlueprintCallable) // @ game+0x129aa20
	void SetFsrQualityLevel(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetFsrQualityLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x129a990
	void SetFrameRateLimit(float InFrameRateLimit); // Function Tiger.TigerGeneralUserSettings.SetFrameRateLimit // (Final|Native|Public|BlueprintCallable) // @ game+0x129a910
	void SetFoliageQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetFoliageQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129a880
	void SetEnableVSync(bool bInEnableVSync); // Function Tiger.TigerGeneralUserSettings.SetEnableVSync // (Final|Native|Public|BlueprintCallable) // @ game+0x129a760
	void SetEnableVoiceChat(bool bInEnabled); // Function Tiger.TigerGeneralUserSettings.SetEnableVoiceChat // (Final|Native|Public|BlueprintCallable) // @ game+0x129a7f0
	void SetEnableFrameRateSmoothing(bool bInIsEnabled); // Function Tiger.TigerGeneralUserSettings.SetEnableFrameRateSmoothing // (Final|Native|Public|BlueprintCallable) // @ game+0x129a6d0
	void SetEnableDolbyAtmos(bool bInShouldEnableDolbyAtmos); // Function Tiger.TigerGeneralUserSettings.SetEnableDolbyAtmos // (Final|Native|Public|BlueprintCallable) // @ game+0x129a640
	void SetDialogueVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetDialogueVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x129a5c0
	void SetBloomQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetBloomQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129a530
	void SetAudioLanguage(struct FString InLanguage); // Function Tiger.TigerGeneralUserSettings.SetAudioLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x129a490
	void SetAntiAliasingQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetAntiAliasingQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129a400
	void SetAmbientOcclusionQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetAmbientOcclusionQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x129a370
	void SetAllowBackgroundAudio(bool bInShouldAllowBackgroundAudio); // Function Tiger.TigerGeneralUserSettings.SetAllowBackgroundAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x129a2e0
	void SaveGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.SaveGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x129a0a0
	void SaveDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.SaveDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x129a080
	void ResetLanguageSettings(); // Function Tiger.TigerGeneralUserSettings.ResetLanguageSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x129a060
	void ResetGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.ResetGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x129a040
	void ResetGameplaySettings(); // Function Tiger.TigerGeneralUserSettings.ResetGameplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x129a020
	void ResetDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.ResetDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x129a000
	void ResetAudioSettings(); // Function Tiger.TigerGeneralUserSettings.ResetAudioSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1299fe0
	void ReapplyUserGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.ReapplyUserGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1299fc0
	void ReapplyUserDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.ReapplyUserDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1299fa0
	bool HasGraphicsChanges(); // Function Tiger.TigerGeneralUserSettings.HasGraphicsChanges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1299e80
	bool HasDisplayChanges(); // Function Tiger.TigerGeneralUserSettings.HasDisplayChanges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1299e50
	enum class EWindowMode GetTempWindowMode(); // Function Tiger.TigerGeneralUserSettings.GetTempWindowMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1299e20
	int32_t GetCurrentFrameRateLimitOption(); // Function Tiger.TigerGeneralUserSettings.GetCurrentFrameRateLimitOption // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1299d60
	int32_t FindCurrentQualityPreset(); // Function Tiger.TigerGeneralUserSettings.FindCurrentQualityPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1299d10
	bool DoesSupportDX12(); // Function Tiger.TigerGeneralUserSettings.DoesSupportDX12 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1289080
	void DiscardResolutionChanges(); // Function Tiger.TigerGeneralUserSettings.DiscardResolutionChanges // (Final|Native|Public|BlueprintCallable) // @ game+0x1299cf0
	void DiscardGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.DiscardGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1299cd0
	void DiscardDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.DiscardDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1299cb0
	void ApplyGraphicsSettings(bool bInShouldSaveSettings); // Function Tiger.TigerGeneralUserSettings.ApplyGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1299b90
	void ApplyDisplaySettings(bool bInShouldSaveSettings); // Function Tiger.TigerGeneralUserSettings.ApplyDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1299b00
};

// Class Tiger.TigerGhostCameraBehavior
// Size: 0x128 (Inherited: 0x128)
struct UTigerGhostCameraBehavior : UTigerActiveCameraBehavior {
};

// Class Tiger.GrimoireCardMaterialPreset
// Size: 0x90 (Inherited: 0x30)
struct UGrimoireCardMaterialPreset : UDataAsset {
	float Roughness; // 0x30(0x04)
	float Damage; // 0x34(0x04)
	float ExtraDamage; // 0x38(0x04)
	float ExtraDamageOnEdges; // 0x3c(0x04)
	struct FVector ExtraDamageMoveScale; // 0x40(0x0c)
	struct FVector BorderRoughnessSpecularity; // 0x4c(0x0c)
	float BorderAmount; // 0x58(0x04)
	struct FColor BorderColor; // 0x5c(0x04)
	float BorderRaisedAmount; // 0x60(0x04)
	struct FVector BorderRoughnessSpecularityMetalic; // 0x64(0x0c)
	struct FVector DirtMaps; // 0x70(0x0c)
	struct FColor DirtColor; // 0x7c(0x04)
	struct FVector DirtMoveXYScale; // 0x80(0x0c)
	float DirtHardness; // 0x8c(0x04)
};

// Class Tiger.TigerGrimoireCard
// Size: 0x248 (Inherited: 0x228)
struct ATigerGrimoireCard : AActor {
	struct UStaticMeshComponent* Mesh; // 0x228(0x08)
	struct UTexture* FrontTexture; // 0x230(0x08)
	struct UTexture* BackfaceTextureDMNR; // 0x238(0x08)
	bool bIsFloating; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)

	void RestartFloatingAnimation(); // Function Tiger.TigerGrimoireCard.RestartFloatingAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void PlayFloatingAnimation(); // Function Tiger.TigerGrimoireCard.PlayFloatingAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	int32_t GenerateSeed(struct UTigerGrimoireEntry* InEntry); // Function Tiger.TigerGrimoireCard.GenerateSeed // (Final|Native|Public|BlueprintCallable) // @ game+0x129f840
};

// Class Tiger.TigerGrimoireLandingUi
// Size: 0x2c8 (Inherited: 0x280)
struct UTigerGrimoireLandingUi : UTigerWidget {
	char pad_280[0x10]; // 0x280(0x10)
	struct TArray<struct UTigerGrimoireEntry*> CachedUnlockedEntries; // 0x290(0x10)
	struct TArray<struct UTigerGrimoireEntry*> CachedReadEntries; // 0x2a0(0x10)
	struct FTigerSuggestedArticlesData CachedSuggestedArticlesData; // 0x2b0(0x18)

	void RemoveSuggestedEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireLandingUi.RemoveSuggestedEntry // (Final|Native|Public|BlueprintCallable) // @ game+0x12a0880
	struct UTigerGrimoireEntry* GetRandomEntry(); // Function Tiger.TigerGrimoireLandingUi.GetRandomEntry // (Final|Native|Public|BlueprintCallable) // @ game+0x129ff40
	void GetArticleEntries(struct UTigerGrimoireEntry* OutFeaturedEntry, struct TArray<struct UTigerGrimoireEntry*> OutSuggestedEntries, struct TArray<struct UTigerGrimoireEntry*> OutNewEntries); // Function Tiger.TigerGrimoireLandingUi.GetArticleEntries // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x129f9c0
};

// Class Tiger.TigerGrimoireRichBlockDecorator
// Size: 0x810 (Inherited: 0x28)
struct UTigerGrimoireRichBlockDecorator : URichTextBlockDecorator {
	struct FSlateBrush SummaryBackground; // 0x28(0x88)
	struct UTigerGrimoireUi* GrimoireUI; // 0xb0(0x08)
	struct FButtonStyle ButtonStyle; // 0xb8(0x278)
	struct FTextBlockStyle UnlockedEntryTextStyle; // 0x330(0x270)
	struct FTextBlockStyle LockedEntryTextStyle; // 0x5a0(0x270)
};

// Class Tiger.TigerGrimoireDialogueWrapper
// Size: 0x40 (Inherited: 0x28)
struct UTigerGrimoireDialogueWrapper : UObject {
	struct UTigerNpcDialogueList* DialogueList; // 0x28(0x08)
	struct FString DialogueKey; // 0x30(0x10)

	struct FText GetDialogueText(); // Function Tiger.TigerGrimoireDialogueWrapper.GetDialogueText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129fbd0
};

// Class Tiger.TigerGrimoireEntry
// Size: 0x1b8 (Inherited: 0x30)
struct UTigerGrimoireEntry : UDataAsset {
	struct FText Name; // 0x30(0x18)
	struct FText GameplayText; // 0x48(0x18)
	struct FText Heading; // 0x60(0x18)
	struct FText Description; // 0x78(0x18)
	struct UTigerGrimoireDialogueWrapper* Dialogue; // 0x90(0x08)
	struct FText Summary; // 0x98(0x18)
	struct FText UnlockSummary; // 0xb0(0x18)
	enum class ETigerGrimoireEntryMediaDisplayMode MediaDisplayMode; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct TSoftObjectPtr<struct UTexture2D> Image; // 0xd0(0x28)
	struct TSoftObjectPtr<struct UTexture2D> BackgroundImage; // 0xf8(0x28)
	struct TSoftObjectPtr<struct UStaticMesh> Mesh; // 0x120(0x28)
	struct UFileMediaSource* Video; // 0x148(0x08)
	enum class ETigerGrimoireEntryState DefaultState; // 0x150(0x01)
	enum class ETigerGrimoireContinuationMethod TextContinuationMethod; // 0x151(0x01)
	char pad_152[0x6]; // 0x152(0x06)
	struct UGrimoireCardMaterialPreset* GrimoireCardPreset; // 0x158(0x08)
	struct FDataTableRowHandle CardQualityRow; // 0x160(0x10)
	struct FDataTableRowHandle CardBorderRow; // 0x170(0x10)
	struct UTexture* FrontCardTexture; // 0x180(0x08)
	float DefaultOrderValue; // 0x188(0x04)
	float MeshScaleMultiplier; // 0x18c(0x04)
	char pad_190[0x8]; // 0x190(0x08)
	struct FString EntryIdAsString; // 0x198(0x10)
	bool bHideEntry; // 0x1a8(0x01)
	char pad_1A9[0x7]; // 0x1a9(0x07)
	struct UTigerGrimoireEntry* ParentEntry; // 0x1b0(0x08)
};

// Class Tiger.TigerGrimoireCategory
// Size: 0xa8 (Inherited: 0x30)
struct UTigerGrimoireCategory : UDataAsset {
	struct FText Title; // 0x30(0x18)
	struct FText Description; // 0x48(0x18)
	struct UDataTable* Entries; // 0x60(0x08)
	struct TArray<struct UTigerGrimoireCategory*> SubCategories; // 0x68(0x10)
	struct UTigerGrimoireCategory* ParentCategory; // 0x78(0x08)
	bool bHideCategory; // 0x80(0x01)
	enum class ETigerNewNotificationMenuOptions NewNotificationCategory; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
	struct UTexture* BackfaceTextureDMNR; // 0x88(0x08)
	float DefaultOrderValue; // 0x90(0x04)
	char pad_94[0x14]; // 0x94(0x14)

	struct TArray<struct UTigerGrimoireEntry*> GetAllEntries(bool bInIncludeSubEntries); // Function Tiger.TigerGrimoireCategory.GetAllEntries // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129f8e0
};

// Class Tiger.TigerGrimoireTree
// Size: 0x120 (Inherited: 0x28)
struct UTigerGrimoireTree : UObject {
	struct TArray<struct UTigerGrimoireCategory*> Categories; // 0x28(0x10)
	char pad_38[0xe8]; // 0x38(0xe8)

	void SearchTreeByName(struct FString InSearch, struct FDelegate InOnCompleteDelegate); // Function Tiger.TigerGrimoireTree.SearchTreeByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12a0970
	void PopulateSearchMap(); // Function Tiger.TigerGrimoireTree.PopulateSearchMap // (Final|Native|Public|BlueprintCallable) // @ game+0x12a0840
	void GetSubEntriesForEntryId(struct FString InEntryId, bool OutIsPartial, struct TArray<struct UTigerGrimoireEntry*> OutSubEntries); // Function Tiger.TigerGrimoireTree.GetSubEntriesForEntryId // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a00b0
	void GetSubEntriesForEntry(struct UTigerGrimoireEntry* InEntry, bool OutIsPartial, struct TArray<struct UTigerGrimoireEntry*> OutSubEntries); // Function Tiger.TigerGrimoireTree.GetSubEntriesForEntry // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x129ff70
	struct UTigerGrimoireEntry* GetEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireTree.GetEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129fc70
	struct UTigerGrimoireCategory* GetCategoryForEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireTree.GetCategoryForEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129fb20
};

// Class Tiger.TigerGrimoireUi
// Size: 0x408 (Inherited: 0x3b0)
struct UTigerGrimoireUi : UTigerSceneBackgroundUI {
	bool bNotificationIdsSetup; // 0x3b0(0x01)
	char pad_3B1[0x7]; // 0x3b1(0x07)
	struct ATigerModelViewerItem* GrimoireItem; // 0x3b8(0x08)
	struct ATigerGrimoireCard* GrimoireCard; // 0x3c0(0x08)
	struct AActor* ModelCam; // 0x3c8(0x08)
	struct AActor* CloseModelCam; // 0x3d0(0x08)
	struct FName ItemRotationNodeTag; // 0x3d8(0x08)
	struct FName CloseViewerCamName; // 0x3e0(0x08)
	struct FName ViewerCamName; // 0x3e8(0x08)
	struct FName ExaminablePropsLevelName; // 0x3f0(0x08)
	struct AActor* ItemRotationNode; // 0x3f8(0x08)
	struct FName LightingSubLevelName; // 0x400(0x08)

	void TigerDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerGrimoireUi.TigerDelegate__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	void SortEntries(struct TArray<struct UTigerGrimoireEntry*> InGrimoireEntries, enum class ETigerGrimoireSortType InSortType, struct TArray<struct UTigerGrimoireEntry*> OutSortedEntries); // Function Tiger.TigerGrimoireUi.SortEntries // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12a0c70
	void SortCategories(struct TArray<struct UTigerGrimoireCategory*> InGrimoireCategories, struct UTigerPersistentPlayerState* InPersistentPlayerState, enum class ETigerGrimoireSortType InSortType, struct TArray<struct UTigerGrimoireCategory*> OutSortedCategories); // Function Tiger.TigerGrimoireUi.SortCategories // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12a0ae0
	void SetupNotificationEntryIds(); // Function Tiger.TigerGrimoireUi.SetupNotificationEntryIds // (Final|Native|Public|BlueprintCallable) // @ game+0x12a0ac0
	void RefreshLanguageOnGrimoireProps(); // Function Tiger.TigerGrimoireUi.RefreshLanguageOnGrimoireProps // (Final|Native|Public|BlueprintCallable) // @ game+0x12a0860
	void LoadMediaForGrimoireEntriesAsync(struct TArray<struct UTigerGrimoireEntry*> InGrimoireEntries, struct FDelegate OnLoadedDelegate); // Function Tiger.TigerGrimoireUi.LoadMediaForGrimoireEntriesAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12a0590
	void JumpToSubCategory(struct UTigerGrimoireCategory* InSubCategory); // Function Tiger.TigerGrimoireUi.JumpToSubCategory // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void JumpToEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireUi.JumpToEntry // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void JumpToCategory(struct UTigerGrimoireCategory* InCategory); // Function Tiger.TigerGrimoireUi.JumpToCategory // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	bool IsGrimoireEntryMediaLoaded(struct UTigerGrimoireEntry* InEntry); // Function Tiger.TigerGrimoireUi.IsGrimoireEntryMediaLoaded // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a0330
	struct AActor* GetFirstActorWithTag(struct ULevel* InLoadedLevel, struct FName InTag); // Function Tiger.TigerGrimoireUi.GetFirstActorWithTag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x129fd20
	void FindGrimoireDisplayItems(); // Function Tiger.TigerGrimoireUi.FindGrimoireDisplayItems // (Final|Native|Public|BlueprintCallable) // @ game+0x129f820
};

// Class Tiger.TigerGrimoireUnlockPickup
// Size: 0x2a0 (Inherited: 0x280)
struct ATigerGrimoireUnlockPickup : ATigerInteractiveObject {
	struct UStaticMeshComponent* PickupMesh; // 0x280(0x08)
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x288(0x08)
	char pad_290[0x10]; // 0x290(0x10)
};

// Class Tiger.TigerGrimoireUnlockTriggerVolume
// Size: 0x288 (Inherited: 0x260)
struct ATigerGrimoireUnlockTriggerVolume : ATriggerVolume {
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x260(0x08)
	char pad_268[0x20]; // 0x268(0x20)

	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerGrimoireUnlockTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x12a06a0
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerGrimoireUnlockTriggerVolume.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x12a0210
};

// Class Tiger.TigerGroupCoordinator
// Size: 0x130 (Inherited: 0xb0)
struct UTigerGroupCoordinator : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct TArray<struct UTigerPlayerGroup*> Groups; // 0xb8(0x10)
	char pad_C8[0x68]; // 0xc8(0x68)

	struct UTigerPlayerGroup* GetGroupFromPlayerController(struct ATigerPlayerController* TigerPlayerController); // Function Tiger.TigerGroupCoordinator.GetGroupFromPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x129fe00
};

// Class Tiger.TigerMapMarkerProxy
// Size: 0x68 (Inherited: 0x28)
struct UTigerMapMarkerProxy : UObject {
	struct FMulticastInlineDelegate OnUpdated; // 0x28(0x10)
	int32_t MarkerId; // 0x38(0x04)
	char pad_3C[0x1c]; // 0x3c(0x1c)
	struct UUserWidget* WidgetType; // 0x58(0x08)
	char pad_60[0x8]; // 0x60(0x08)

	struct UTigerMapMarkerProxy* Show(); // Function Tiger.TigerMapMarkerProxy.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9db0
	struct UTigerMapMarkerProxy* SetWidgetType(struct UUserWidget* InWidgetType); // Function Tiger.TigerMapMarkerProxy.SetWidgetType // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9c90
	struct UTigerMapMarkerProxy* SetRotation(float NewRotation); // Function Tiger.TigerMapMarkerProxy.SetRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9b80
	struct UTigerMapMarkerProxy* SetLocation(struct FVector WorldLocation); // Function Tiger.TigerMapMarkerProxy.SetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12c99c0
	struct UTigerMapMarkerProxy* SetAlignment(struct FVector2D NewAlignment); // Function Tiger.TigerMapMarkerProxy.SetAlignment // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12c9720
	bool IsVisible(); // Function Tiger.TigerMapMarkerProxy.IsVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9320
	struct UTigerMapMarkerProxy* Hide(); // Function Tiger.TigerMapMarkerProxy.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9260
	struct UUserWidget* GetWidgetType(); // Function Tiger.TigerMapMarkerProxy.GetWidgetType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c91e0
	float GetRotation(); // Function Tiger.TigerMapMarkerProxy.GetRotation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c90f0
	struct FVector GetLocation(); // Function Tiger.TigerMapMarkerProxy.GetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8d40
	struct FVector2D GetAlignment(); // Function Tiger.TigerMapMarkerProxy.GetAlignment // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8ad0
};

// Class Tiger.TigerGroupMemberMarkerProxy
// Size: 0x70 (Inherited: 0x68)
struct UTigerGroupMemberMarkerProxy : UTigerMapMarkerProxy {
	char PlayerIndex; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerGroupSettings
// Size: 0x48 (Inherited: 0x38)
struct UTigerGroupSettings : USharkLocalDeveloperSettings {
	struct FTigerGroupSettingsData GroupSettingsData; // 0x38(0x10)
};

// Class Tiger.TigerGroupStateComponent
// Size: 0x138 (Inherited: 0xb0)
struct UTigerGroupStateComponent : UActorComponent {
	struct FMulticastInlineDelegate OnGroupMembersChanged; // 0xb0(0x10)
	struct TArray<struct TWeakObjectPtr<struct ATigerPlayerState>> OtherGroupMembers; // 0xc0(0x10)
	char pad_D0[0x18]; // 0xd0(0x18)
	struct FMulticastInlineDelegate OnMarkedAsGroupMember; // 0xe8(0x10)
	struct FMulticastInlineDelegate OnRemoveMarkedAsGroupMember; // 0xf8(0x10)
	struct FMulticastInlineDelegate OnPlayerIndexChanged; // 0x108(0x10)
	struct UTigerCompassMarkerComponent* CompassComponent; // 0x118(0x08)
	struct ATigerPlayerController* LocalPlayerController; // 0x120(0x08)
	struct UTigerGroupMemberMarkerProxy* GroupMemberMapMarkerProxy; // 0x128(0x08)
	char GroupMemberId; // 0x130(0x01)
	char pad_131[0x7]; // 0x131(0x07)

	void TeamMembersChanged__DelegateSignature(struct UTigerGroupStateComponent* InGroupStateComponent, struct TArray<struct ATigerPlayerState*> InPreviousGroupMembers); // DelegateFunction Tiger.TigerGroupStateComponent.TeamMembersChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void Server_RefreshGroupMembers(); // Function Tiger.TigerGroupStateComponent.Server_RefreshGroupMembers // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12a0a70
	bool PlayerIsInAGroup(); // Function Tiger.TigerGroupStateComponent.PlayerIsInAGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a0810
	void OnRep_OnGroupMemberIdChanged(char InOldGroupMemberId); // Function Tiger.TigerGroupStateComponent.OnRep_OnGroupMemberIdChanged // (Final|Native|Protected) // @ game+0x12a0790
	void OnRep_OnGroupChanged(); // Function Tiger.TigerGroupStateComponent.OnRep_OnGroupChanged // (Final|Native|Protected) // @ game+0x12a0770
	bool IsGroupMemberWithLocalPlayer(); // Function Tiger.TigerGroupStateComponent.IsGroupMemberWithLocalPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a0560
	bool IsGroupMemberByPersistentPlayerId(struct FTigerPersistentPlayerID InPlayerId); // Function Tiger.TigerGroupStateComponent.IsGroupMemberByPersistentPlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a0460
	bool IsGroupMember(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerGroupStateComponent.IsGroupMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a03c0
	void HandlePlayerStateAdded(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerGroupStateComponent.HandlePlayerStateAdded // (Final|Native|Protected) // @ game+0x12a02a0
	char GetPlayerIndex(); // Function Tiger.TigerGroupStateComponent.GetPlayerIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129ff20
	struct TArray<struct ATigerPlayerState*> GetOtherGroupMembersBP(); // Function Tiger.TigerGroupStateComponent.GetOtherGroupMembersBP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129fea0
	void ExecuteForAllOtherMembers(struct FDelegate InDelegate); // Function Tiger.TigerGroupStateComponent.ExecuteForAllOtherMembers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x129f770
	void ExecuteDelegate__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerGroupStateComponent.ExecuteDelegate__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	int32_t CurrentPresentGroupMemberCount(); // Function Tiger.TigerGroupStateComponent.CurrentPresentGroupMemberCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129f740
	void Client_UpdateGroupMembers(struct TArray<struct TWeakObjectPtr<struct ATigerPlayerState>> InGroupMembers); // Function Tiger.TigerGroupStateComponent.Client_UpdateGroupMembers // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x129f6a0
	void Client_LockArchetypeSelection(struct ATigerPlayerState* InPlayerState, enum class ETigerPowerKitType InArchetype); // Function Tiger.TigerGroupStateComponent.Client_LockArchetypeSelection // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x129f5d0
	bool AnyOtherMemberAlive(); // Function Tiger.TigerGroupStateComponent.AnyOtherMemberAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129f5a0
};

// Class Tiger.TigerGroupUIWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerGroupUIWidget : UTigerWidget {

	void OnGroupMemberReadyStatusChanged(struct ATigerPlayerState* InGroupMember, bool bInIsReadyForMatchmaking); // Function Tiger.TigerGroupUIWidget.OnGroupMemberReadyStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void ClearGroupMembers(); // Function Tiger.TigerGroupUIWidget.ClearGroupMembers // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void AddGroupMemberToCanvas(struct ATigerPlayerState* InGroupMember, bool bInIsReadyForMatchmaking); // Function Tiger.TigerGroupUIWidget.AddGroupMemberToCanvas // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerGuardVolume
// Size: 0x240 (Inherited: 0x228)
struct ATigerGuardVolume : AActor {
	bool bTriggerThreatState; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)
	struct TArray<struct UShapeComponent*> Colliders; // 0x230(0x10)

	void EndOverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerGuardVolume.EndOverlappedActor // (Final|Native|Public) // @ game+0x12a4290
	void BeginOverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerGuardVolume.BeginOverlappedActor // (Final|Native|Public|HasOutParms) // @ game+0x12a4060
};

// Class Tiger.TigerHavenTriggerVolume
// Size: 0x260 (Inherited: 0x260)
struct ATigerHavenTriggerVolume : ATriggerVolume {
};

// Class Tiger.TigerHaven
// Size: 0x270 (Inherited: 0x228)
struct ATigerHaven : AActor {
	struct FString OverrideFinalHavenIdentifier; // 0x228(0x10)
	struct USplineComponent* HolyIncenseOuterSpline; // 0x238(0x08)
	struct USplineComponent* HolyIncenseInnerSpline; // 0x240(0x08)
	bool bUseInnerHolyIncenseSpline; // 0x248(0x01)
	char pad_249[0x27]; // 0x249(0x27)
};

// Class Tiger.TigerHavenCapturePoint
// Size: 0x2d0 (Inherited: 0x228)
struct ATigerHavenCapturePoint : AActor {
	struct FText PointActivatedText; // 0x228(0x18)
	float HavenMarkerHeightOffset; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct ATigerHaven* AssignedHaven; // 0x248(0x08)
	char pad_250[0x7c]; // 0x250(0x7c)
	bool bRevealedEveryone; // 0x2cc(0x01)
	char pad_2CD[0x3]; // 0x2cd(0x03)

	void StatusChanged(enum class ETigerCapturePointStatus Status); // Function Tiger.TigerHavenCapturePoint.StatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnRep_RevealEveryone(); // Function Tiger.TigerHavenCapturePoint.OnRep_RevealEveryone // (Final|Native|Private) // @ game+0x12a5ef0
	void OnPlayerDeath(struct ATigerPlayer* DeadPlayer, struct ATigerPlayer* InstigatorPlayer); // Function Tiger.TigerHavenCapturePoint.OnPlayerDeath // (Final|Native|Private) // @ game+0x12a5e20
	void OnOverlapEnd(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerHavenCapturePoint.OnOverlapEnd // (Final|Native|Private) // @ game+0x12a5c20
	void OnOverlapBegin(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerHavenCapturePoint.OnOverlapBegin // (Final|Native|Private) // @ game+0x12a5b50
	void OnAssaultFinished(); // Function Tiger.TigerHavenCapturePoint.OnAssaultFinished // (Final|Native|Private) // @ game+0x12a5b10
	void Multicast_OnEnableCapturePoint(); // Function Tiger.TigerHavenCapturePoint.Multicast_OnEnableCapturePoint // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0xb8c8c0
	void Multicast_OnCurrentCaptureeChanged(struct ATigerPlayer* Capturee, enum class ETigerCapturePointStatus Status, float AuthCurrentCaptureTime); // Function Tiger.TigerHavenCapturePoint.Multicast_OnCurrentCaptureeChanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12a5530
};

// Class Tiger.TigerHealingBuff
// Size: 0x280 (Inherited: 0x270)
struct UTigerHealingBuff : UTigerBuff {
	float FlatHealPerSecond; // 0x270(0x04)
	float PercentageHealPerSecond; // 0x274(0x04)
	struct UTigerCharacterEffect* HealEffect; // 0x278(0x08)
};

// Class Tiger.TigerHealingBuffInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerHealingBuffInstance : UTigerBuffInstance {
	struct UTigerHealingBuff* BuffConfig; // 0x88(0x08)
};

// Class Tiger.TigerHealthBarUI
// Size: 0x2a8 (Inherited: 0x260)
struct UTigerHealthBarUI : UUserWidget {
	struct FMulticastInlineDelegate OnHealthChanged; // 0x260(0x10)
	struct ATigerCharacter* TigerCharacterOwner; // 0x270(0x08)
	struct UMaterialInstanceDynamic* HealthBarMaterial; // 0x278(0x08)
	float LostHealthDelay; // 0x280(0x04)
	float LostHealthBarSpeed; // 0x284(0x04)
	float HealthAmountPerBar; // 0x288(0x04)
	float WidthBetweenSegments; // 0x28c(0x04)
	float LostHealthPercentage; // 0x290(0x04)
	char pad_294[0x10]; // 0x294(0x10)
	float DefaultHealthAmount; // 0x2a4(0x04)

	void TigerDelegateHealthChanged__DelegateSignature(float InNewHealthPercentage); // DelegateFunction Tiger.TigerHealthBarUI.TigerDelegateHealthChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void SetOwner(struct ATigerCharacter* TigerCharacter); // Function Tiger.TigerHealthBarUI.SetOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x12a6030
	void OnSegmentEmptied(float HorizontalProgress); // Function Tiger.TigerHealthBarUI.OnSegmentEmptied // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnHealthLost(); // Function Tiger.TigerHealthBarUI.OnHealthLost // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	float GetRecentDamageTaken(); // Function Tiger.TigerHealthBarUI.GetRecentDamageTaken // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x12a4880
	float GetNumberOfBars(); // Function Tiger.TigerHealthBarUI.GetNumberOfBars // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x12a4830
	float GetCurrentShield(); // Function Tiger.TigerHealthBarUI.GetCurrentShield // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x12a4630
	float GetCurrentMaxHealth(); // Function Tiger.TigerHealthBarUI.GetCurrentMaxHealth // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x12a4600
	float GetCurrentHealth(); // Function Tiger.TigerHealthBarUI.GetCurrentHealth // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x12a45d0
};

// Class Tiger.TigerHeatmapCollector
// Size: 0x140 (Inherited: 0x28)
struct UTigerHeatmapCollector : UObject {
	char pad_28[0xc0]; // 0x28(0xc0)
	struct TMap<struct ATigerCharacter*, struct FTigerCampingData> CampingData; // 0xe8(0x50)
	struct FTimerHandle CharacterMovementTimerHandle; // 0x138(0x08)

	void RecordCharacterMovement(); // Function Tiger.TigerHeatmapCollector.RecordCharacterMovement // (Final|Native|Private) // @ game+0x12a5f50
};

// Class Tiger.TigerHeightenedSensesActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerHeightenedSensesActor : AActor {
	char pad_228[0x8]; // 0x228(0x08)
};

// Class Tiger.TigerHighTierLootGroup
// Size: 0x38 (Inherited: 0x28)
struct UTigerHighTierLootGroup : UObject {
	struct FLinearColor TextColor; // 0x28(0x10)

	struct FLinearColor GetTextColor(); // Function Tiger.TigerHighTierLootGroup.GetTextColor // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12a48e0
};

// Class Tiger.TigerHighTierLootComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerHighTierLootComponent : UActorComponent {
	SoftClassProperty HighTierLootGroup; // 0xb0(0x28)
};

// Class Tiger.TigerHitVerificationSettings
// Size: 0x58 (Inherited: 0x38)
struct UTigerHitVerificationSettings : UDeveloperSettings {
	bool bEnableVerification; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float MaxEndPointDistance; // 0x3c(0x04)
	float MaxStartingPointDistance; // 0x40(0x04)
	float SkipSimulatePathDistanceSquared; // 0x44(0x04)
	float MaxAngleDeviationFromPredictedPath; // 0x48(0x04)
	int32_t MinPathCountForLOSSubdivideCheck; // 0x4c(0x04)
	int32_t MinPathCountForComplexLOSCheck; // 0x50(0x04)
	int32_t MaxComplexLOSChecks; // 0x54(0x04)
};

// Class Tiger.TigerHolyIncense
// Size: 0x2b8 (Inherited: 0x228)
struct ATigerHolyIncense : AActor {
	struct FMulticastInlineDelegate OnAssaultFinished; // 0x228(0x10)
	struct UTigerScriptedTexture* Texture; // 0x238(0x08)
	struct UTigerGasOverlay* SlateGasOverlay; // 0x240(0x08)
	struct UProceduralMeshComponent* ProceduralMesh; // 0x248(0x08)
	struct UTigerHolyIncenseWaveComponent* WaveComponent; // 0x250(0x08)
	struct USplineComponent* LevelBorder; // 0x258(0x08)
	float WallMinHeight; // 0x260(0x04)
	float WallMaxHeight; // 0x264(0x04)
	char pad_268[0x8]; // 0x268(0x08)
	struct UProceduralMeshComponent* PreviewMesh; // 0x270(0x08)
	struct UMaterialInterface* GasMaterial; // 0x278(0x08)
	struct UMaterialInstanceDynamic* MaterialInstance; // 0x280(0x08)
	struct TArray<struct FVector2D> InitialVertices; // 0x288(0x10)
	struct ATigerHaven* FinalHaven; // 0x298(0x08)
	float NumVerticesPerKilometer; // 0x2a0(0x04)
	enum class ETigerGameType ValidForGameType; // 0x2a4(0x01)
	char pad_2A5[0x3]; // 0x2a5(0x03)
	float InitialArea; // 0x2a8(0x04)
	float InitialCircumference; // 0x2ac(0x04)
	char pad_2B0[0x8]; // 0x2b0(0x08)

	bool UpdateAndRenderSlateGasOverlay(struct UTigerGasOverlay* InGasOverlay); // Function Tiger.TigerHolyIncense.UpdateAndRenderSlateGasOverlay // (Final|Native|Public|BlueprintCallable) // @ game+0x12a60c0
	void SetGasMaterial(struct UMaterialInterface* InMaterial); // Function Tiger.TigerHolyIncense.SetGasMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x12a5fa0
	bool RenderToTexture(); // Function Tiger.TigerHolyIncense.RenderToTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x12a5f70
	void PreviewWallMesh(); // Function Tiger.TigerHolyIncense.PreviewWallMesh // (Final|Native|Private|BlueprintCallable) // @ game+0xb45020
	bool IsLocationInsideHolyIncense(struct FVector2D InLocation, bool bInIncludeScheduledWave); // Function Tiger.TigerHolyIncense.IsLocationInsideHolyIncense // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a52f0
	struct UTigerGasOverlay* InitializeScriptedTexture(struct FSlateBrush InWaveBrush, struct FSlateBrush InTargetBrush, struct FSlateBrush InWavePolyBrush, struct FSlateBrush InTargetPolyBrush); // Function Tiger.TigerHolyIncense.InitializeScriptedTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x12a49b0
	struct UTextureRenderTarget2D* InitializeRenderTexture(); // Function Tiger.TigerHolyIncense.InitializeRenderTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x12a4980
	float GetTimeSecondsUntilCurrentWaveBegins(); // Function Tiger.TigerHolyIncense.GetTimeSecondsUntilCurrentWaveBegins // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a4920
	float GetSecondsUntilCurrentWaveEnds(); // Function Tiger.TigerHolyIncense.GetSecondsUntilCurrentWaveEnds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a48b0
	float GetDistanceToBorder(struct FVector2D Location, bool bIncludeScheduledWave, struct FVector2D OutClosestLocation, struct FVector2D OutClosestNormal); // Function Tiger.TigerHolyIncense.GetDistanceToBorder // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a4690
	float GetCurrentDamageInterval(); // Function Tiger.TigerHolyIncense.GetCurrentDamageInterval // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a45a0
	float GetCurrentDamageAmount(); // Function Tiger.TigerHolyIncense.GetCurrentDamageAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a4570
	bool GetClosestLocationOnNextWaveWall(struct FVector2D Location, struct FVector2D OutClosestLocation, bool bIsOutsidePlayableArea); // Function Tiger.TigerHolyIncense.GetClosestLocationOnNextWaveWall // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a43f0
};

// Class Tiger.TigerHolyIncenseWaveComponent
// Size: 0x1f8 (Inherited: 0xb0)
struct UTigerHolyIncenseWaveComponent : UActorComponent {
	struct FMulticastInlineDelegate OnWaveStartMovement; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnWaveStopped; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnWaveRevealed; // 0xd0(0x10)
	int32_t FallbackSeed; // 0xe0(0x04)
	int32_t FallbackHavenSeed; // 0xe4(0x04)
	bool bTestFallbackSeed; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
	struct TArray<struct UDataTable*> WaveDataTables; // 0xf0(0x10)
	struct UCurveFloat* WaveProgressSmoothingCurve; // 0x100(0x08)
	int32_t NumAvoidancePoints; // 0x108(0x04)
	bool bRetraceInnerAndOuterMapPaths; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	float MapGradientThickness; // 0x110(0x04)
	float TickCollisionAndMapTextureInterval; // 0x114(0x04)
	float CircumferenceKmForMinimumCollisionVertices; // 0x118(0x04)
	float CircumferenceKmForMaximumCollisionVertices; // 0x11c(0x04)
	int32_t MinimumCollisionVertices; // 0x120(0x04)
	int32_t MaximumCollisionVertices; // 0x124(0x04)
	bool bUseInteriorTriangulation; // 0x128(0x01)
	bool bUseFallbackTriangulation; // 0x129(0x01)
	char pad_12A[0x6]; // 0x12a(0x06)
	struct UMaterialParameterCollection* RedGasParameterCollection; // 0x130(0x08)
	int32_t MinimumSimulatedVertices; // 0x138(0x04)
	int32_t MaximumSimulatedVertices; // 0x13c(0x04)
	bool bRedistributeVertices; // 0x140(0x01)
	bool bOutputWaveGeneration; // 0x141(0x01)
	char pad_142[0x2]; // 0x142(0x02)
	int32_t RepeatWaveGeneration; // 0x144(0x04)
	struct TArray<struct FTigerWaveData> Waves; // 0x148(0x10)
	struct FTigerHolyIncenseSettings Settings; // 0x158(0x01)
	char pad_159[0x7]; // 0x159(0x07)
	struct TArray<struct FTigerRevealedWave> RevealedWaves; // 0x160(0x10)
	struct UMaterialInstanceDynamic* MaterialInstance; // 0x170(0x08)
	struct ATigerHolyIncense* HolyIncense; // 0x178(0x08)
	char pad_180[0x4]; // 0x180(0x04)
	float AssaultStartTime; // 0x184(0x04)
	char pad_188[0x48]; // 0x188(0x48)
	float DefaultOverlapToleranceCm; // 0x1d0(0x04)
	float OverlapToleranceFailureIncrementCm; // 0x1d4(0x04)
	int32_t OverlapToleranceFailuresBeforeIncrement; // 0x1d8(0x04)
	int32_t OverlapTestingPerformanceVertexCount; // 0x1dc(0x04)
	float OverlapInterpStepDistanceCm; // 0x1e0(0x04)
	float OverlapMaximumInterpSteps; // 0x1e4(0x04)
	char pad_1E8[0x10]; // 0x1e8(0x10)

	void TigerOnWaveStopped__DelegateSignature(); // DelegateFunction Tiger.TigerHolyIncenseWaveComponent.TigerOnWaveStopped__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnWaveStartMovement__DelegateSignature(); // DelegateFunction Tiger.TigerHolyIncenseWaveComponent.TigerOnWaveStartMovement__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnWaveRevealed__DelegateSignature(); // DelegateFunction Tiger.TigerHolyIncenseWaveComponent.TigerOnWaveRevealed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnRep_Settings(); // Function Tiger.TigerHolyIncenseWaveComponent.OnRep_Settings // (Final|Native|Private) // @ game+0x12a5f30
	void OnRep_RevealedWaves(); // Function Tiger.TigerHolyIncenseWaveComponent.OnRep_RevealedWaves // (Final|Native|Private) // @ game+0x12a5f10
	void OnBalanceModeSet(); // Function Tiger.TigerHolyIncenseWaveComponent.OnBalanceModeSet // (Final|Native|Private) // @ game+0x12a5b30
	void Multicast_SettingsChanged(struct FTigerHolyIncenseSettings NewSettings); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_SettingsChanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12a59d0
	void Multicast_SetElapsedAssaultTime(float InElapsedTime, float InTimeMultiplier); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_SetElapsedAssaultTime // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12a5900
	void Multicast_RevealWave(struct FTigerRevealedWave RevealedWave); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_RevealWave // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12a5840
	void Multicast_BeginAssaults(float StartTime); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_BeginAssaults // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12a54a0
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerHolyIncenseWaveComponent.MatchStateChanged // (Final|Native|Private) // @ game+0x12a53d0
	float GetWaveProgress(); // Function Tiger.TigerHolyIncenseWaveComponent.GetWaveProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a4950
	int32_t GetNumberOfWaves(); // Function Tiger.TigerHolyIncenseWaveComponent.GetNumberOfWaves // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a4860
	int32_t GetCurrentWaveIndex(); // Function Tiger.TigerHolyIncenseWaveComponent.GetCurrentWaveIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a4660
	float GetCurrentCircumference(); // Function Tiger.TigerHolyIncenseWaveComponent.GetCurrentCircumference // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a4540
	float GetCurrentArea(); // Function Tiger.TigerHolyIncenseWaveComponent.GetCurrentArea // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a4520
};

// Class Tiger.TigerHookingBuff
// Size: 0x270 (Inherited: 0x270)
struct UTigerHookingBuff : UTigerBuff {
};

// Class Tiger.TigerHookedBuff
// Size: 0x270 (Inherited: 0x270)
struct UTigerHookedBuff : UTigerBuff {
};

// Class Tiger.TigerHook
// Size: 0x2e8 (Inherited: 0x228)
struct ATigerHook : AActor {
	struct USphereComponent* HookTrigger; // 0x228(0x08)
	struct FVector HookLocation; // 0x230(0x0c)
	struct FVector TargetLocation; // 0x23c(0x0c)
	struct FVector StartLocation; // 0x248(0x0c)
	enum class ETigerHookState HookState; // 0x254(0x01)
	char pad_255[0x3]; // 0x255(0x03)
	struct UTigerHookConfig* Config; // 0x258(0x08)
	float CurrentThrowTime; // 0x260(0x04)
	int32_t HookingBuffID; // 0x264(0x04)
	struct ATigerCharacter* HitCharacter; // 0x268(0x08)
	struct FVector PullBackStartAtLocation; // 0x270(0x0c)
	struct FVector PullBackStopAtLocation; // 0x27c(0x0c)
	float TimeUntilPulledBack; // 0x288(0x04)
	float CurrentTimeLeftUntilPulledBack; // 0x28c(0x04)
	float HitCharacterCameraRotateCurrentTime; // 0x290(0x04)
	struct FRotator HitCharacterCameraRotationStart; // 0x294(0x0c)
	struct FRotator HitCharacterRotationStart; // 0x2a0(0x0c)
	struct FRotator HitCharacterCameraRotationEnd; // 0x2ac(0x0c)
	struct FVector OriginalVelocity; // 0x2b8(0x0c)
	float CharacterVelocityCutoffCurrentTime; // 0x2c4(0x04)
	struct UAnimMontage* ThrowMontage; // 0x2c8(0x08)
	struct UAnimMontage* ReelMontage; // 0x2d0(0x08)
	struct FTimerHandle PreReelTimerHandle; // 0x2d8(0x08)
	char pad_2E0[0x8]; // 0x2e0(0x08)

	void OnStartThrow(); // Function Tiger.TigerHook.OnStartThrow // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnOwnerMovementUpdated(float DeltaSeconds, struct FVector OldLocation, struct FVector OldVelocity); // Function Tiger.TigerHook.OnOwnerMovementUpdated // (Final|Native|Private|HasDefaults) // @ game+0x12a5cf0
	void OnNothingHit(); // Function Tiger.TigerHook.OnNothingHit // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnNonCharacterHit(struct AActor* Actor); // Function Tiger.TigerHook.OnNonCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnCharacterHit(struct ATigerCharacter* Character); // Function Tiger.TigerHook.OnCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Multicast_StartThrow(struct FVector InStartLocation, struct FVector InTargetLocation); // Function Tiger.TigerHook.Multicast_StartThrow // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x12a5a50
	void Multicast_OnHookNothingHit(); // Function Tiger.TigerHook.Multicast_OnHookNothingHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x128ce70
	void Multicast_OnHookNonCharacterHit(struct AActor* Actor); // Function Tiger.TigerHook.Multicast_OnHookNonCharacterHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12a57b0
	void Multicast_OnHookCharacterHit(struct FVector StopPullLocation, struct ATigerCharacter* Character, float TimeUntilReturn, bool bCharacterAlive); // Function Tiger.TigerHook.Multicast_OnHookCharacterHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x12a5640
	void AuthHookBlockingHit(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult Hit); // Function Tiger.TigerHook.AuthHookBlockingHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x12a3e80
	void AuthHookBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerHook.AuthHookBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x12a3c50
};

// Class Tiger.TigerHorizontalArchetypeSelectorUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerHorizontalArchetypeSelectorUI : UTigerWidget {
	struct UTigerGameInstance* TigerGameInstance; // 0x280(0x08)

	struct UUserWidget* CreateWidgetForArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerHorizontalArchetypeSelectorUI.CreateWidgetForArchetype // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void CreateDivider(); // Function Tiger.TigerHorizontalArchetypeSelectorUI.CreateDivider // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void CreateArchetypeWidgetsForClan(struct UTigerPlayerClanData* InClanData); // Function Tiger.TigerHorizontalArchetypeSelectorUI.CreateArchetypeWidgetsForClan // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerHSensesTargetComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerHSensesTargetComponent : UActorComponent {
	float HeartAnimTime; // 0xb0(0x04)
	float HeartRate; // 0xb4(0x04)
	float HeartRateTarget; // 0xb8(0x04)
	float HeartRateNone; // 0xbc(0x04)
	float HeartRateSuspicious; // 0xc0(0x04)
	float HeartRateThreatened; // 0xc4(0x04)
	float HeartRateVariance; // 0xc8(0x04)
	float HeartRateChangeRate; // 0xcc(0x04)
	struct UCurveFloat* HeartAnimRateCurve; // 0xd0(0x08)
};

// Class Tiger.TigerUIColorSet
// Size: 0x270 (Inherited: 0x30)
struct UTigerUIColorSet : UDataAsset {
	struct FLinearColor ColorArray[0x24]; // 0x30(0x240)

	struct FLinearColor GetColor(enum class ETigerUIColor UIColor, enum class ETigerColourSpace ColourSpace); // Function Tiger.TigerUIColorSet.GetColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a9510
};

// Class Tiger.TigerHUDSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerHUDSettings : USharkLocalDeveloperSettings {
	enum class ETigerDamageNumberAmount DamageNumberAmountSetting; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerImageUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerImageUI : UTigerWidget {

	struct UImage* GetImage(); // Function Tiger.TigerImageUI.GetImage // (Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerImpendingCollisionCalculator
// Size: 0x58 (Inherited: 0x28)
struct UTigerImpendingCollisionCalculator : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Tiger.TigerIndoorComponent
// Size: 0x480 (Inherited: 0x480)
struct UTigerIndoorComponent : UBoxComponent {
};

// Class Tiger.TigerIndoorVolume
// Size: 0x260 (Inherited: 0x260)
struct ATigerIndoorVolume : ATriggerVolume {
};

// Class Tiger.TigerIngameMenuWidget
// Size: 0x2c8 (Inherited: 0x290)
struct UTigerIngameMenuWidget : UTigerMenuWidget {
	struct TArray<struct UTigerIngameSubmenuWidget*> SubmenuClasses; // 0x290(0x10)
	struct TArray<struct UTigerIngameSubmenuWidget*> SubmenuWidgets; // 0x2a0(0x10)
	int32_t ActiveMenuIndex; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct UTigerIngameSubmenuWidget* SelectedMenu; // 0x2b8(0x08)
	bool bShouldShowPlayerCurrency; // 0x2c0(0x01)
	char pad_2C1[0x7]; // 0x2c1(0x07)

	void ToggleExistingSubmenu(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.ToggleExistingSubmenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12aa390
	void SelectMenuToTheRight(); // Function Tiger.TigerIngameMenuWidget.SelectMenuToTheRight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void SelectMenuToTheLeft(); // Function Tiger.TigerIngameMenuWidget.SelectMenuToTheLeft // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void SelectMenu(struct UTigerIngameSubmenuWidget* NewSelectedMenu); // Function Tiger.TigerIngameMenuWidget.SelectMenu // (Final|Native|Protected|BlueprintCallable) // @ game+0x12a9bc0
	void OnMenuSelected(); // Function Tiger.TigerIngameMenuWidget.OnMenuSelected // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void LocalPlayerSpawned(); // Function Tiger.TigerIngameMenuWidget.LocalPlayerSpawned // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsSubmenuSelected(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.IsSubmenuSelected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a98f0
	bool IsSubmenuOpen(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.IsSubmenuOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a9850
	struct UTigerIngameSubmenuWidget* GetSubmenuFromClass(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.GetSubmenuFromClass // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a96e0
	void ConstructSubMenusIfNotConstructed(); // Function Tiger.TigerIngameMenuWidget.ConstructSubMenusIfNotConstructed // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerInputIcon
// Size: 0x280 (Inherited: 0x280)
struct UTigerInputIcon : UTigerWidget {

	void SetIconFromKey(struct FKey Key); // Function Tiger.TigerInputIcon.SetIconFromKey // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerInputMenuUI
// Size: 0x2b8 (Inherited: 0x2b8)
struct UTigerInputMenuUI : UTigerIngameSubmenuWidget {

	void ResetToDefault(); // Function Tiger.TigerInputMenuUI.ResetToDefault // (Final|Native|Public|BlueprintCallable) // @ game+0x12a9ba0
};

// Class Tiger.TigerInputPrompt
// Size: 0x2e8 (Inherited: 0x280)
struct UTigerInputPrompt : UTigerWidget {
	struct FText PrefixText; // 0x280(0x18)
	struct FText PostfixText; // 0x298(0x18)
	bool bUseKey; // 0x2b0(0x01)
	bool bUseAction; // 0x2b1(0x01)
	char pad_2B2[0x2]; // 0x2b2(0x02)
	struct FName InputAction; // 0x2b4(0x08)
	struct FName InputAxis; // 0x2bc(0x08)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct FKey InputKey; // 0x2c8(0x18)
	bool bToggleVisibilityOnGamepadChanged; // 0x2e0(0x01)
	char pad_2E1[0x7]; // 0x2e1(0x07)

	void UpdateProperties(struct FText NewPrefixText, struct FText NewPostfixText, bool bNewUseKey, struct FName NewInputAction, struct FName NewInputAxis, struct FKey NewInputKey); // Function Tiger.TigerInputPrompt.UpdateProperties // (Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x12aa620
	void UpdateInputKey(struct FKey NewInputKey); // Function Tiger.TigerInputPrompt.UpdateInputKey // (Final|Native|Public|BlueprintCallable) // @ game+0x12aa540
	void UpdateInputAxis(struct FName NewInputAxis); // Function Tiger.TigerInputPrompt.UpdateInputAxis // (Final|Native|Public|BlueprintCallable) // @ game+0x12aa4b0
	void UpdateInputAction(struct FName NewInputAction); // Function Tiger.TigerInputPrompt.UpdateInputAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12aa420
	void UpdateIcon(); // Function Tiger.TigerInputPrompt.UpdateIcon // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void RegisterInputActionListener(struct FDelegate Delegate); // Function Tiger.TigerInputPrompt.RegisterInputActionListener // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12a9a60
};

// Class Tiger.TigerInteractionControllerComponent
// Size: 0x1f0 (Inherited: 0xb0)
struct UTigerInteractionControllerComponent : UActorComponent {
	struct FMulticastInlineDelegate OnTargetInteractionChanged; // 0xb0(0x10)
	float DiablerizeDotProductCutOff; // 0xc0(0x04)
	float HeldInputInteractionTime; // 0xc4(0x04)
	float InteractionLineTraceLength; // 0xc8(0x04)
	float InteractionLineTraceThickness; // 0xcc(0x04)
	bool AllowAutomaticPickUpBehindPlayer; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	float AutoPickUpCoolDown; // 0xd4(0x04)
	struct FVector AutoPickUpBoxVolumeExtents; // 0xd8(0x0c)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct ATigerPlayerController* TigerPC; // 0xe8(0x08)
	struct ATigerPlayer* TigerPlayerPawn; // 0xf0(0x08)
	char pad_F8[0x10]; // 0xf8(0x10)
	struct TWeakObjectPtr<struct ATigerCharacter> TargetCharacter; // 0x108(0x08)
	struct TWeakObjectPtr<struct ATigerCharacter> TrainerTarget; // 0x110(0x08)
	struct TWeakObjectPtr<struct ATigerItemWorldRepresentation> InteractionItem; // 0x118(0x08)
	struct TWeakObjectPtr<struct ATigerItemWorldRepresentation> LastAutoPickupItem; // 0x120(0x08)
	struct TWeakObjectPtr<struct ATigerInteractiveObject> TargetInteractiveObject; // 0x128(0x08)
	struct ATigerBaseNPC* PotentialFeedingTarget; // 0x130(0x08)
	char pad_138[0x10]; // 0x138(0x10)
	struct TArray<struct FOverlapResult> TriggerVolumeOverlaps; // 0x148(0x10)
	char pad_158[0x10]; // 0x158(0x10)
	struct TArray<struct FHitResult> InteractionSweepResults; // 0x168(0x10)
	char pad_178[0x10]; // 0x178(0x10)
	struct TArray<struct FHitResult> InteractionTraceResults; // 0x188(0x10)
	char pad_198[0x10]; // 0x198(0x10)
	struct TArray<struct FOverlapResult> AutoPickUpInteractionOverlaps; // 0x1a8(0x10)
	char pad_1B8[0x10]; // 0x1b8(0x10)
	struct TWeakObjectPtr<struct ATigerBaseNPC> CachedVendor; // 0x1c8(0x08)
	char pad_1D0[0x20]; // 0x1d0(0x20)

	void StopVendorInteraction(); // Function Tiger.TigerInteractionControllerComponent.StopVendorInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x12aa370
	void StopObjectInteraction(); // Function Tiger.TigerInteractionControllerComponent.StopObjectInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x12aa350
	void Server_StopVendorInteraction(); // Function Tiger.TigerInteractionControllerComponent.Server_StopVendorInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12aa2e0
	void Server_StopPhysicalInteraction(enum class ETargetInteraction InStoppedInteraction); // Function Tiger.TigerInteractionControllerComponent.Server_StopPhysicalInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12aa230
	void Server_StopObjectInteraction(struct ATigerInteractiveObject* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StopObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12aa170
	void Server_StopJudgeFeed(); // Function Tiger.TigerInteractionControllerComponent.Server_StopJudgeFeed // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12aa120
	void Server_StopFeeding(); // Function Tiger.TigerInteractionControllerComponent.Server_StopFeeding // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12aa0d0
	void Server_StartVendorInteraction(struct ATigerBaseNPC* InInteractingCharacter); // Function Tiger.TigerInteractionControllerComponent.Server_StartVendorInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12aa010
	void Server_StartRevive(struct ATigerPlayer* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StartRevive // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12a9f50
	void Server_StartObjectInteraction(struct ATigerInteractiveObject* InTarget); // Function Tiger.TigerInteractionControllerComponent.Server_StartObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12a9e90
	void Server_StartJudgeFeed(struct ATigerJudge* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StartJudgeFeed // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12a9dd0
	void Server_StartFeeding(struct ATigerBaseNPC* InTargetCharacter); // Function Tiger.TigerInteractionControllerComponent.Server_StartFeeding // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12a9d10
	void Server_StartDiablerize(struct ATigerPlayer* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StartDiablerize // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12a9c50
	void OnInteractionChanged__DelegateSignature(enum class ETargetInteraction InInteraction); // DelegateFunction Tiger.TigerInteractionControllerComponent.OnInteractionChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	struct ATigerCharacter* GetInteractionCharacter(); // Function Tiger.TigerInteractionControllerComponent.GetInteractionCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a96b0
	enum class ETargetInteraction GetActiveOrTargetInteraction(); // Function Tiger.TigerInteractionControllerComponent.GetActiveOrTargetInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a94e0
	void Client_InvalidateTimedObjectInteraction(); // Function Tiger.TigerInteractionControllerComponent.Client_InvalidateTimedObjectInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x127eca0
	void Client_FailedObjectInteraction(struct ATigerInteractiveObject* InTarget); // Function Tiger.TigerInteractionControllerComponent.Client_FailedObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x122cfe0
};

// Class Tiger.TigerInteractiveCollectible
// Size: 0x2b0 (Inherited: 0x290)
struct ATigerInteractiveCollectible : ATigerClientInteractiveObject {
	struct UTigerCollectibleData* Collectible; // 0x290(0x08)
	struct UStaticMeshComponent* CollectibleMesh; // 0x298(0x08)
	struct UAkAudioEvent* CollectibleSoundEffect; // 0x2a0(0x08)
	struct UParticleSystemComponent* CollectibleParticleSystem; // 0x2a8(0x08)
};

// Class Tiger.TigerInteractiveGrimoireProp
// Size: 0x2b0 (Inherited: 0x280)
struct ATigerInteractiveGrimoireProp : ATigerInteractiveObject {
	struct UStaticMeshComponent* ItemMesh; // 0x280(0x08)
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x288(0x08)
	bool bDisableOnEntryUnlock; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)
	struct UTigerIngameSubmenuWidget* GrimoireSubmenu; // 0x298(0x08)
	char CustomStencilGroup; // 0x2a0(0x01)
	char pad_2A1[0xf]; // 0x2a1(0x0f)

	void OpenGrimoire(); // Function Tiger.TigerInteractiveGrimoireProp.OpenGrimoire // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnLanguageChanged(); // Function Tiger.TigerInteractiveGrimoireProp.OnLanguageChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsDeactivated(); // Function Tiger.TigerInteractiveGrimoireProp.IsDeactivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a9830
	void DisableHighlight(); // Function Tiger.TigerInteractiveGrimoireProp.DisableHighlight // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerInteractiveNpcComponent
// Size: 0x158 (Inherited: 0xb0)
struct UTigerInteractiveNpcComponent : UActorComponent {
	SoftClassProperty WidgetToSpawn; // 0xb0(0x28)
	struct UTigerIngameSubmenuWidget* NpcSubmenu; // 0xd8(0x08)
	struct UTigerElysiumNpcNameplateWidget* OverheadWidget; // 0xe0(0x08)
	enum class ETigerVendorType InteractiveNpcType; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
	struct UTigerNpcDialogueList* DialogueList; // 0xf0(0x08)
	float DelayBetweenInteractions; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct UTigerDialogueManager* DialogueManager; // 0x100(0x08)
	struct FText NpcName; // 0x108(0x18)
	struct FText NpcTitle; // 0x120(0x18)
	struct UTexture2D* NpcIcon; // 0x138(0x08)
	struct UTexture2D* NpcBackground; // 0x140(0x08)
	enum class ETigerClan NpcClan; // 0x148(0x01)
	char pad_149[0x3]; // 0x149(0x03)
	struct TWeakObjectPtr<struct ACameraActor> ConnectedInteractionCamera; // 0x14c(0x08)
	char pad_154[0x4]; // 0x154(0x04)

	bool IsCorrectClanForInteraction(enum class ETigerClan Clan); // Function Tiger.TigerInteractiveNpcComponent.IsCorrectClanForInteraction // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a97a0
	struct UTigerDialogueManager* GetDialogueManager(); // Function Tiger.TigerInteractiveNpcComponent.GetDialogueManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a9690
	void AssignInteractionCameraToCameraActorOfName(struct FString CameraName); // Function Tiger.TigerInteractiveNpcComponent.AssignInteractionCameraToCameraActorOfName // (Final|Native|Protected|BlueprintCallable) // @ game+0x12a9340
};

// Class Tiger.TigerInteractiveQuestItem
// Size: 0x2e0 (Inherited: 0x290)
struct ATigerInteractiveQuestItem : ATigerClientInteractiveObject {
	struct UStaticMeshComponent* QuestMesh; // 0x290(0x08)
	struct UAkAudioEvent* QuestSoundEffect; // 0x298(0x08)
	struct UTigerGrimoireEntry* GrimoireEntryToUnlock; // 0x2a0(0x08)
	char pad_2A8[0x30]; // 0x2a8(0x30)
	struct UParticleSystemComponent* QuestParticleSystem; // 0x2d8(0x08)
};

// Class Tiger.TigerEquippedModModifierValues
// Size: 0x80 (Inherited: 0x28)
struct UTigerEquippedModModifierValues : UObject {
	struct UTigerMaxIntAggregator* ExtendedMagazineLevel; // 0x28(0x08)
	struct UTigerFloatMultiplierAggregator* ReloadSpeed; // 0x30(0x08)
	struct UTigerFloatMultiplierAggregator* RecoilMultiplier; // 0x38(0x08)
	struct UTigerFloatMultiplierAggregator* SpreadMultiplier; // 0x40(0x08)
	struct UTigerFloatMultiplierAggregator* SwapSpeedMultiplier; // 0x48(0x08)
	struct UTigerFloatMultiplierAggregator* SpreadDecreaseMultiplier; // 0x50(0x08)
	struct UTigerFloatMinAggregator* ModdedFOV; // 0x58(0x08)
	struct UTigerFloatCurveMultiplierAggregator* AimedSpreadMultiplier; // 0x60(0x08)
	struct UTigerBoolAnyAggregator* IsScoped; // 0x68(0x08)
	struct UTigerBoolAnyAggregator* CanSwitchFireMode; // 0x70(0x08)
	struct UTigerWeaponCrosshairWidget* CrossHairWidget; // 0x78(0x08)
};

// Class Tiger.TigerInventoryComponent
// Size: 0x2c8 (Inherited: 0xb0)
struct UTigerInventoryComponent : UActorComponent {
	int32_t MaxItemsPerCategory; // 0xb0(0x04)
	int32_t AmmoStackDistance; // 0xb4(0x04)
	int32_t MaxConsumables; // 0xb8(0x04)
	struct FSharkRandomDeviation DropItemLaunchSpeed; // 0xbc(0x08)
	char SlotColumnCount; // 0xc4(0x01)
	char pad_C5[0x43]; // 0xc5(0x43)
	struct ATigerPlayer* Player; // 0x108(0x08)
	struct UTigerItemAsset* UnarmedItemAsset; // 0x110(0x08)
	struct FTigerInventoryWeapon Weapons[0x4]; // 0x118(0x20)
	struct FTigerItemData Items[0xc]; // 0x138(0xc0)
	struct TArray<struct UTigerAmmoAsset*> AmmoPickupItems; // 0x1f8(0x10)
	struct TArray<struct FTigerInventorySlotContent> Slots; // 0x208(0x10)
	char pad_218[0xa0]; // 0x218(0xa0)
	struct FTigerItemData Artifact; // 0x2b8(0x10)

	void UnequipWeaponModForSlot(enum class ETigerWeaponSlot Slot, struct UTigerItemAsset* ModItemAsset); // Function Tiger.TigerInventoryComponent.UnequipWeaponModForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x12afd30
	struct UTigerHuntingKnifeItemAsset* TryToGetHuntingKnifeAsset(); // Function Tiger.TigerInventoryComponent.TryToGetHuntingKnifeAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12afd00
	void SwapRangedWeaponSlots(); // Function Tiger.TigerInventoryComponent.SwapRangedWeaponSlots // (Final|Native|Protected|BlueprintCallable) // @ game+0x12afce0
	void SwapModWeapon(enum class ERangedWeaponModType InModType); // Function Tiger.TigerInventoryComponent.SwapModWeapon // (Final|Native|Protected|BlueprintCallable) // @ game+0x12afc60
	void SetSwapOutDefaultWeaponOnPickup(bool bInSwapOutDefaultWeaponOnPickup); // Function Tiger.TigerInventoryComponent.SetSwapOutDefaultWeaponOnPickup // (Final|Native|Private|BlueprintCallable) // @ game+0x12afb80
	void Server_UnequipWeaponModForSlot(enum class ETigerWeaponSlot InSlot, struct UTigerItemAsset* InModItemAsset); // Function Tiger.TigerInventoryComponent.Server_UnequipWeaponModForSlot // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12af960
	void Server_SwapRangedWeaponSlots(); // Function Tiger.TigerInventoryComponent.Server_SwapRangedWeaponSlots // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12af910
	void Server_SwapModWeapon(enum class ERangedWeaponModType InModType); // Function Tiger.TigerInventoryComponent.Server_SwapModWeapon // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12af860
	void Server_SetSwapOutDefaultWeaponOnPickup(bool bInSwapOutDefaultWeaponOnPickup); // Function Tiger.TigerInventoryComponent.Server_SetSwapOutDefaultWeaponOnPickup // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12af7a0
	void Server_RemoveItem(struct UTigerItemAsset* Item, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.Server_RemoveItem // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12af6a0
	void Server_EquipWeaponSlot(enum class ETigerWeaponSlot WeaponSlot); // Function Tiger.TigerInventoryComponent.Server_EquipWeaponSlot // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12af5f0
	void Server_EquipWeaponMod(struct UTigerRangedModItemAsset* InModItemAsset); // Function Tiger.TigerInventoryComponent.Server_EquipWeaponMod // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12af530
	void Server_DropWeapon(enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.Server_DropWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12af480
	void Server_DropItem(struct UTigerItemAsset* Item, int32_t DropCount, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.Server_DropItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12af340
	void RemoveItem(struct UTigerItemAsset* Item, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.RemoveItem // (Final|Native|Public|BlueprintCallable) // @ game+0x12af270
	bool IsModSupportedForWeapon(struct UTigerRangedModItemAsset* InModItemAsset, enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.IsModSupportedForWeapon // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aef00
	bool IsCategoryFull(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.IsCategoryFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aee70
	bool HasModEquippedOnWeapon(struct UTigerRangedModItemAsset* InModItemAsset, enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.HasModEquippedOnWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aecd0
	bool HasItemInCategory(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.HasItemInCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aec40
	bool HasItem(struct UTigerItemAsset* InItem); // Function Tiger.TigerInventoryComponent.HasItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aeba0
	struct UTigerItemAsset* GetWeaponItemBySlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerInventoryComponent.GetWeaponItemBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aeae0
	void GetWeaponInfoForUnequippedModItem(struct UTigerRangedModItemAsset* ModItemAsset, bool bIgnoreEquippedMod, struct FTigerInventoryWeapon WeaponOut, struct FTigerModSlotInfo ReplacesModOut); // Function Tiger.TigerInventoryComponent.GetWeaponInfoForUnequippedModItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x12ae950
	struct UTigerWeapon* GetWeaponBySlot(enum class ETigerWeaponSlot WeaponSlot); // Function Tiger.TigerInventoryComponent.GetWeaponBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ae8c0
	void GetUsableModsForUnequippedWeaponItem(struct UTigerItemAsset* InWeaponItem, struct TArray<struct FTigerModSlotInfo> OutWeaponItemMods, bool bOutHasAnyTransferableMods); // Function Tiger.TigerInventoryComponent.GetUsableModsForUnequippedWeaponItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x12ae780
	enum class ETigerWeaponSlot GetSlotForUnequippedWeaponItem(struct UTigerItemAsset* WeaponItem); // Function Tiger.TigerInventoryComponent.GetSlotForUnequippedWeaponItem // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ae6e0
	struct FTigerInventorySlotContent GetSlotForPosition(int32_t Column, int32_t Row); // Function Tiger.TigerInventoryComponent.GetSlotForPosition // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ae600
	enum class ETigerItemPickupInfo GetPickupInfo(struct UTigerItemAsset* Item, int32_t ItemCount, int32_t OutPickedUpItemCount); // Function Tiger.TigerInventoryComponent.GetPickupInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ae4e0
	struct TArray<struct FTigerModSlotInfo> GetModsForSlot(enum class ETigerWeaponSlot InSlot); // Function Tiger.TigerInventoryComponent.GetModsForSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ae400
	int32_t GetItemCountByCategory(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.GetItemCountByCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ae370
	int32_t GetItemCount(struct UTigerItemAsset* InItemAsset); // Function Tiger.TigerInventoryComponent.GetItemCount // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ae2d0
	struct UTigerItemAsset* GetItemByType(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.GetItemByType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ae240
	int32_t GetInventoryAmmoByType(enum class ETigerWeaponAmmoType AmmoType); // Function Tiger.TigerInventoryComponent.GetInventoryAmmoByType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ae1b0
	struct TArray<struct UTigerItemAsset*> GetInventory(); // Function Tiger.TigerInventoryComponent.GetInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x12ae130
	bool GetEquippedRangedWeaponAmmo(int32_t OutWeaponAmmo, int32_t OutInventoryAmmo); // Function Tiger.TigerInventoryComponent.GetEquippedRangedWeaponAmmo // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12ae020
	struct UTigerItemAsset* GetArtifact(); // Function Tiger.TigerInventoryComponent.GetArtifact // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12adff0
	int32_t GetAmmoInWeaponForSlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerInventoryComponent.GetAmmoInWeaponForSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12adf60
	struct UTigerAmmoAsset* GetAmmoAssetOfSlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerInventoryComponent.GetAmmoAssetOfSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aded0
	struct UTigerAmmoAsset* GetAmmoAssetFromAmmoType(enum class ETigerWeaponAmmoType AmmoType); // Function Tiger.TigerInventoryComponent.GetAmmoAssetFromAmmoType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ade40
	void EquipWeaponMod(struct UTigerRangedModItemAsset* ModItemAsset); // Function Tiger.TigerInventoryComponent.EquipWeaponMod // (Final|Native|Public|BlueprintCallable) // @ game+0x12add20
	void EquipItem(struct UTigerItemAsset* Item); // Function Tiger.TigerInventoryComponent.EquipItem // (Final|Native|Public|BlueprintCallable) // @ game+0x12adc90
	void DropWeapon(enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.DropWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x12adc10
	void DropItem(struct UTigerItemAsset* Item, bool bUpdateEquippedItem, int32_t DropCount); // Function Tiger.TigerInventoryComponent.DropItem // (Final|Native|Public|BlueprintCallable) // @ game+0x12adb00
	void Client_UpdateWeaponModForSlot(enum class ETigerWeaponSlot Slot, struct UTigerRangedModItemAsset* EquippedBarrelMod, struct UTigerRangedModItemAsset* EquippedAmmoMod, struct UTigerRangedModItemAsset* EquippedScopeMod, struct UTigerRangedModItemAsset* EquippedStockMod, struct UTigerRangedModItemAsset* EquippedSpecialMod); // Function Tiger.TigerInventoryComponent.Client_UpdateWeaponModForSlot // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12ad7b0
	void Client_RevertSwapRangedWeaponSlots(struct UTigerWeapon* InPrimaryWeapon); // Function Tiger.TigerInventoryComponent.Client_RevertSwapRangedWeaponSlots // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12ad720
	void Client_RemoveWeapon(enum class ETigerWeaponSlot WeaponSlot); // Function Tiger.TigerInventoryComponent.Client_RemoveWeapon // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12ad6a0
	void Client_RemoveFromInventory(struct UTigerItemAsset* Item, int32_t DropCount, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.Client_RemoveFromInventory // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12ad590
	void Client_AddToInventory(struct UTigerItemAsset* InItem, int16_t InItemCount, bool bInNotifyPlayerOnNewItem, enum class ETigerTelemetryItemSourceID InItemSourceID); // Function Tiger.TigerInventoryComponent.Client_AddToInventory // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12ad430
};

// Class Tiger.TigerInventoryUI
// Size: 0x2b8 (Inherited: 0x2b8)
struct UTigerInventoryUI : UTigerIngameSubmenuWidget {

	void OnInventoryUpdatedBP(); // Function Tiger.TigerInventoryUI.OnInventoryUpdatedBP // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerInWorldWidget
// Size: 0x2c8 (Inherited: 0x280)
struct UTigerInWorldWidget : UTigerWidget {
	struct FVector WorldLocation; // 0x280(0x0c)
	struct FVector ComponentOffset; // 0x28c(0x0c)
	struct FVector2D ViewportPosition; // 0x298(0x08)
	struct UTigerInWorldWidget* InnerWidget; // 0x2a0(0x08)
	struct TWeakObjectPtr<struct USceneComponent> ComponentToFollow; // 0x2a8(0x08)
	struct TArray<struct UWidget*> PlayerDistanceScalingWidgets; // 0x2b0(0x10)
	bool bWasOnScreen; // 0x2c0(0x01)
	bool bLimitRotationAngleToSides; // 0x2c1(0x01)
	bool bSupportsHover; // 0x2c2(0x01)
	bool bShowDistanceMarker; // 0x2c3(0x01)
	char pad_2C4[0x4]; // 0x2c4(0x04)

	void UpdatePlayerDistanceScalingWidgets(); // Function Tiger.TigerInWorldWidget.UpdatePlayerDistanceScalingWidgets // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void UpdateOffScreenState(float InRotationDegrees); // Function Tiger.TigerInWorldWidget.UpdateOffScreenState // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool ShouldShowDistanceMarker(); // Function Tiger.TigerInWorldWidget.ShouldShowDistanceMarker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12afc10
	void OnScreenStateChanged(bool bInIsOnScreen); // Function Tiger.TigerInWorldWidget.OnScreenStateChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnInWorldFocusLost(); // Function Tiger.TigerInWorldWidget.OnInWorldFocusLost // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnInWorldFocusGained(); // Function Tiger.TigerInWorldWidget.OnInWorldFocusGained // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnInnerWidgetChanged(); // Function Tiger.TigerInWorldWidget.OnInnerWidgetChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void FollowActor(struct AActor* InActor); // Function Tiger.TigerInWorldWidget.FollowActor // (Final|Native|Public|BlueprintCallable) // @ game+0x12addb0
	struct UTigerInWorldWidget* CreateInnerWidget(struct UTigerInWorldWidget* InWidgetClass); // Function Tiger.TigerInWorldWidget.CreateInnerWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12ada60
	void AddPlayerDistanceScalingWidget(struct UWidget* InWidget); // Function Tiger.TigerInWorldWidget.AddPlayerDistanceScalingWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12acdf0
};

// Class Tiger.TigerInWorldIconController
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerInWorldIconController : UActorComponent {
	struct UCanvasPanel* RootCanvas; // 0xb0(0x08)
	struct TArray<struct UTigerInWorldWidget*> Widgets; // 0xb8(0x10)
	struct UTigerInWorldWidget* ExplicitFocusWidget; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)
	float MaxFocusDistanceFromCrosshair; // 0xd8(0x04)
	struct FBox2D ScreenMargins; // 0xdc(0x14)

	void SetRootCanvas(struct UCanvasPanel* InRootCanvas); // Function Tiger.TigerInWorldIconController.SetRootCanvas // (Final|Native|Public|BlueprintCallable) // @ game+0x12afaf0
	void SetExplicitFocusWidget(struct UTigerInWorldWidget* InWidget); // Function Tiger.TigerInWorldIconController.SetExplicitFocusWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12afa60
	void RemoveFromScreen(struct UTigerInWorldWidget* InWidget); // Function Tiger.TigerInWorldIconController.RemoveFromScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x12af1e0
	void OnInGameMenuToggled(bool bInIsOpen); // Function Tiger.TigerInWorldIconController.OnInGameMenuToggled // (Final|Native|Protected) // @ game+0x12af050
	struct UTigerInWorldWidget* CreateInWorldWidget(struct UTigerInWorldWidget* InOuterWidgetClass, struct UTigerInWorldWidget* InInnerWidgetClass); // Function Tiger.TigerInWorldIconController.CreateInWorldWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12ad990
	void AddToScreen(struct UTigerInWorldWidget* InWidget); // Function Tiger.TigerInWorldIconController.AddToScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x12aceb0
};

// Class Tiger.TigerCollectibleItemAsset
// Size: 0x130 (Inherited: 0x128)
struct UTigerCollectibleItemAsset : UTigerItemAsset {
	struct UTigerCollectibleData* Collectible; // 0x128(0x08)
};

// Class Tiger.TigerAmmoAsset
// Size: 0x158 (Inherited: 0x128)
struct UTigerAmmoAsset : UTigerItemAsset {
	enum class ETigerWeaponAmmoType AmmoType; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
	struct FSlateColor AmmoColor; // 0x130(0x28)
};

// Class Tiger.TigerArtifactAsset
// Size: 0x130 (Inherited: 0x128)
struct UTigerArtifactAsset : UTigerItemAsset {
	enum class ETigerArtifactAbility ArtifactAbility; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
};

// Class Tiger.TigerBodyArmorAsset
// Size: 0x1e0 (Inherited: 0x128)
struct UTigerBodyArmorAsset : UTigerItemAsset {
	int32_t Durability; // 0x128(0x04)
	struct FTigerCharacterStatModification StatChanges; // 0x12c(0xb4)
};

// Class Tiger.TigerRelicAsset
// Size: 0x128 (Inherited: 0x128)
struct UTigerRelicAsset : UTigerItemAsset {
};

// Class Tiger.TigerRangedModItemAsset
// Size: 0x140 (Inherited: 0x128)
struct UTigerRangedModItemAsset : UTigerItemAsset {
	struct TArray<struct UTigerRangedWeaponModModifier*> ModEffects; // 0x128(0x10)
	int32_t ModEquipPriority; // 0x138(0x04)
	enum class ERangedWeaponModType ModType; // 0x13c(0x01)
	char pad_13D[0x3]; // 0x13d(0x03)
};

// Class Tiger.TigerHuntingKnifeItemAsset
// Size: 0x128 (Inherited: 0x128)
struct UTigerHuntingKnifeItemAsset : UTigerItemAsset {
};

// Class Tiger.TigerItemCluster
// Size: 0x360 (Inherited: 0x228)
struct ATigerItemCluster : AActor {
	struct ATigerItemWorldRepresentation* ItemActorClass; // 0x228(0x08)
	struct FItemClusterArray Items; // 0x230(0x120)
	struct TArray<struct ATigerItemWorldRepresentation*> ItemActors; // 0x350(0x10)

	void Multicast_UpdateItemCount(uint32_t InItemClusterUID, int32_t InNewItemCount); // Function Tiger.TigerItemCluster.Multicast_UpdateItemCount // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12bb060
	void Multicast_SetFinalTransform(uint32_t InItemClusterUID, struct FTransform InFinalTransform); // Function Tiger.TigerItemCluster.Multicast_SetFinalTransform // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x12baf40
};

// Class Tiger.TigerItemDatabase
// Size: 0x78 (Inherited: 0x28)
struct UTigerItemDatabase : UObject {
	struct TMap<struct FName, struct FTigerItemDatabaseCategory> ItemsByCategory; // 0x28(0x50)

	void OnItemLoaded__DelegateSignature(struct FTigerItemId ItemId, struct UTigerInventoryItemBase* InventoryItem); // DelegateFunction Tiger.TigerItemDatabase.OnItemLoaded__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	void LoadItemIdAsync(struct FTigerItemId InItemId, struct FDelegate InDelegate); // Function Tiger.TigerItemDatabase.LoadItemIdAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12bad00
	SoftClassProperty GetItemPath(struct FTigerItemId InItemId); // Function Tiger.TigerItemDatabase.GetItemPath // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba690
	struct FTigerItemId GetItemIdFromPath(struct FSoftObjectPath InObjectPath); // Function Tiger.TigerItemDatabase.GetItemIdFromPath // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba5d0
	struct UTigerInventoryItemBase* GetItem(struct FTigerItemId InItemId); // Function Tiger.TigerItemDatabase.GetItem // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba530
};

// Class Tiger.TigerItemPreviewInputComponent
// Size: 0x158 (Inherited: 0x138)
struct UTigerItemPreviewInputComponent : UInputComponent {
	float CameraSensitivityTurnMultiplier; // 0x138(0x04)
	float CameraSensitivityTurnAtRateMultiplier; // 0x13c(0x04)
	float CameraSensitivityVerticalMovementMultiplier; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	struct ATigerBattlepassRewardPreview* ItemActor; // 0x148(0x08)
	char pad_150[0x8]; // 0x150(0x08)
};

// Class Tiger.TigerBattlepassRewardPreview
// Size: 0x278 (Inherited: 0x228)
struct ATigerBattlepassRewardPreview : AActor {
	struct UTigerInventoryItemBase* PreviewItem; // 0x228(0x08)
	struct TArray<struct FName> CameraTags; // 0x230(0x10)
	struct TArray<struct FTigerItemPreviewCamera> Cameras; // 0x240(0x10)
	struct FViewTargetTransitionParams CameraTransitionParams; // 0x250(0x10)
	float CameraRadius; // 0x260(0x04)
	float CameraMoveSpeed; // 0x264(0x04)
	char pad_268[0x10]; // 0x268(0x10)

	void SetNormalizedCameraHeight(struct ACineCameraActor* InCameraActor, float InNormalizedHeight); // Function Tiger.TigerBattlepassRewardPreview.SetNormalizedCameraHeight // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bb330
	void OnToggleCamera(struct ACineCameraActor* InCurrentCamera, struct ACineCameraActor* InNewCamera); // Function Tiger.TigerBattlepassRewardPreview.OnToggleCamera // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnPreviewItemUpdated(); // Function Tiger.TigerBattlepassRewardPreview.OnPreviewItemUpdated // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void MoveToCameraIndex(int32_t InNewCameraIndex); // Function Tiger.TigerBattlepassRewardPreview.MoveToCameraIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x12bae10
	bool IsValidCameraOffset(struct FVector InCameraOffset); // Function Tiger.TigerBattlepassRewardPreview.IsValidCameraOffset // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x12ba9a0
	float GetNormalizedCameraHeight(struct ACineCameraActor* InCameraActor); // Function Tiger.TigerBattlepassRewardPreview.GetNormalizedCameraHeight // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba770
	void AddWorldRotationToItem(struct FRotator InRotation); // Function Tiger.TigerBattlepassRewardPreview.AddWorldRotationToItem // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x12ba2d0
};

// Class Tiger.TigerItemSpawner
// Size: 0x228 (Inherited: 0x228)
struct ATigerItemSpawner : AActor {
};

// Class Tiger.TigerItemWorldRepresentation
// Size: 0x288 (Inherited: 0x228)
struct ATigerItemWorldRepresentation : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct UTigerCompassMarkerWidget* CompassMarker; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
	struct UTigerItemAsset* ItemType; // 0x240(0x08)
	struct UDataTable* RangedWeaponsDatatable; // 0x248(0x08)
	char pad_250[0x18]; // 0x250(0x18)
	int32_t ItemCount; // 0x268(0x04)
	char pad_26C[0xc]; // 0x26c(0x0c)
	struct ATigerItemCluster* ItemCluster; // 0x278(0x08)
	uint32_t ItemClusterUID; // 0x280(0x04)
	enum class ETigerTelemetryItemSourceID ItemSourceID; // 0x284(0x01)
	char pad_285[0x3]; // 0x285(0x03)

	void SetItemOutlineVisible(bool ShowOutline); // Function Tiger.TigerItemWorldRepresentation.SetItemOutlineVisible // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void SetItemAsset(struct UTigerItemAsset* NewItemType, int32_t NewItemCount); // Function Tiger.TigerItemWorldRepresentation.SetItemAsset // (Native|Event|Public|BlueprintEvent) // @ game+0x12bb1c0
	void OnFinalTransformReceived(struct FTransform InFinalTransform); // Function Tiger.TigerItemWorldRepresentation.OnFinalTransformReceived // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerJoinSessionAsync
// Size: 0x190 (Inherited: 0x30)
struct UTigerJoinSessionAsync : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailed; // 0x40(0x10)
	char pad_50[0x140]; // 0x50(0x140)

	struct UTigerJoinSessionAsync* JoinSession(struct UObject* WorldContextObject, struct APlayerController* PlayerController, struct FTigerBpFindSessionSelectedSession FoundSession); // Function Tiger.TigerJoinSessionAsync.JoinSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12baa40
};

// Class Tiger.TigerJudge
// Size: 0xa30 (Inherited: 0x9a0)
struct ATigerJudge : ATigerBaseNPC {
	struct UTigerJudgeShieldComponent* JudgeShieldComponent; // 0x9a0(0x08)
	struct UTigerJudgeSwordComponent* JudgeSwordComponent; // 0x9a8(0x08)
	struct UTigerExperienceEvent* FeedEvent; // 0x9b0(0x08)
	struct UTigerWorldMarkerComponent* WorldMarkerComponent; // 0x9b8(0x08)
	struct UTigerJudgeBaseState* CurrentJudgeState; // 0x9c0(0x08)
	char pad_9C8[0x8]; // 0x9c8(0x08)
	struct ATigerPlayer* FeedingPlayer; // 0x9d0(0x08)
	struct ATigerEntityJudgeHelicopter* HelicopterClass; // 0x9d8(0x08)
	struct TWeakObjectPtr<struct ATigerEntityJudgeHelicopter> Helicopter; // 0x9e0(0x08)
	struct FTigerJudgeRotationSettings CurrentRotationSettings; // 0x9e8(0x08)
	struct ATigerPlayer* CurrentPrimaryTarget; // 0x9f0(0x08)
	float DamageCauserCutoffDistanceSq; // 0x9f8(0x04)
	char pad_9FC[0x4]; // 0x9fc(0x04)
	struct FTigerTimedAnimationTriggerWrapper AnimationTriggerWrapper; // 0xa00(0x18)
	struct TArray<struct FTigerJudgePlayerDamage> PlayerDamageCollection; // 0xa18(0x10)
	char pad_A28[0x8]; // 0xa28(0x08)

	struct ATigerPlayer* SetPrimaryTarget(struct ATigerPlayer* PrimaryTarget); // Function Tiger.TigerJudge.SetPrimaryTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x12bb400
	void SetJudgeRotationSettings(struct FTigerJudgeRotationSettings RotationSettings); // Function Tiger.TigerJudge.SetJudgeRotationSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12bb290
	void OnRep_CurrentJudgeState(struct UTigerJudgeBaseState* OldState); // Function Tiger.TigerJudge.OnRep_CurrentJudgeState // (Final|Native|Protected) // @ game+0x12bb130
	void OnJudgeStateChanged(struct UTigerJudgeBaseState* OldState, struct UTigerJudgeBaseState* NewState); // Function Tiger.TigerJudge.OnJudgeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Multicast_PlayTimedAnimationTriggers(struct TArray<struct FTigerTimedAnimationTrigger> AnimationTriggers); // Function Tiger.TigerJudge.Multicast_PlayTimedAnimationTriggers // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12baea0
	float GetDamageDoneByPlayer(struct ATigerPlayer* Player); // Function Tiger.TigerJudge.GetDamageDoneByPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba3d0
};

// Class Tiger.TigerJudgeAnimInstance
// Size: 0x3d0 (Inherited: 0x3c0)
struct UTigerJudgeAnimInstance : UTigerAnimInstance {
	struct UTigerJudgeBaseState* CurrentJudgeState; // 0x3b8(0x08)
	struct UTigerJudgeBaseState* OldJudgeState; // 0x3c0(0x08)

	void OnJudgeStateChanged(); // Function Tiger.TigerJudgeAnimInstance.OnJudgeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	struct ATigerJudge* GetOwningJudge(); // Function Tiger.TigerJudgeAnimInstance.GetOwningJudge // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ba810
};

// Class Tiger.TigerJudgeSwingData
// Size: 0x80 (Inherited: 0x30)
struct UTigerJudgeSwingData : UDataAsset {
	struct TMap<struct FName, struct FTigerJudgeSwingCollisionInfo> SwingCollisionInfos; // 0x30(0x50)
};

// Class Tiger.TigerJudgeBaseState
// Size: 0x60 (Inherited: 0x28)
struct UTigerJudgeBaseState : UObject {
	struct ATigerJudge* JudgePawn; // 0x28(0x08)
	struct ATigerAiJudgeController* JudgeAiController; // 0x30(0x08)
	struct UTigerAiJudgeSmComponent* JudgeStateMachineComp; // 0x38(0x08)
	float MovementSpeed; // 0x40(0x04)
	float TurnSpeed; // 0x44(0x04)
	float StateEntryTime; // 0x48(0x04)
	float JudgeDefaultRotationSpeed[0x4]; // 0x4c(0x10)
	char pad_5C[0x4]; // 0x5c(0x04)

	void OnTick(float DeltaTime); // Function Tiger.TigerJudgeBaseState.OnTick // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnStateCreationSetup(); // Function Tiger.TigerJudgeBaseState.OnStateCreationSetup // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnExitState(struct UTigerJudgeBaseState* NewState); // Function Tiger.TigerJudgeBaseState.OnExitState // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnEnterState(struct UTigerJudgeBaseState* OldState); // Function Tiger.TigerJudgeBaseState.OnEnterState // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	float GetDefaultRotationSpeed(enum class ETigerJudgeRotationMode RotationMode); // Function Tiger.TigerJudgeBaseState.GetDefaultRotationSpeed // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bf3a0
};

// Class Tiger.TigerJudgeBaseAttackState
// Size: 0xc0 (Inherited: 0x60)
struct UTigerJudgeBaseAttackState : UTigerJudgeBaseState {
	struct TArray<struct ATigerCharacter*> HitCharacters; // 0x60(0x10)
	float Cooldown; // 0x70(0x04)
	float AttackFailSafeDuration; // 0x74(0x04)
	float AttackMinRange; // 0x78(0x04)
	float AttackMaxRange; // 0x7c(0x04)
	bool bUseAttackRangeHorizontally; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float MaxHeightDiff; // 0x84(0x04)
	struct UTigerJudgeBaseState* PreviousState; // 0x88(0x08)
	struct UTigerJudgeSwingData* SwingData; // 0x90(0x08)
	bool bJudgeSwordActiveStatus; // 0x98(0x01)
	bool bIsCheckingAttackCollisionData; // 0x99(0x01)
	char pad_9A[0x2]; // 0x9a(0x02)
	struct FVector SwordHitBox; // 0x9c(0x0c)
	struct UCurveFloat* SwordLengthCurve; // 0xa8(0x08)
	char pad_B0[0x10]; // 0xb0(0x10)

	void OnJudgeSwordActiveStatusChanged(); // Function Tiger.TigerJudgeBaseAttackState.OnJudgeSwordActiveStatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnCharactersHitWithSword(struct ATigerCharacter* CharacterHitBySword); // Function Tiger.TigerJudgeBaseAttackState.OnCharactersHitWithSword // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsOffCooldown(); // Function Tiger.TigerJudgeBaseAttackState.IsOffCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x12bf7a0
};

// Class Tiger.TigerJudgeCombatState
// Size: 0x88 (Inherited: 0x60)
struct UTigerJudgeCombatState : UTigerJudgeBaseState {
	struct TArray<struct UTigerJudgeBaseAttackState*> AttackTypes; // 0x60(0x10)
	struct TArray<struct UTigerJudgeBaseAttackState*> AvailableAttacks; // 0x70(0x10)
	float TimeWithoutSeeingBloodhuntedPlayers; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)

	bool UpdateAvailableAttacks(); // Function Tiger.TigerJudgeCombatState.UpdateAvailableAttacks // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bfde0
	void MoveToClosestBloodhuntedPlayer(); // Function Tiger.TigerJudgeCombatState.MoveToClosestBloodhuntedPlayer // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bf7d0
	bool IsAttackOffCooldown(struct UTigerJudgeBaseAttackState* StateType); // Function Tiger.TigerJudgeCombatState.IsAttackOffCooldown // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bf700
	struct ATigerPlayer* GetClosestBloodhuntedPlayer(); // Function Tiger.TigerJudgeCombatState.GetClosestBloodhuntedPlayer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bf370
	struct TArray<struct UTigerJudgeBaseAttackState*> GetApplicableAttacksForTarget(struct ATigerPlayer* Player); // Function Tiger.TigerJudgeCombatState.GetApplicableAttacksForTarget // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bf290
};

// Class Tiger.TigerJudgeDownedState
// Size: 0x60 (Inherited: 0x60)
struct UTigerJudgeDownedState : UTigerJudgeBaseState {
};

// Class Tiger.TigerJudgeFedOnState
// Size: 0x70 (Inherited: 0x60)
struct UTigerJudgeFedOnState : UTigerJudgeBaseState {
	float FeedingOffset; // 0x60(0x04)
	struct FName FeedingAnimationName; // 0x64(0x08)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Tiger.TigerJudgePatrollingState
// Size: 0x110 (Inherited: 0x60)
struct UTigerJudgePatrollingState : UTigerJudgeBaseState {
	struct FName IndexKeyName; // 0x60(0x08)
	struct FName WaypointKeyName; // 0x68(0x08)
	struct FName DirectionKeyName; // 0x70(0x08)
	char pad_78[0x98]; // 0x78(0x98)
};

// Class Tiger.TigerJudgeShieldComponent
// Size: 0xf10 (Inherited: 0xee0)
struct UTigerJudgeShieldComponent : USkeletalMeshComponent {
	struct FVector DeflectEffectOffset; // 0xee0(0x0c)
	char pad_EEC[0x4]; // 0xeec(0x04)
	struct UParticleSystem* DeflectEffect; // 0xef0(0x08)
	struct UAkAudioEvent* DeflectSound; // 0xef8(0x08)
	float BlockingHalfAngle; // 0xf00(0x04)
	char pad_F04[0xc]; // 0xf04(0x0c)

	void TriggerDeflectEffect(struct ATigerCharacter* Attacker); // Function Tiger.TigerJudgeShieldComponent.TriggerDeflectEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x12bfd50
	void Multicast_TriggerDeflectEffect(struct ATigerCharacter* Attacker); // Function Tiger.TigerJudgeShieldComponent.Multicast_TriggerDeflectEffect // (Net|Native|Event|NetMulticast|Public) // @ game+0x12bf950
};

// Class Tiger.TigerJudgeSwordComponent
// Size: 0x4f0 (Inherited: 0x4e0)
struct UTigerJudgeSwordComponent : UStaticMeshComponent {
	struct UParticleSystem* CharacterHitEffect; // 0x4e0(0x08)
	struct UAkAudioEvent* CharacterHitSound; // 0x4e8(0x08)

	void SpawnHitEffect(struct ATigerCharacter* Character, struct FVector Offset); // Function Tiger.TigerJudgeSwordComponent.SpawnHitEffect // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12bfc80
	void Multicast_SpawnHitEffect(struct ATigerCharacter* Character, struct FVector Offset); // Function Tiger.TigerJudgeSwordComponent.Multicast_SpawnHitEffect // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x12bf880
};

// Class Tiger.TigerKindredCharmEffectActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerKindredCharmEffectActor : AActor {
	float KindredCharmPercent; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)

	void OnShouldDestroy(bool bInIsDedicatedServer); // Function Tiger.TigerKindredCharmEffectActor.OnShouldDestroy // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnPercentChanged(bool bInIsDedicatedServer); // Function Tiger.TigerKindredCharmEffectActor.OnPercentChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Multicast_ShouldDestroy(); // Function Tiger.TigerKindredCharmEffectActor.Multicast_ShouldDestroy // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x128cf30
	void Multicast_SetKindredCharmPercent(float InPercent); // Function Tiger.TigerKindredCharmEffectActor.Multicast_SetKindredCharmPercent // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12bf7f0
};

// Class Tiger.TigerKindredCharmWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerKindredCharmWidget : UTigerWidget {

	void OnKindredCharmCountChanged(int32_t InNewCount); // Function Tiger.TigerKindredCharmWidget.OnKindredCharmCountChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerLaceratingThrowProjectile
// Size: 0x260 (Inherited: 0x228)
struct ATigerLaceratingThrowProjectile : AActor {
	struct UTigerLaceratingThrowConfig* ConfigType; // 0x228(0x08)
	struct FVector TargetLocation; // 0x230(0x0c)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct FTimerHandle ArrivalTimerHandle; // 0x240(0x08)
	bool bIsMoving; // 0x248(0x01)
	char pad_249[0x3]; // 0x249(0x03)
	int32_t rank; // 0x24c(0x04)
	char pad_250[0xc]; // 0x250(0x0c)
	bool bTargetIsOnWall; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)

	void PlayHitWallSound(); // Function Tiger.TigerLaceratingThrowProjectile.PlayHitWallSound // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnRep_TargetLocation(); // Function Tiger.TigerLaceratingThrowProjectile.OnRep_TargetLocation // (Final|Native|Private) // @ game+0x12bfb30
};

// Class Tiger.TigerLevelComponent
// Size: 0x158 (Inherited: 0xb0)
struct UTigerLevelComponent : UActorComponent {
	struct FMulticastInlineDelegate OnLevelChangedEvent; // 0xb0(0x10)
	char LevelCap; // 0xc0(0x01)
	char CurrentLevel; // 0xc1(0x01)
	char pad_C2[0x2]; // 0xc2(0x02)
	int32_t CurrentExperience; // 0xc4(0x04)
	struct TMap<enum class ETigerPlayerEvent, struct UTigerExperienceEvent*> PlayerEventMappings; // 0xc8(0x50)
	struct UCurveFloat* ExperienceCurve; // 0x118(0x08)
	struct UCurveFloat* HealthMultiplierCurve; // 0x120(0x08)
	struct UCurveFloat* DamageMultiplierCurve; // 0x128(0x08)
	struct UCurveFloat* CooldownMultiplierCurve; // 0x130(0x08)
	bool bShowAllLevelPopupNotifications; // 0x138(0x01)
	char pad_139[0x7]; // 0x139(0x07)
	struct FMulticastInlineDelegate OnExperienceAdded; // 0x140(0x10)
	struct ATigerPlayer* Player; // 0x150(0x08)

	void TigerOnLevelChanged__DelegateSignature(int32_t InLevel, int32_t InOldLevel); // DelegateFunction Tiger.TigerLevelComponent.TigerOnLevelChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnExperienceAdded__DelegateSignature(int32_t Experience); // DelegateFunction Tiger.TigerLevelComponent.TigerOnExperienceAdded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void PlayLevelUpSound(); // Function Tiger.TigerLevelComponent.PlayLevelUpSound // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnRep_CurrentLevel(char InOldCurrentLevel); // Function Tiger.TigerLevelComponent.OnRep_CurrentLevel // (Final|Native|Private) // @ game+0x12bfab0
	void OnPlayerEvent(enum class ETigerPlayerEvent PlayerEvent, struct ATigerCharacter* EventTiedCharacter); // Function Tiger.TigerLevelComponent.OnPlayerEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x12bf9e0
	bool IsAtLevelCap(); // Function Tiger.TigerLevelComponent.IsAtLevelCap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bf6d0
	int32_t GetTotalEarnedExperience(); // Function Tiger.TigerLevelComponent.GetTotalEarnedExperience // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bf6a0
	int32_t GetRequiredExperienceForNextLevel(); // Function Tiger.TigerLevelComponent.GetRequiredExperienceForNextLevel // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bf670
	int32_t GetRequiredExperienceForLevel(char InLevel); // Function Tiger.TigerLevelComponent.GetRequiredExperienceForLevel // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bf5e0
	float GetLevelUpPercentage(); // Function Tiger.TigerLevelComponent.GetLevelUpPercentage // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bf590
	char GetLevelCap(); // Function Tiger.TigerLevelComponent.GetLevelCap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bf570
	void Client_LevelGained(char InNewLevel, bool InShowLevelGainedPopup); // Function Tiger.TigerLevelComponent.Client_LevelGained // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12bf170
	void Client_ExperienceGained(struct UTigerExperienceEvent* ExperienceEvent, int32_t GainedExperience); // Function Tiger.TigerLevelComponent.Client_ExperienceGained // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12bf0a0
	void AddExperience(struct UTigerExperienceEvent* InExperienceEvent, struct ATigerCharacter* InEventTiedCharacter, int32_t InOverrideExperienceGain); // Function Tiger.TigerLevelComponent.AddExperience // (Final|Native|Public|BlueprintCallable) // @ game+0x12bef90
};

// Class Tiger.TigerLevelScriptActor
// Size: 0x230 (Inherited: 0x230)
struct ATigerLevelScriptActor : ALevelScriptActor {

	struct UTigerDistrictData* GetDistrictData(); // Function Tiger.TigerLevelScriptActor.GetDistrictData // (Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerLevelUpPrompt
// Size: 0x2a8 (Inherited: 0x2a8)
struct UTigerLevelUpPrompt : UTigerSimpleTextPrompt {

	void SetBloodTrack(bool bInFirst, struct UTigerBloodTrackPassiveConfig* InBloodTrack); // Function Tiger.TigerLevelUpPrompt.SetBloodTrack // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerLicenseAgreementPopup
// Size: 0x260 (Inherited: 0x260)
struct UTigerLicenseAgreementPopup : UUserWidget {

	struct FString GetLegalDocumentStringFromDisc(struct FString InLocale, enum class ETigerLegalDocumentType InDocumentType); // Function Tiger.TigerLicenseAgreementPopup.GetLegalDocumentStringFromDisc // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12bf430
};

// Class Tiger.TigerLoadingScreenAsset
// Size: 0x78 (Inherited: 0x28)
struct UTigerLoadingScreenAsset : UObject {
	struct TSoftObjectPtr<struct UAkAudioEvent> StartAudioEvent; // 0x28(0x28)
	SoftClassProperty LoadingScreenWidget; // 0x50(0x28)

	void PrepareAssets(struct TArray<struct FSoftObjectPath> OutAssetsToLoad); // Function Tiger.TigerLoadingScreenAsset.PrepareAssets // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerLoadingScreenUI
// Size: 0x298 (Inherited: 0x260)
struct UTigerLoadingScreenUI : UUserWidget {
	struct FMulticastInlineDelegate OnFadeInCompleteEvent; // 0x260(0x10)
	struct FMulticastInlineDelegate OnFadeOutCompleteEvent; // 0x270(0x10)
	float FadeInTime; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct UTigerLoadingScreenAsset* LoadingScreenAsset; // 0x288(0x08)
	int32_t AkPlayingId; // 0x290(0x04)
	char pad_294[0x4]; // 0x294(0x04)

	void StartFadeOut(); // Function Tiger.TigerLoadingScreenUI.StartFadeOut // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void StartFadeIn(); // Function Tiger.TigerLoadingScreenUI.StartFadeIn // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void RaiseFadeOutComplete(); // Function Tiger.TigerLoadingScreenUI.RaiseFadeOutComplete // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bfb70
	void RaiseFadeInComplete(); // Function Tiger.TigerLoadingScreenUI.RaiseFadeInComplete // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bfb50
	void OnFadeOutComplete__DelegateSignature(); // DelegateFunction Tiger.TigerLoadingScreenUI.OnFadeOutComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnFadeInComplete__DelegateSignature(); // DelegateFunction Tiger.TigerLoadingScreenUI.OnFadeInComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void FadeOut(); // Function Tiger.TigerLoadingScreenUI.FadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x12bf270
	void FadeIn(); // Function Tiger.TigerLoadingScreenUI.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x12bf250
	void ChangeStatusText(struct FText InText); // Function Tiger.TigerLoadingScreenUI.ChangeStatusText // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerLocalAIController
// Size: 0x538 (Inherited: 0x478)
struct ATigerLocalAIController : ATigerLocalAIControllerBase {
	float FleeMaxDistanceSquared; // 0x478(0x04)
	float FacingConeHalfAngle; // 0x47c(0x04)
	float MinimumAcceptableHeadshotDamageMultiplier; // 0x480(0x04)
	float HeadshotChance; // 0x484(0x04)
	struct TArray<struct UTigerBuff*> BuffsOnSelfToIgnoreTargetsList; // 0x488(0x10)
	struct TArray<struct UTigerBuff*> BuffsOnTargetsToIgnoreList; // 0x498(0x10)
	char pad_4A8[0x8]; // 0x4a8(0x08)
	struct ATigerPlayerState* TigerPlayerState; // 0x4b0(0x08)
	char pad_4B8[0x80]; // 0x4b8(0x80)

	bool SetMainStateWandering(); // Function Tiger.TigerLocalAIController.SetMainStateWandering // (Final|Native|Public|BlueprintCallable) // @ game+0x12bfc50
	bool SetMainStateInBloodVein(); // Function Tiger.TigerLocalAIController.SetMainStateInBloodVein // (Final|Native|Public|BlueprintCallable) // @ game+0x12bfc20
	bool SetBBMainState(enum class ETigerAIPlayerMainState InNewState); // Function Tiger.TigerLocalAIController.SetBBMainState // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bfb90
};

// Class Tiger.TigerLocalPlayer
// Size: 0x278 (Inherited: 0x258)
struct UTigerLocalPlayer : ULocalPlayer {
	char pad_258[0x20]; // 0x258(0x20)
};

// Class Tiger.TigerLocalThrallData
// Size: 0x60 (Inherited: 0x28)
struct UTigerLocalThrallData : UObject {
	struct UTigerBaseThrallData* BaseData; // 0x28(0x08)
	struct FTigerPersistentThrallData PersistentData; // 0x30(0x30)

	void SetStats(struct FTigerThrallStats InStats); // Function Tiger.TigerLocalThrallData.SetStats // (Final|Native|Public|BlueprintCallable) // @ game+0x12c3c20
	void SetStat(enum class ETigerThrallStatId InType, int32_t InValue); // Function Tiger.TigerLocalThrallData.SetStat // (Final|Native|Public|BlueprintCallable) // @ game+0x12c3b50
	void RemoveAbility(enum class ETigerThrallAbilityId InAbility); // Function Tiger.TigerLocalThrallData.RemoveAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x12c3a00
	bool HasAbility(enum class ETigerThrallAbilityId InAbility); // Function Tiger.TigerLocalThrallData.HasAbility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c3530
	struct FTigerThrallUpgradeScreenInformation GetUpgradeScreenInfo(); // Function Tiger.TigerLocalThrallData.GetUpgradeScreenInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c34b0
	struct FTigerThrallStats GetThrallStats(); // Function Tiger.TigerLocalThrallData.GetThrallStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c3420
	enum class ETigerThrallId GetThrallId(); // Function Tiger.TigerLocalThrallData.GetThrallId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c3480
	struct FTigerThrallStats GetMutableThrallStats(); // Function Tiger.TigerLocalThrallData.GetMutableThrallStats // (Final|Native|Public|BlueprintCallable) // @ game+0x12c3420
	struct FTigerThrallDetailsScreenInformation GetDetailsScreenInfo(); // Function Tiger.TigerLocalThrallData.GetDetailsScreenInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c3270
	struct FTigerThrallCharacterCardInformation GetCharacterCardInfo(); // Function Tiger.TigerLocalThrallData.GetCharacterCardInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c30a0
	void DecreaseStatModifierTurnsByOne(); // Function Tiger.TigerLocalThrallData.DecreaseStatModifierTurnsByOne // (Final|Native|Public|BlueprintCallable) // @ game+0x12c3060
	struct FTigerThrallStats CalculateTrueStats(); // Function Tiger.TigerLocalThrallData.CalculateTrueStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c2fe0
	int32_t CalculateTotalInjuryLevel(); // Function Tiger.TigerLocalThrallData.CalculateTotalInjuryLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c2fb0
	void AddStats(struct FTigerThrallStats InStatsToAdd); // Function Tiger.TigerLocalThrallData.AddStats // (Final|Native|Public|BlueprintCallable) // @ game+0x12c2ed0
	void AddStat(enum class ETigerThrallStatId InType, int32_t InToAdd); // Function Tiger.TigerLocalThrallData.AddStat // (Final|Native|Public|BlueprintCallable) // @ game+0x12c2e00
	void AddAbility(enum class ETigerThrallAbilityId InAbility); // Function Tiger.TigerLocalThrallData.AddAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x12c2d80
};

// Class Tiger.TigerLocalThrallMissionData
// Size: 0x78 (Inherited: 0x28)
struct UTigerLocalThrallMissionData : UObject {
	struct FMulticastInlineDelegate OnMissionProgression; // 0x28(0x10)
	struct FMulticastInlineDelegate OnMissionComplete; // 0x38(0x10)
	struct UTigerThrallMission* BaseMissionData; // 0x48(0x08)
	struct UTigerThrallSystem* ThrallSystem; // 0x50(0x08)
	struct FTigerPersistentMissionData PersistentMissionData; // 0x58(0x20)

	void OnMissionTurnProgression__DelegateSignature(struct UTigerLocalThrallMissionData* LocalMissionData); // DelegateFunction Tiger.TigerLocalThrallMissionData.OnMissionTurnProgression__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnMissionComplete__DelegateSignature(struct UTigerLocalThrallMissionData* LocalMissionData, enum class ETigerMissionSuccessRating SuccessRating); // DelegateFunction Tiger.TigerLocalThrallMissionData.OnMissionComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void IncrementMissionByOneTurn(); // Function Tiger.TigerLocalThrallMissionData.IncrementMissionByOneTurn // (Final|Native|Public|BlueprintCallable) // @ game+0x12c35f0
};

// Class Tiger.TigerLockOnCameraBehavior
// Size: 0x128 (Inherited: 0x128)
struct UTigerLockOnCameraBehavior : UTigerActiveCameraBehavior {
};

// Class Tiger.TigerLoginQueueService
// Size: 0xc0 (Inherited: 0x28)
struct UTigerLoginQueueService : UObject {
	char pad_28[0x98]; // 0x28(0x98)
};

// Class Tiger.TigerLootSpawner
// Size: 0x258 (Inherited: 0x228)
struct ATigerLootSpawner : AActor {
	struct UTigerItemLootTable* LootTable; // 0x228(0x08)
	char GameTypeFilter; // 0x230(0x01)
	bool bShouldReceiveItemsFromLootLocation; // 0x231(0x01)
	char pad_232[0x6]; // 0x232(0x06)
	struct TArray<struct FTigerRandomizedLootResult> AssignedLoot; // 0x238(0x10)
	struct USphereComponent* LootLocationCollider; // 0x248(0x08)
	struct ATigerLootLocation* AssignedLootLocation; // 0x250(0x08)

	bool IsValidForCurrentGameType(); // Function Tiger.TigerLootSpawner.IsValidForCurrentGameType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c3640
};

// Class Tiger.TigerLootBoxSpawner
// Size: 0x270 (Inherited: 0x258)
struct ATigerLootBoxSpawner : ATigerLootSpawner {
	struct ATigerLootBox* LootBoxClass; // 0x258(0x08)
	int32_t MinimumNumberOfItems; // 0x260(0x04)
	int32_t MaximumNumberOfItems; // 0x264(0x04)
	char pad_268[0x4]; // 0x268(0x04)
	enum class ETigerTelemetryItemSourceID TelemetryIDSource; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
};

// Class Tiger.TigerLootableVehicleDoorSpawner
// Size: 0x278 (Inherited: 0x270)
struct ATigerLootableVehicleDoorSpawner : ATigerLootBoxSpawner {
	struct ATigerVehicle* VehicleBody; // 0x270(0x08)
};

// Class Tiger.TigerLootBox
// Size: 0x2f0 (Inherited: 0x280)
struct ATigerLootBox : ATigerInteractiveObject {
	char pad_280[0x8]; // 0x280(0x08)
	struct ATigerItemWorldRepresentation* PickupItemClass; // 0x288(0x08)
	struct UAkAudioEvent* StartInteractSound; // 0x290(0x08)
	struct UAkAudioEvent* StopInteractSound; // 0x298(0x08)
	enum class ETigerItemRarity CurrentHighestRarity; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
	struct TArray<struct FTigerItemData> ItemList; // 0x2a8(0x10)
	bool bWasSpawnedOnPlayerDeath; // 0x2b8(0x01)
	bool bHasBeenPreviouslyOpened; // 0x2b9(0x01)
	char pad_2BA[0x2]; // 0x2ba(0x02)
	struct TWeakObjectPtr<struct ATigerPlayerController> CurrentInteractingPlayerController; // 0x2bc(0x08)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct UBoxComponent* CancelInteractionVolume; // 0x2c8(0x08)
	char pad_2D0[0x18]; // 0x2d0(0x18)
	enum class ETigerTelemetryItemSourceID TelemetrySourceID; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)

	void SetTelemetrySourceID(enum class ETigerTelemetryItemSourceID InSourceID); // Function Tiger.TigerLootBox.SetTelemetrySourceID // (Final|Native|Public|BlueprintCallable) // @ game+0x12c3dd0
	void OnReset(); // Function Tiger.TigerLootBox.OnReset // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnRep_OpenedState(); // Function Tiger.TigerLootBox.OnRep_OpenedState // (Final|Native|Protected) // @ game+0x12c39e0
	void OnRep_HighestRarityUpdated(enum class ETigerItemRarity OldRarity); // Function Tiger.TigerLootBox.OnRep_HighestRarityUpdated // (Final|Native|Public) // @ game+0x12c3960
	void OnOpenedStateReplicated(enum class EInteractiveObjectState State); // Function Tiger.TigerLootBox.OnOpenedStateReplicated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnOpened(); // Function Tiger.TigerLootBox.OnOpened // (Final|Native|Protected|BlueprintCallable) // @ game+0x12c3940
	void OnOpenBoxAnimation(); // Function Tiger.TigerLootBox.OnOpenBoxAnimation // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnLocalPlayerInteractionCancelled(); // Function Tiger.TigerLootBox.OnLocalPlayerInteractionCancelled // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnListUpdated(struct TArray<struct FTigerItemData> NewItemList); // Function Tiger.TigerLootBox.OnListUpdated // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnHighestRarityUpdated(enum class ETigerItemRarity NewHighestRarity); // Function Tiger.TigerLootBox.OnHighestRarityUpdated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Multicast_SetInteractionStateForNonInteractingPlayer(enum class EInteractiveObjectState NewState); // Function Tiger.TigerLootBox.Multicast_SetInteractionStateForNonInteractingPlayer // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12c3720
	void Multicast_OpenBoxAnimation(); // Function Tiger.TigerLootBox.Multicast_OpenBoxAnimation // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0xb8cb40
	void Multicast_Enable(); // Function Tiger.TigerLootBox.Multicast_Enable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0xc6ae30
	bool IsOpened(); // Function Tiger.TigerLootBox.IsOpened // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c3610
	bool HasLoot(); // Function Tiger.TigerLootBox.HasLoot // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c35c0
	struct FText GetDescriptionText(); // Function Tiger.TigerLootBox.GetDescriptionText // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16c0340
	void DisableLootBox(); // Function Tiger.TigerLootBox.DisableLootBox // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c3080
	void ClientCloseLid(); // Function Tiger.TigerLootBox.ClientCloseLid // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void ClientCloseBoxGUI(); // Function Tiger.TigerLootBox.ClientCloseBoxGUI // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerLootContainer
// Size: 0x298 (Inherited: 0x280)
struct ATigerLootContainer : ATigerInteractiveObject {
	char pad_280[0x8]; // 0x280(0x08)
	bool bDoorIsOpen; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct UTigerBlueprintLootComponent* LootSpawnerComponent; // 0x290(0x08)

	void OnStoppedBeingClosestLootContainerInHeightenedSenses(); // Function Tiger.TigerLootContainer.OnStoppedBeingClosestLootContainerInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnBecameClosestLootContainerInHeightenedSenses(); // Function Tiger.TigerLootContainer.OnBecameClosestLootContainerInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerLootDropComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerLootDropComponent : UActorComponent {
	int32_t DropChance; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct TArray<struct FTigerLootItemType> LootAssets; // 0xb8(0x10)
	enum class ETigerTelemetryItemSourceID TelemetryIDSource; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Tiger.TigerLootLocationConfiguration
// Size: 0x40 (Inherited: 0x30)
struct UTigerLootLocationConfiguration : UDataAsset {
	struct TArray<struct FTigerLootLocationEntry> LocationEntries; // 0x30(0x10)
};

// Class Tiger.TigerLootLocation
// Size: 0x2d0 (Inherited: 0x260)
struct ATigerLootLocation : AVolume {
	struct UTigerLootLocationConfiguration* Configuration; // 0x260(0x08)
	struct FText EnteringAreaMainText; // 0x268(0x18)
	struct FText EnteringAreaSubText; // 0x280(0x18)
	struct UTexture2D* EnteringAreaTextBackground; // 0x298(0x08)
	struct TArray<struct ATigerLootSpawner*> OverlappingLootSpawners; // 0x2a0(0x10)
	struct TArray<struct ATigerLootSpawner*> AlwaysOverlappingLootSpawner; // 0x2b0(0x10)
	char GameTypeFilter; // 0x2c0(0x01)
	char pad_2C1[0xb]; // 0x2c1(0x0b)
	float EnteringPromptCooldown; // 0x2cc(0x04)

	void OnEndOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerLootLocation.OnEndOverlap // (Final|Native|Private) // @ game+0x12c3870
	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerLootLocation.OnBeginOverlap // (Final|Native|Private) // @ game+0x12c37a0
};

// Class Tiger.TigerItemLootTable
// Size: 0xc0 (Inherited: 0x30)
struct UTigerItemLootTable : UDataAsset {
	struct TArray<struct FTigerItemLootEntry> Items; // 0x30(0x10)
	struct TArray<struct FTigerSubItemLootTable> SubLootTables; // 0x40(0x10)
	struct TMap<struct FTigerLootTableKey, struct FTigerGeneratedLootTable> GeneratedSubsets; // 0x50(0x50)
	struct FTigerGeneratedLootTable EntireLootTable; // 0xa0(0x18)
	char pad_B8[0x1]; // 0xb8(0x01)
	bool bIsLootBuilt; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)

	void DebugChances(); // Function Tiger.TigerItemLootTable.DebugChances // (Final|Native|Public) // @ game+0xb45020
};

// Class Tiger.TigerMapGameData
// Size: 0xb0 (Inherited: 0x28)
struct UTigerMapGameData : UObject {
	struct FMulticastInlineDelegate OnMapMarkerAdded; // 0x28(0x10)
	struct FMulticastInlineDelegate OnMapMarkerRemoved; // 0x38(0x10)
	struct TArray<struct UTigerMapMarkerProxy*> MapMarkerProxies; // 0x48(0x10)
	struct UTigerMapInfoDataAsset* MapInfoAsset; // 0x58(0x08)
	char pad_60[0x50]; // 0x60(0x50)

	void SetCurrentMinimapSize(struct FVector2D InMinimapSize); // Function Tiger.TigerMapGameData.SetCurrentMinimapSize // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x12c9830
	void RemoveMapMarker(struct UTigerMapMarkerProxy* Marker); // Function Tiger.TigerMapGameData.RemoveMapMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9430
	bool HasAnyMapInfo(); // Function Tiger.TigerMapGameData.HasAnyMapInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9230
	struct FVector2D GetPositionZeroToOne(struct FVector2D InPositionOnTexture); // Function Tiger.TigerMapGameData.GetPositionZeroToOne // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8f60
	struct FVector2D GetPositionOnMap(struct FVector InLocation); // Function Tiger.TigerMapGameData.GetPositionOnMap // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12c8eb0
	struct FVector2D GetPositionInWorld(struct FVector2D MapPosition); // Function Tiger.TigerMapGameData.GetPositionInWorld // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12c8e10
	struct FTigerMapInfo GetCurrentMapInfo(); // Function Tiger.TigerMapGameData.GetCurrentMapInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8bc0
	struct UTigerMapMarkerProxy* AddMapMarkerBP(struct UUserWidget* MapMarker); // Function Tiger.TigerMapGameData.AddMapMarkerBP // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8850
};

// Class Tiger.TigerMapIncenseLine
// Size: 0x280 (Inherited: 0x260)
struct UTigerMapIncenseLine : UUserWidget {
	struct FName LineLengthParam; // 0x260(0x08)
	char pad_268[0x18]; // 0x268(0x18)

	void UpdateLinePosition(struct UMaterialInstanceDynamic* InDynamicMaterial); // Function Tiger.TigerMapIncenseLine.UpdateLinePosition // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca150
	void SetStartPos(struct FVector2D InPos); // Function Tiger.TigerMapIncenseLine.SetStartPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12c9c10
	void SetEndPos(struct FVector2D InPos); // Function Tiger.TigerMapIncenseLine.SetEndPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12c98b0
	void SetActualEndPos(float InLineLengthCutoff, float InInterpSpeed, float InDeltaTime); // Function Tiger.TigerMapIncenseLine.SetActualEndPos // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9600
	void ResetLinePosition(struct UMaterialInstanceDynamic* InLineMaterial); // Function Tiger.TigerMapIncenseLine.ResetLinePosition // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9570
	struct FVector2D GetStartPos(); // Function Tiger.TigerMapIncenseLine.GetStartPos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c91a0
	struct FVector2D GetEndPos(); // Function Tiger.TigerMapIncenseLine.GetEndPos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8c80
	void ExternalUpdateLinePosition(); // Function Tiger.TigerMapIncenseLine.ExternalUpdateLinePosition // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void ExternalResetLinePosition(); // Function Tiger.TigerMapIncenseLine.ExternalResetLinePosition // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerMapInfoDataAsset
// Size: 0x100 (Inherited: 0x30)
struct UTigerMapInfoDataAsset : UDataAsset {
	struct TArray<struct FTigerMapInfo> MapInfoList; // 0x30(0x10)
	struct FTigerMapInfo DefaultMapInfo; // 0x40(0xb8)
	struct UUserWidget* PointOfInterestWidgetType; // 0xf8(0x08)
};

// Class Tiger.TigerMapMarkerOverlay
// Size: 0x288 (Inherited: 0x280)
struct UTigerMapMarkerOverlay : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void SetPlayerMarkerWidget(struct UTigerPlayerMarkerWidget* InPlayerMarkerWidget); // Function Tiger.TigerMapMarkerOverlay.SetPlayerMarkerWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9af0
	struct UTigerPlayerMarkerWidget* GetPlayerMarkerWidget(); // Function Tiger.TigerMapMarkerOverlay.GetPlayerMarkerWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8de0
};

// Class Tiger.TigerMapMarkerWidget
// Size: 0x2b0 (Inherited: 0x280)
struct UTigerMapMarkerWidget : UTigerWidget {
	bool bShouldUseCustomZOrder; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	int32_t CustomZOrder; // 0x284(0x04)
	int32_t MarkerId; // 0x288(0x04)
	bool bIsOnMinimap; // 0x28c(0x01)
	char pad_28D[0x3]; // 0x28d(0x03)
	struct TWeakObjectPtr<struct UTigerMapMarkerProxy> MapMarkerProxy; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
	bool bStartHidden; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	float CurrentOpacity; // 0x2a4(0x04)
	float FadeSpeed; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)

	void Update(); // Function Tiger.TigerMapMarkerWidget.Update // (Native|Public|BlueprintCallable) // @ game+0x12c9fd0
	struct FVector2D ToCanvasSpace(struct FVector2D ZeroToOneSpace); // Function Tiger.TigerMapMarkerWidget.ToCanvasSpace // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9f30
	void SetMapMarkerProxy(struct UTigerMapMarkerProxy* Proxy); // Function Tiger.TigerMapMarkerWidget.SetMapMarkerProxy // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9a60
	void SetIsOnMinimap(bool bInIsOnMinimap); // Function Tiger.TigerMapMarkerWidget.SetIsOnMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9930
	void SetCanvasSize(struct FVector2D ParentCanvasSize); // Function Tiger.TigerMapMarkerWidget.SetCanvasSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12c97b0
	void OnUpdated(); // Function Tiger.TigerMapMarkerWidget.OnUpdated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnIsOnMinimapIsSet(bool bInIsOnMinimap); // Function Tiger.TigerMapMarkerWidget.OnIsOnMinimapIsSet // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	struct UTigerMapGameData* GetMapGameData(); // Function Tiger.TigerMapMarkerWidget.GetMapGameData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8d70
	void FadeIn(float InDurationInSeconds); // Function Tiger.TigerMapMarkerWidget.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8950
	void CollapseUnseenIcons(); // Function Tiger.TigerMapMarkerWidget.CollapseUnseenIcons // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8930
};

// Class Tiger.TigerMapSubMenu
// Size: 0x2b8 (Inherited: 0x2b8)
struct UTigerMapSubMenu : UTigerIngameSubmenuWidget {

	void ShowMatchTimer(); // Function Tiger.TigerMapSubMenu.ShowMatchTimer // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerMapUi
// Size: 0x2a0 (Inherited: 0x280)
struct UTigerMapUi : UTigerWidget {
	struct FName GasOverlayWorldTimeSeconds; // 0x280(0x08)
	struct FName GasOverlayWaveRevealTime; // 0x288(0x08)
	char pad_290[0x10]; // 0x290(0x10)

	void UpdateMapIncenseLine(struct UTigerMapIncenseLine* InMapIncenceLineWidget, struct UCanvasPanel* InMapCanvas, struct UTigerMapMarkerOverlay* InMapMarkerOverlay); // Function Tiger.TigerMapUi.UpdateMapIncenseLine // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca1e0
	void UpdateGasOverlayAndInsenceLine(struct UImage* InGasOverlayImage, struct UTigerMapIncenseLine* InMapIncenceLineWidget, struct UCanvasPanel* InMapCanvas, struct UTigerMapMarkerOverlay* InMapMarkerOverlay); // Function Tiger.TigerMapUi.UpdateGasOverlayAndInsenceLine // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9ff0
	void SetupMasqueradeComponentAndDelegate(); // Function Tiger.TigerMapUi.SetupMasqueradeComponentAndDelegate // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9d30
	void OnMasqueradeStateChanged(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerMapUi.OnMasqueradeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	struct FTigerMapInfo GetMapInfo(); // Function Tiger.TigerMapUi.GetMapInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8da0
};

// Class Tiger.TigerMasqueradeActionResponse
// Size: 0x40 (Inherited: 0x28)
struct UTigerMasqueradeActionResponse : UObject {
	float MinFearScaleDistance; // 0x28(0x04)
	float MinFearScaleValue; // 0x2c(0x04)
	float MinMasqueradeScaleDistance; // 0x30(0x04)
	float MinMasqueradeScaleValue; // 0x34(0x04)
	bool bIsDummy; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)

	enum class ETigerAIMasqueradeState OnReactToPlayerAction(struct ATigerAIController* TigerAIController, struct ATigerPlayer* TigerPlayer, struct FTigerAIPlayerAction PlayerAction, enum class ETigerAIMasqueradeState CurrentState, float FearValue); // Function Tiger.TigerMasqueradeActionResponse.OnReactToPlayerAction // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnJudgeReaction(struct ATigerAiJudgeController* JudgeAIC, struct ATigerPlayer* Player, struct FTigerAIPlayerAction PlayerAction); // Function Tiger.TigerMasqueradeActionResponse.OnJudgeReaction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	bool IsActionDisciplineRelated(enum class ETigerAIPlayerAction Action); // Function Tiger.TigerMasqueradeActionResponse.IsActionDisciplineRelated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9290
	float GetPlayerMasqueradePointsForAction(struct ATigerNPC* InNpc, struct ATigerPlayer* InTigerPlayer, struct FTigerAIPlayerAction InPlayerAction); // Function Tiger.TigerMasqueradeActionResponse.GetPlayerMasqueradePointsForAction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerMasqueradeCoordinator
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerMasqueradeCoordinator : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class Tiger.TigerMasqueradeMarker
// Size: 0x2b8 (Inherited: 0x2b0)
struct UTigerMasqueradeMarker : UTigerMapMarkerWidget {
	float MarkerRadius; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)

	void EventScaleToCurrentMap(); // Function Tiger.TigerMasqueradeMarker.EventScaleToCurrentMap // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerMasqueradeMarkerProxy
// Size: 0x70 (Inherited: 0x68)
struct UTigerMasqueradeMarkerProxy : UTigerMapMarkerProxy {
	bool bIsMarkingFriendlyOrLocalPlayer; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float MarkerRadius; // 0x6c(0x04)
};

// Class Tiger.TigerResourceBarUI
// Size: 0x340 (Inherited: 0x280)
struct UTigerResourceBarUI : UTigerWidget {
	struct FMulticastInlineDelegate OnHealthChanged; // 0x280(0x10)
	struct ATigerCharacter* TigerCharacterOwner; // 0x290(0x08)
	struct TArray<struct UTigerResourceBarSegmentUI*> HealthBarSegments; // 0x298(0x10)
	struct FLinearColor FilledColor; // 0x2a8(0x10)
	struct FLinearColor EmptyColor; // 0x2b8(0x10)
	struct FLinearColor LockedColor; // 0x2c8(0x10)
	int32_t NumberOfSegments; // 0x2d8(0x04)
	bool bShouldShowLostHealth; // 0x2dc(0x01)
	char pad_2DD[0x3]; // 0x2dd(0x03)
	float LostHealthDelay; // 0x2e0(0x04)
	float LostHealthBarSpeed; // 0x2e4(0x04)
	float LostHealthPercentage; // 0x2e8(0x04)
	bool bShouldShowGainedResources; // 0x2ec(0x01)
	char pad_2ED[0x3]; // 0x2ed(0x03)
	float GainedResourceDelay; // 0x2f0(0x04)
	float GainedResourceBarSpeed; // 0x2f4(0x04)
	float GainedResourcePercentage; // 0x2f8(0x04)
	float TheoreticalMaxResources; // 0x2fc(0x04)
	float WidthBetweenSegments; // 0x300(0x04)
	char pad_304[0x3c]; // 0x304(0x3c)

	void TigerDelegateHealthChanged__DelegateSignature(float InNewHealth, float InNewHealthPercentage); // DelegateFunction Tiger.TigerResourceBarUI.TigerDelegateHealthChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void SetOwner(struct ATigerCharacter* TigerCharacter); // Function Tiger.TigerResourceBarUI.SetOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x132cac0
	void ResetCurrentResourceNameIndex(); // Function Tiger.TigerResourceBarUI.ResetCurrentResourceNameIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x132c7c0
	void OnSegmentFilled(float InProgress); // Function Tiger.TigerResourceBarUI.OnSegmentFilled // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnSegmentEmptied(float HorizontalProgress); // Function Tiger.TigerResourceBarUI.OnSegmentEmptied // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnHealthLost(); // Function Tiger.TigerResourceBarUI.OnHealthLost // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	float GetRecentResourcesLost(); // Function Tiger.TigerResourceBarUI.GetRecentResourcesLost // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x132c1c0
	float GetMaxResources(); // Function Tiger.TigerResourceBarUI.GetMaxResources // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x132c180
	struct FLinearColor GetLockedColor(); // Function Tiger.TigerResourceBarUI.GetLockedColor // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x132c140
	struct FLinearColor GetFilledColor(); // Function Tiger.TigerResourceBarUI.GetFilledColor // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x132c100
	struct FLinearColor GetEmptyColor(); // Function Tiger.TigerResourceBarUI.GetEmptyColor // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x132c0c0
	float GetCurrentResources(); // Function Tiger.TigerResourceBarUI.GetCurrentResources // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x132c080
};

// Class Tiger.TigerMasqueradeStatusWidget
// Size: 0x348 (Inherited: 0x340)
struct UTigerMasqueradeStatusWidget : UTigerResourceBarUI {
	char PlayerVisibilityToNPC; // 0x340(0x01)
	bool bIsHunted; // 0x341(0x01)
	char pad_342[0x6]; // 0x342(0x06)

	void OnNpcLostSightOfPlayer(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerMasqueradeStatusWidget.OnNpcLostSightOfPlayer // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnNpcGainedSightOfPlayer(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerMasqueradeStatusWidget.OnNpcGainedSightOfPlayer // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnMasqueradeRestored(); // Function Tiger.TigerMasqueradeStatusWidget.OnMasqueradeRestored // (Native|Event|Public|BlueprintEvent) // @ game+0x12c9380
	void OnMasqueradeBreached(); // Function Tiger.TigerMasqueradeStatusWidget.OnMasqueradeBreached // (Native|Event|Public|BlueprintEvent) // @ game+0x12c9360
	void AddNpcDirectionalIndicator(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerMasqueradeStatusWidget.AddNpcDirectionalIndicator // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerMatchGameMode
// Size: 0x6a0 (Inherited: 0x4b8)
struct ATigerMatchGameMode : ATigerGameMode {
	struct FMulticastInlineDelegate OnPlayerDeathEvent; // 0x4b8(0x10)
	char pad_4C8[0x40]; // 0x4c8(0x40)
	struct UTigerSHPBCoordinator* SHPBCoordinator; // 0x508(0x08)
	struct UTigerHeatmapCollector* HeatmapCollector; // 0x510(0x08)
	struct TArray<struct FTigerReadyToPlayState> ReadyToPlayStates; // 0x518(0x10)
	char pad_528[0x38]; // 0x528(0x38)
	struct UTigerMatchStateComponent* MatchStateManager; // 0x560(0x08)
	struct TArray<struct ATigerHaven*> AllHavens; // 0x568(0x10)
	char pad_578[0x128]; // 0x578(0x128)

	void StartReturnToElysiumSequence(struct ATigerPlayerController* PlayerController); // Function Tiger.TigerMatchGameMode.StartReturnToElysiumSequence // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void ShowEndScreenOnClients(); // Function Tiger.TigerMatchGameMode.ShowEndScreenOnClients // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9f10
	void ShowDeathScreenOnClient(struct ATigerPlayerController* InTigerPlayerController, struct FString InInstigatorName, enum class ETigerKillerType InKillerType); // Function Tiger.TigerMatchGameMode.ShowDeathScreenOnClient // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9de0
	void ReportMatchResults(struct FDelegate Delegate); // Function Tiger.TigerMatchGameMode.ReportMatchResults // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12c94c0
	void PlayerLeavingMatch(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerMatchGameMode.PlayerLeavingMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x12c93a0
	void OnRegisterPlayerPlacement__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerMatchGameMode.OnRegisterPlayerPlacement__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPlayerDeathEvent__DelegateSignature(struct ATigerPlayer* DeadPlayer, struct ATigerPlayer* InstigatorPlayer); // DelegateFunction Tiger.TigerMatchGameMode.OnPlayerDeathEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnMatchStatsReceivedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameMode.OnMatchStatsReceivedDelegate__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	void OnBalanceModeSet(); // Function Tiger.TigerMatchGameMode.OnBalanceModeSet // (Final|Native|Public) // @ game+0x12c9340
	struct ATigerPlayer* GetWinningPlayer(); // Function Tiger.TigerMatchGameMode.GetWinningPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9200
	struct FTigerMatchStats GenerateMatchStatsForPlayer(struct ATigerPlayerController* Player); // Function Tiger.TigerMatchGameMode.GenerateMatchStatsForPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c89d0
};

// Class Tiger.TigerMatchGameModeSettings
// Size: 0x1c8 (Inherited: 0x38)
struct UTigerMatchGameModeSettings : USharkLocalDeveloperSettings {
	struct TSoftObjectPtr<struct UDataTable> RangedWeaponsDatatable; // 0x38(0x28)
	struct TSoftObjectPtr<struct UTigerBloodTrackPassiveList> BloodTrackPassiveList; // 0x60(0x28)
	float HighPotenceBloodTransferTime; // 0x88(0x04)
	int32_t SpawnCountdownTime; // 0x8c(0x04)
	int32_t MatchStartTimeOutSeconds; // 0x90(0x04)
	int32_t PlayerConnectionTimeOutSeconds; // 0x94(0x04)
	int32_t PlayerConnectionMinimumWaitTimeSeconds; // 0x98(0x04)
	int32_t SecondsOfNetworkInactivityAllowedBeforeForcingReady; // 0x9c(0x04)
	int32_t MinPlayersToStartMatch; // 0xa0(0x04)
	bool bEnableSpawnCountdown; // 0xa4(0x01)
	bool bEnableWinningCondition; // 0xa5(0x01)
	bool bRespawnPlayerOnDeath; // 0xa6(0x01)
	bool bReturnPlayersToElysiumOnFinish; // 0xa7(0x01)
	bool bRebootServerOnFinish; // 0xa8(0x01)
	bool bEnableAssaults; // 0xa9(0x01)
	bool bEnableGroupFill; // 0xaa(0x01)
	bool bLogTickRate; // 0xab(0x01)
	bool bAutoSpectateOnDeath; // 0xac(0x01)
	bool bAllowSpectateNonTeamMembersInGroupMode; // 0xad(0x01)
	char pad_AE[0x2]; // 0xae(0x02)
	struct FTigerEntityCheckpointsSettings EntityCheckpointsSettings[0x2]; // 0xb0(0x20)
	struct FTigerRatSpawnpointSettings RatSpawnpointSettings[0x2]; // 0xd0(0x10)
	struct FTigerSHPBSettings SHPBSettings[0x2]; // 0xe0(0x38)
	struct FTigerHavenCapturePointSettings CapturePointSettings[0x2]; // 0x118(0x40)
	struct FTigerBattleRoyalePlayerSpawnSettings BattleRoyalePlayerSpawnSettings; // 0x158(0x08)
	struct FTigerPreSpawnSettings PreSpawnSettings; // 0x160(0x28)
	struct FTigerHighTierLootSettings HighTierLootSettings; // 0x188(0x30)
	float DownedRegenDuration[0x2]; // 0x1b8(0x08)
	int32_t AssistDamageTreshold; // 0x1c0(0x04)
	float AssistDuration; // 0x1c4(0x04)

	bool ShouldReturnPlayersToElysiumOnFinish(); // Function Tiger.TigerMatchGameModeSettings.ShouldReturnPlayersToElysiumOnFinish // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c9d80
	bool ShouldRebootServerOnFinish(); // Function Tiger.TigerMatchGameModeSettings.ShouldRebootServerOnFinish // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c9d50
	struct FTigerSHPBSettings GetSHPBSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetSHPBSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c9110
	struct FTigerRatSpawnpointSettings GetRatSpawnpointSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetRatSpawnpointSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c9070
	struct UDataTable* GetRangedWeaponsDatatable(); // Function Tiger.TigerMatchGameModeSettings.GetRangedWeaponsDatatable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c9040
	struct FTigerPreSpawnSettings GetPreSpawnSettings(); // Function Tiger.TigerMatchGameModeSettings.GetPreSpawnSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c9000
	struct FTigerEntityCheckpointsSettings GetEntityCheckpointSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetEntityCheckpointSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c8cc0
	float GetDownedRegenDuration(enum class EMatchBalanceMode InBalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetDownedRegenDuration // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c8c00
	struct FTigerHavenCapturePointSettings GetCapturePointSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetCapturePointSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c8b30
	struct FTigerBattleRoyalePlayerSpawnSettings GetBattleRoyalePlayerSpawnSettings(); // Function Tiger.TigerMatchGameModeSettings.GetBattleRoyalePlayerSpawnSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c8b00
};

// Class Tiger.TigerMatchGameSession
// Size: 0x298 (Inherited: 0x298)
struct ATigerMatchGameSession : ATigerGameSession {
};

// Class Tiger.TigerMatchGameState
// Size: 0x418 (Inherited: 0x320)
struct ATigerMatchGameState : ATigerGameState {
	struct FMulticastInlineDelegate OnPreMatchStateChanged; // 0x320(0x10)
	struct FMulticastInlineDelegate OnMatchStateChanged; // 0x330(0x10)
	struct FMulticastInlineDelegate OnNumberOfPlayersAttachedToBloodVeinUpdated; // 0x340(0x10)
	struct FMulticastInlineDelegate HighTierLootLocationsChanged; // 0x350(0x10)
	float NextWaveRevealGameTime; // 0x360(0x04)
	float MatchTimePassed; // 0x364(0x04)
	float ReplicatedMatchTimePassed; // 0x368(0x04)
	int32_t NumPlayersAlive; // 0x36c(0x04)
	int32_t NumGroupsAlive; // 0x370(0x04)
	int32_t GroupSize; // 0x374(0x04)
	int32_t NumPlayersConnected; // 0x378(0x04)
	int32_t RandomizedWeatherValue; // 0x37c(0x04)
	struct FTigerPreMatchStateInfo PreMatchState; // 0x380(0x08)
	enum class ETigerMatchState TigerMatchState; // 0x388(0x01)
	enum class EMatchBalanceMode BalanceMode; // 0x389(0x01)
	char pad_38A[0x6]; // 0x38a(0x06)
	struct ATigerWorldMarker* EntityCheckpointMarkerClass; // 0x390(0x08)
	char NumberOfPawnsAttachedToBloodVein; // 0x398(0x01)
	char pad_399[0x7]; // 0x399(0x07)
	struct FMulticastInlineDelegate OnSpawnMechanicReceived; // 0x3a0(0x10)
	struct UTigerSpawnMechanic* SpawnMechanicClass; // 0x3b0(0x08)
	struct TArray<SoftClassProperty> ActiveHighTierLootGroups; // 0x3b8(0x10)
	struct FText JudgeSlainText; // 0x3c8(0x18)
	struct TArray<struct FVector2D> EntityCheckpointLocations; // 0x3e0(0x10)
	struct TArray<struct ATigerWorldMarker*> EntityCheckpointMarkers; // 0x3f0(0x10)
	char pad_400[0x18]; // 0x400(0x18)

	void TigerOnSpawnMechanicReceived__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameState.TigerOnSpawnMechanicReceived__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void SetMatchState(enum class ETigerMatchState MatchState); // Function Tiger.TigerMatchGameState.SetMatchState // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce4b0
	void OnRep_TigerMatchState(enum class ETigerMatchState OldMatchState); // Function Tiger.TigerMatchGameState.OnRep_TigerMatchState // (Final|Native|Private) // @ game+0x12cdfa0
	void OnRep_TigerBalanceMode(enum class EMatchBalanceMode InOldBalanceMode); // Function Tiger.TigerMatchGameState.OnRep_TigerBalanceMode // (Final|Native|Private) // @ game+0x12cdf20
	void OnRep_SpawnMechanicClass(); // Function Tiger.TigerMatchGameState.OnRep_SpawnMechanicClass // (Final|Native|Private) // @ game+0x12cdf00
	void OnRep_EntityCheckpointLocations(); // Function Tiger.TigerMatchGameState.OnRep_EntityCheckpointLocations // (Final|Native|Private) // @ game+0x12cdee0
	void OnRep_BloodVeinAttachedPlayers(); // Function Tiger.TigerMatchGameState.OnRep_BloodVeinAttachedPlayers // (Final|Native|Private) // @ game+0x12cdec0
	void OnPreMatchStateChanged__DelegateSignature(struct FTigerPreMatchStateInfo PreMatchState); // DelegateFunction Tiger.TigerMatchGameState.OnPreMatchStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnNumberOfPlayersAttachedToBloodVeinUpdated__DelegateSignature(int32_t NumberOfPlayersAttached); // DelegateFunction Tiger.TigerMatchGameState.OnNumberOfPlayersAttachedToBloodVeinUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnMatchStateChanged__DelegateSignature(enum class ETigerMatchState OldState, enum class ETigerMatchState NewState); // DelegateFunction Tiger.TigerMatchGameState.OnMatchStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnHighTierLootLocationsChanged__DelegateSignature(struct TArray<SoftClassProperty> InActiveHighTierLootGroups); // DelegateFunction Tiger.TigerMatchGameState.OnHighTierLootLocationsChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void Multicast_UpdatePreMatchState(struct FTigerPreMatchStateInfo NewPreMatchState); // Function Tiger.TigerMatchGameState.Multicast_UpdatePreMatchState // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12cdc80
	void Multicast_SetEnitityCheckpointLocations(struct TArray<struct FVector2D> CheckpointLocations); // Function Tiger.TigerMatchGameState.Multicast_SetEnitityCheckpointLocations // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12cdb30
	void Multicast_SetBloodVeinSpeedMultipliers(float InMainBranchSpeed, float InBranchSpeed); // Function Tiger.TigerMatchGameState.Multicast_SetBloodVeinSpeedMultipliers // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12cda60
	void Multicast_JudgeSpawned(); // Function Tiger.TigerMatchGameState.Multicast_JudgeSpawned // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12cd840
	void Multicast_JudgeSlain(struct APlayerState* InInstigatorPlayer); // Function Tiger.TigerMatchGameState.Multicast_JudgeSlain // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12cd7b0
	void HandleOnRestartPlayer(struct AController* NewPlayer); // Function Tiger.TigerMatchGameState.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x12cd4d0
	enum class ETigerMatchState GetMatchState(); // Function Tiger.TigerMatchGameState.GetMatchState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd3d0
	bool GetClosestLocationOnNextWaveWall(struct FVector2D Location, struct FVector2D ClosestLocation, bool bIsOutsidePlayableArea); // Function Tiger.TigerMatchGameState.GetClosestLocationOnNextWaveWall // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12cd240
	void Client_ChangeNumPlayersAlive(int32_t NewNumPlayersAlive, int32_t NewNumPlayersConnected); // Function Tiger.TigerMatchGameState.Client_ChangeNumPlayersAlive // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12ccef0
};

// Class Tiger.TigerMatchHUD
// Size: 0x538 (Inherited: 0x3f8)
struct ATigerMatchHUD : ATigerHUD {
	struct UTigerPromptCollectionWidget* PromptCollection; // 0x3f8(0x08)
	struct ATigerMusicManager* MusicManager; // 0x400(0x08)
	struct UTigerCompassUI* CompassUI; // 0x408(0x08)
	struct UTigerMasqueradeStatusWidget* MasqueradeStatus; // 0x410(0x08)
	struct UTigerWidget* ChallengeList; // 0x418(0x08)
	struct UTigerWidget* BloodResonanceUi; // 0x420(0x08)
	struct UTigerRevivingStatusUI* RevivingStatusUI; // 0x428(0x08)
	struct UTigerConsumableWheelWidget* ConsumableWheel; // 0x430(0x08)
	struct UTigerWidget* ClimbPrompt; // 0x438(0x08)
	struct UTigerWidget* LevelOverlay; // 0x440(0x08)
	struct UTigerWidget* YouAreDownedPrompt; // 0x448(0x08)
	struct UTigerWidget* Minimap; // 0x450(0x08)
	struct UTigerWidget* StatusMessage; // 0x458(0x08)
	struct UTigerWidget* InputTray; // 0x460(0x08)
	struct UTigerIngameMenuWidget* SpectatorIngameMenu; // 0x468(0x08)
	struct FMulticastInlineDelegate OnDropItemAction; // 0x470(0x10)
	struct UTigerDisciplinesUi* Disciplines; // 0x480(0x08)
	struct UTigerCapturePointProgressUI* CapturePointProgressUI; // 0x488(0x08)
	struct UTigerWeaponAmmoWidget* WeaponAmmo; // 0x490(0x08)
	struct UTigerPingWheelWidget* PingWheelWidget; // 0x498(0x08)
	struct UTigerWidget* Watermark; // 0x4a0(0x08)
	struct UTigerSpawnPointSelectionUi* SpawnSelectionUi; // 0x4a8(0x08)
	struct UTigerArchetypeSelectPragueUI* ArchetypeSelectUi; // 0x4b0(0x08)
	struct UTigerWidget* PreMatchMapWidget; // 0x4b8(0x08)
	struct UTigerPingSetupAsset* PingSetup; // 0x4c0(0x08)
	struct UTigerDeathScreen* DeathScreenClass; // 0x4c8(0x08)
	struct UTigerDeathScreen* DeathScreen; // 0x4d0(0x08)
	struct UTigerInventoryUI* InventoryUi; // 0x4d8(0x08)
	struct UTigerMapSubMenu* MapUi; // 0x4e0(0x08)
	struct UTigerInputMenuUI* SettingsMenuUi; // 0x4e8(0x08)
	struct UTigerWidget* HealthBar; // 0x4f0(0x08)
	struct TArray<SoftClassProperty> PreMatchUiClasses; // 0x4f8(0x10)
	char pad_508[0x10]; // 0x508(0x10)
	struct TArray<struct UTigerWidget*> PreMatchWidgets; // 0x518(0x10)
	struct UTigerPreMatchPaperDollComponent* PreMatchPaperDollComponent; // 0x528(0x08)
	char pad_530[0x8]; // 0x530(0x08)

	void ToggleSpectatorMap(); // Function Tiger.TigerMatchHUD.ToggleSpectatorMap // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce870
	void ToggleSettingsMenu(); // Function Tiger.TigerMatchHUD.ToggleSettingsMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce850
	void ToggleMap(); // Function Tiger.TigerMatchHUD.ToggleMap // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce830
	void ToggleInventory(); // Function Tiger.TigerMatchHUD.ToggleInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce810
	void ToggleInputMenu(); // Function Tiger.TigerMatchHUD.ToggleInputMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce7f0
	void ToggleCharacterMenu(); // Function Tiger.TigerMatchHUD.ToggleCharacterMenu // (Final|Native|Public|BlueprintCallable) // @ game+0xb45020
	void ShowIntroPrompt(float InDelayAfterMatchStart); // Function Tiger.TigerMatchHUD.ShowIntroPrompt // (Final|Native|Protected|BlueprintCallable) // @ game+0x12ce770
	void ShowInteractionPrompt(struct UTigerSimpleTextPrompt* Prompt); // Function Tiger.TigerMatchHUD.ShowInteractionPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce6e0
	void ShowDeathScreen(int32_t InPlayerPlacement, int32_t InNumGroupsAtStart, struct FString InInstigatorName, enum class ETigerKillerType InKillerType, bool bInReturnToElysiumOnClose); // Function Tiger.TigerMatchHUD.ShowDeathScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce530
	void ReleasePreMatchAssets(); // Function Tiger.TigerMatchHUD.ReleasePreMatchAssets // (Final|Native|Protected) // @ game+0x12ce060
	void RaiseOnDropItemAction(); // Function Tiger.TigerMatchHUD.RaiseOnDropItemAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce040
	void PreparePreMatchMapForMatchStart(float InMatchStartTimeStamp); // Function Tiger.TigerMatchHUD.PreparePreMatchMapForMatchStart // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void PreMatchStateChanged(struct FTigerPreMatchStateInfo InNewPreMatchState); // Function Tiger.TigerMatchHUD.PreMatchStateChanged // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OpenPreMatchMap(float InPreMatchMapEndTimeStamp); // Function Tiger.TigerMatchHUD.OpenPreMatchMap // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OpenDeathScreen(); // Function Tiger.TigerMatchHUD.OpenDeathScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce020
	void OnTookDamage(struct FTigerDamageSource DamageSource); // Function Tiger.TigerMatchHUD.OnTookDamage // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnStartMatchAssetsLoaded(); // Function Tiger.TigerMatchHUD.OnStartMatchAssetsLoaded // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnPreMatchWidgetClassesLoaded(); // Function Tiger.TigerMatchHUD.OnPreMatchWidgetClassesLoaded // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnPersistentPlayerStateInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerMatchHUD.OnPersistentPlayerStateInitialized // (Final|Native|Protected) // @ game+0x12cde30
	void OnEndedSpectator(); // Function Tiger.TigerMatchHUD.OnEndedSpectator // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnBecameSpectator(); // Function Tiger.TigerMatchHUD.OnBecameSpectator // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsPreSpawnBackgroundOpen(); // Function Tiger.TigerMatchHUD.IsPreSpawnBackgroundOpen // (Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
	bool IsPreMatchAssetsLoaded(); // Function Tiger.TigerMatchHUD.IsPreMatchAssetsLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd6d0
	bool IsAllowedToOpenMainMenu(); // Function Tiger.TigerMatchHUD.IsAllowedToOpenMainMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd620
	void HideInteractionPrompt(struct UTigerSimpleTextPrompt* Prompt); // Function Tiger.TigerMatchHUD.HideInteractionPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x12cd590
	struct UTigerWidget* GetPreSpawnWidget(struct UTigerWidget* InCppClass); // Function Tiger.TigerMatchHUD.GetPreSpawnWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12cd400
	struct UTigerMapSubMenu* GetMapUi(); // Function Tiger.TigerMatchHUD.GetMapUi // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd3a0
	struct UTigerInventoryUI* GetInventoryUI(); // Function Tiger.TigerMatchHUD.GetInventoryUI // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd370
	void EndPreMatch(); // Function Tiger.TigerMatchHUD.EndPreMatch // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void CloseDeathScreen(); // Function Tiger.TigerMatchHUD.CloseDeathScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x12cd220
};

// Class Tiger.TigerMatchStateComponent
// Size: 0x100 (Inherited: 0xb0)
struct UTigerMatchStateComponent : UActorComponent {
	struct ATigerMatchGameMode* MatchGameMode; // 0xb0(0x08)
	struct ATigerMatchGameState* MatchGameState; // 0xb8(0x08)
	char pad_C0[0x40]; // 0xc0(0x40)
};

// Class Tiger.TigerWeaponCrosshairWidget
// Size: 0x2b8 (Inherited: 0x280)
struct UTigerWeaponCrosshairWidget : UTigerWidget {
	float WeaponSpread; // 0x280(0x04)
	struct FVector PlayerMovementVelocity; // 0x284(0x0c)
	bool bIsAiming; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	float PreviewWeaponSpread; // 0x294(0x04)
	struct TArray<struct FTigerWeaponCrosshairSlot> CrosshairImages; // 0x298(0x10)
	struct TArray<struct FTigerWeaponScalingCrosshairSlot> CrosshairScalingImages; // 0x2a8(0x10)

	void OnWeaponFired(); // Function Tiger.TigerWeaponCrosshairWidget.OnWeaponFired // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	float GetScreenSpaceSpread(float InFov); // Function Tiger.TigerWeaponCrosshairWidget.GetScreenSpaceSpread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136d290
};

// Class Tiger.TigerMeleeCrosshairWidget
// Size: 0x2c8 (Inherited: 0x2b8)
struct UTigerMeleeCrosshairWidget : UTigerWeaponCrosshairWidget {
	struct UTigerMeleeWeaponComponent* OwnerMelee; // 0x2b8(0x08)
	struct UImage* CrosshairImage; // 0x2c0(0x08)
};

// Class Tiger.TigerMeleeWeaponComponent
// Size: 0x2c8 (Inherited: 0xb0)
struct UTigerMeleeWeaponComponent : UActorComponent {
	struct FMulticastInlineDelegate OnAttack; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnQuickAttack; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnAttackHit; // 0xd0(0x10)
	char pad_E0[0x10]; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnSuccessfulBlock; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnHeavyAttackChargeBegin; // 0x100(0x10)
	struct FMulticastInlineDelegate OnHeavyAttackChargeEnd; // 0x110(0x10)
	float DebugDrawTime; // 0x120(0x04)
	char pad_124[0x24]; // 0x124(0x24)
	struct UTigerSwingCollisionData* SwingCollisionData; // 0x148(0x08)
	struct FMulticastInlineDelegate OnHeavyAttackReachedMinimumCharge; // 0x150(0x10)
	struct FMulticastInlineDelegate OnMeleeWeaponEquipped; // 0x160(0x10)
	bool bHeavyAttackEnabled; // 0x170(0x01)
	bool bBlockingEnabled; // 0x171(0x01)
	bool bAttackingViaQuickAttackEnabled; // 0x172(0x01)
	struct FTigerMeleeWeaponAttackIdentifier CurrentAttackIdentifier; // 0x173(0x02)
	char pad_175[0xb]; // 0x175(0x0b)
	struct UDataTable* MeleeAttacksDatabase; // 0x180(0x08)
	struct UTigerMeleeWeapon* EquippedWeaponType; // 0x188(0x08)
	struct UTigerMeleeAimAssistBehavior* CurrentAimAssistBehavior; // 0x190(0x08)
	float BlockCooldown; // 0x198(0x04)
	float MaxBlockAttackAngle; // 0x19c(0x04)
	float AttackQueueCooldown; // 0x1a0(0x04)
	float AirAttackRequiredDistanceToGround; // 0x1a4(0x04)
	float HitEffectRadiusOffset; // 0x1a8(0x04)
	float HitEffectHeightOffset; // 0x1ac(0x04)
	float RootMotionAnimationHeightThreshold; // 0x1b0(0x04)
	char pad_1B4[0x4]; // 0x1b4(0x04)
	struct UTigerBuff* BlockBuffOnAttacker; // 0x1b8(0x08)
	float DiminishingReturnCooldown; // 0x1c0(0x04)
	float DiminishingReturnMultiplierRegenerationRate; // 0x1c4(0x04)
	char pad_1C8[0x38]; // 0x1c8(0x38)
	bool bCanMoveDuringMeleeAttacks; // 0x200(0x01)
	char pad_201[0xf]; // 0x201(0x0f)
	struct TArray<struct ATigerCharacter*> HitFeedbackTargets; // 0x210(0x10)
	char pad_220[0x68]; // 0x220(0x68)
	struct TArray<struct AActor*> HitCharactersOnCurrentSwing; // 0x288(0x10)
	struct TArray<struct AActor*> HitWorldStaticsOnCurrentSwing; // 0x298(0x10)
	char pad_2A8[0x8]; // 0x2a8(0x08)
	struct UAnimMontage* CurrentSwingAnimation; // 0x2b0(0x08)
	struct AActor* LockOnTarget; // 0x2b8(0x08)
	float MaxLockOnDistance; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)

	void TigerOnMeleeWeaponEquipped__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerOnMeleeWeaponEquipped__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerHeavyAttackChargeEnd__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerHeavyAttackChargeEnd__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerHeavyAttackChargeBegin__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerHeavyAttackChargeBegin__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateSwingState__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateSwingState__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateSuccessfullyBlocked__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateSuccessfullyBlocked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateQuickAttacked__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateQuickAttacked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateHeavyAttackReachedMinimumCharge__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateHeavyAttackReachedMinimumCharge__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateAttackHit__DelegateSignature(enum class ETigerWeaponMeleeAttackType InAttackType); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateAttackHit__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerDelegateAttacked__DelegateSignature(bool bWasHeavyAttack); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateAttacked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void Server_SwingWeapon(struct FTigerMeleeAttackNetData InAttackIdentifier, bool bInDisabledRootMotion); // Function Tiger.TigerMeleeWeaponComponent.Server_SwingWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12ce390
	void Server_SetClientSideHitDetectionMelee(bool bEnableClientSideHits); // Function Tiger.TigerMeleeWeaponComponent.Server_SetClientSideHitDetectionMelee // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12ce2d0
	void Server_OnSuccessfulClientAttack(struct TArray<struct FTigerCharacterClientHit> CharacterHits); // Function Tiger.TigerMeleeWeaponComponent.Server_OnSuccessfulClientAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12ce210
	void Server_OnDeflectedAttack(struct FVector_NetQuantize DeflectLocation, struct ATigerCharacter* DeflectingChar); // Function Tiger.TigerMeleeWeaponComponent.Server_OnDeflectedAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12ce110
	void Server_DisableRecoveryRootMotion(float InDisableTimeInAnimation); // Function Tiger.TigerMeleeWeaponComponent.Server_DisableRecoveryRootMotion // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x12ce080
	void OnMontageStartedDuringSwing(struct UAnimMontage* Montage); // Function Tiger.TigerMeleeWeaponComponent.OnMontageStartedDuringSwing // (Final|Native|Private) // @ game+0x12cdda0
	void OnMontageStartedDuringBlockStance(struct UAnimMontage* Montage); // Function Tiger.TigerMeleeWeaponComponent.OnMontageStartedDuringBlockStance // (Final|Native|Private) // @ game+0x12cdd10
	void Multicast_StopBlocking(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_StopBlocking // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12cdc60
	void Multicast_StartHeavySwing(bool bDisabledRootMotion); // Function Tiger.TigerMeleeWeaponComponent.Multicast_StartHeavySwing // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12cdbd0
	void Multicast_StartBlocking(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_StartBlocking // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12c9380
	void Multicast_SetClientSideHitDetectionMelee(bool bEnableClientSideHits); // Function Tiger.TigerMeleeWeaponComponent.Multicast_SetClientSideHitDetectionMelee // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1263aa0
	void Multicast_OnSwingWeapon(struct FTigerMeleeAttackNetData AttackIdentifier, bool bDisabledRootMotion); // Function Tiger.TigerMeleeWeaponComponent.Multicast_OnSwingWeapon // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12cd970
	void Multicast_OnAttackSuccessful(struct TArray<struct FTigerCharacterServerHit> InCharacterHits, enum class ETigerWeaponMeleeAttackType InAttackType); // Function Tiger.TigerMeleeWeaponComponent.Multicast_OnAttackSuccessful // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12cd880
	void Multicast_OnAttackBlocked(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_OnAttackBlocked // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12cd860
	void Multicast_DisableRecoveryRootMotion(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_DisableRecoveryRootMotion // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x12cd790
	void Multicast_DeflectAttack(struct ATigerCharacter* Attacker); // Function Tiger.TigerMeleeWeaponComponent.Multicast_DeflectAttack // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x12cd700
	void Multicast_AbortCurrentAttack(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_AbortCurrentAttack // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x127eca0
	bool IsInMeleeSwing(); // Function Tiger.TigerMeleeWeaponComponent.IsInMeleeSwing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd6a0
	bool IsChargingHeavyAttack(); // Function Tiger.TigerMeleeWeaponComponent.IsChargingHeavyAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd680
	bool IsBlocking(); // Function Tiger.TigerMeleeWeaponComponent.IsBlocking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd650
	bool HasLockOnTarget(); // Function Tiger.TigerMeleeWeaponComponent.HasLockOnTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd560
	float GetTimeSinceLastAttack(); // Function Tiger.TigerMeleeWeaponComponent.GetTimeSinceLastAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12cd4a0
	void Client_OnHit(struct FTigerCharacterServerHit ServerHit); // Function Tiger.TigerMeleeWeaponComponent.Client_OnHit // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12cd170
	void Client_OnAttackBlocked(struct FVector_NetQuantize BlockedAtLocation, struct UTigerMeleeWeaponComponent* BlockingMelee); // Function Tiger.TigerMeleeWeaponComponent.Client_OnAttackBlocked // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12cd0a0
	void Client_DeflectAttack(); // Function Tiger.TigerMeleeWeaponComponent.Client_DeflectAttack // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12cd080
	void Client_Debug_ShowServerSwingLocation(struct FVector Position, struct FQuat Rotation); // Function Tiger.TigerMeleeWeaponComponent.Client_Debug_ShowServerSwingLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x12ccfc0
	void Client_AbortCurrentAttack(); // Function Tiger.TigerMeleeWeaponComponent.Client_AbortCurrentAttack // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12c9360
	void BroadcastHeavyAttackReleaseCallback(); // Function Tiger.TigerMeleeWeaponComponent.BroadcastHeavyAttackReleaseCallback // (Final|Native|Public) // @ game+0x12cced0
};

// Class Tiger.TigerSwingCollisionData
// Size: 0x80 (Inherited: 0x30)
struct UTigerSwingCollisionData : UDataAsset {
	struct TMap<struct FName, struct FTigerSwingCollisionInfo> SwingCollisionInfos; // 0x30(0x50)
};

// Class Tiger.TigerMeleeAimAssistBehavior
// Size: 0x78 (Inherited: 0x28)
struct UTigerMeleeAimAssistBehavior : UObject {
	float AimAssistMinRadius; // 0x28(0x04)
	float AimAssistMaxRadius; // 0x2c(0x04)
	float MaxTargetHeightDiff; // 0x30(0x04)
	float DebugDrawTime; // 0x34(0x04)
	bool bPredictCandidateLocationsBeforeEvaluation; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct ATigerCharacter* TigerOwner; // 0x40(0x08)
	struct UTigerMeleeWeapon* EquippedWeapon; // 0x48(0x08)
	struct FVector TigerOwnerLocation; // 0x50(0x0c)
	struct TWeakObjectPtr<struct ATigerCharacter> FinalTargetCharacter; // 0x5c(0x08)
	struct FTigerMeleeWeaponAttackIdentifier FinalAttackIdentifier; // 0x64(0x02)
	char pad_66[0x2]; // 0x66(0x02)
	float AimAssistMinRadiusSquared; // 0x68(0x04)
	float AimAssistMaxRadiusSquared; // 0x6c(0x04)
	float AimAssistTravelTime; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)

	void UpdateAimTarget(struct TArray<struct FTigerMeleeAimAssistCandidate> InCandidates, struct FVector InCameraForward, bool bInIsInAir, bool bInIsQuickAttack, struct FTigerMeleeWeaponAttackIdentifier InPreviousAttackIdentifier, float InSecondsSincePreviousAttack, struct ATigerCharacter* OutFinalTarget, struct FTigerMeleeWeaponAttackIdentifier OutAttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.UpdateAimTarget // (Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void ShowDebugValue(struct FTigerMeleeAimAssistCandidate Candidate, struct FString DebugLabel, struct FString DebugValue); // Function Tiger.TigerMeleeAimAssistBehavior.ShowDebugValue // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x12d2690
	void ShowDebugAttackIdentifier(struct FTigerMeleeAimAssistCandidate Candidate, struct FString DebugLabel, struct FTigerMeleeWeaponAttackIdentifier AttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.ShowDebugAttackIdentifier // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2530
	bool ShouldRotatePlayer(); // Function Tiger.TigerMeleeAimAssistBehavior.ShouldRotatePlayer // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12d2500
	void PredictMultipleCharacterLocations(float PredictionTime, struct TArray<struct FTigerMeleeAimAssistCandidate> Candidates); // Function Tiger.TigerMeleeAimAssistBehavior.PredictMultipleCharacterLocations // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2410
	void PredictCharacterLocation(float PredictionTime, struct FTigerMeleeAimAssistCandidate Candidate); // Function Tiger.TigerMeleeAimAssistBehavior.PredictCharacterLocation // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x12d2320
	struct FVector PredictAimAssistTargetLocation(struct ATigerCharacter* AimTargetChar, float PredictionTime); // Function Tiger.TigerMeleeAimAssistBehavior.PredictAimAssistTargetLocation // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x12d2230
	void OnStartMeleeAttack(struct FVector InTargetLocationOrDirection, bool bIsLocation, struct FTigerMeleeWeaponAttackIdentifier InAttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.OnStartMeleeAttack // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x12d20d0
	void OnAnimNotifyMelee(struct FName MeleeEventName); // Function Tiger.TigerMeleeAimAssistBehavior.OnAnimNotifyMelee // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void MoveCharacterToTargetLocation(struct FVector TargetLocation, float TravelTime); // Function Tiger.TigerMeleeAimAssistBehavior.MoveCharacterToTargetLocation // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x12d1ed0
	struct FTigerMeleeAimAssistData GetAimAssistData(struct FTigerMeleeWeaponAttackIdentifier AttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.GetAimAssistData // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d1ab0
	struct FTigerMeleeAimAssistCandidate CreateCandidate(struct ATigerCharacter* AimTargetChar, struct FVector PredictedTargetLocation, struct FVector CameraForwardDirection, struct FVector CameraLocation, float HalfFOV); // Function Tiger.TigerMeleeAimAssistBehavior.CreateCandidate // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x12d18a0
	bool CanQueueMeleeAttack(); // Function Tiger.TigerMeleeAimAssistBehavior.CanQueueMeleeAttack // (Native|Event|Public|BlueprintEvent) // @ game+0x12d1870
	void AddRelativeImpulse(struct FVector ImpulseDirection, float ImpulseStrength); // Function Tiger.TigerMeleeAimAssistBehavior.AddRelativeImpulse // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d1790
};

// Class Tiger.TigerMeleeWeaponTrailConfig
// Size: 0x48 (Inherited: 0x28)
struct UTigerMeleeWeaponTrailConfig : UObject {
	struct TArray<struct FScalarParameterValue> ScalarParameters; // 0x28(0x10)
	struct TArray<struct FVectorParameterValue> VectorParameters; // 0x38(0x10)
};

// Class Tiger.TigerWeapon
// Size: 0xa8 (Inherited: 0x28)
struct UTigerWeapon : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UMaterialInterface* RarityMaterial; // 0x30(0x08)
	enum class ETigerItemRarity Rarity; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct USkeletalMesh* SkeletalMesh; // 0x40(0x08)
	struct USkeletalMesh* OffhandSkeletalMesh; // 0x48(0x08)
	struct UAnimInstance* AnimClass; // 0x50(0x08)
	struct UTigerWeaponCrosshairWidget* Crosshair; // 0x58(0x08)
	struct UTexture2D* HUDIcon; // 0x60(0x08)
	struct UCurveFloat* RarityDamageMultiplierCurve; // 0x68(0x08)
	struct FName WeaponUnequipAnimation; // 0x70(0x08)
	struct FName WeaponEquipAnimation; // 0x78(0x08)
	struct FName PrimaryAttachPoint; // 0x80(0x08)
	struct FName SecondaryAttachPoint; // 0x88(0x08)
	float FearValueMultiplier; // 0x90(0x04)
	float FearDistanceMultiplier; // 0x94(0x04)
	bool bIsDualWeapon; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
	uint64_t PersistentTelemetryID; // 0xa0(0x08)
};

// Class Tiger.TigerMeleeWeapon
// Size: 0x198 (Inherited: 0xa8)
struct UTigerMeleeWeapon : UTigerWeapon {
	struct UCurveFloat* HorizontalFlinchCurve; // 0xa8(0x08)
	struct UCurveFloat* VerticalFlinchCurve; // 0xb0(0x08)
	float DamageMultiplier; // 0xb8(0x04)
	float RootMotionAttacksStopDistance; // 0xbc(0x04)
	float RootMotionAttacksStopDistanceAboveOrBelow; // 0xc0(0x04)
	bool bIsUnarmedWeapon; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	struct UTigerMeleeAimAssistBehavior* AimAssistBehavior; // 0xc8(0x08)
	float AimAssistPredictionTime; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct TArray<struct FTigerMeleeAttack> Attacks; // 0xd8(0x10)
	struct FName HeavyAttackChargeUpMontageName; // 0xe8(0x08)
	enum class ETigerDisciplinesEnum WeaponAbility; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct UAkAudioEvent* HitAkEvent; // 0xf8(0x08)
	struct UAkAudioEvent* HeavyHitAkEvent; // 0x100(0x08)
	struct UParticleSystem* HitEffect; // 0x108(0x08)
	struct AActor* HitEffectClass; // 0x110(0x08)
	struct UForceFeedbackEffect* TargetHitForceFeedback; // 0x118(0x08)
	struct UForceFeedbackEffect* AttackBlockedForceFeedback; // 0x120(0x08)
	struct UForceFeedbackEffect* SuccesfullyBlockedForceFeedback; // 0x128(0x08)
	struct FName BlockBlendSpaceName; // 0x130(0x08)
	struct UAkAudioEvent* BlockStanceActivatedAkEvent; // 0x138(0x08)
	float StartBlockingTransitionTime; // 0x140(0x04)
	float BlockMovementMultiplier; // 0x144(0x04)
	float BlockStunTime; // 0x148(0x04)
	float DiminishingReturnBlockStunMultiplierReduction; // 0x14c(0x04)
	struct UAkAudioEvent* BlockHitAkEvent; // 0x150(0x08)
	struct UParticleSystem* BlockEffect; // 0x158(0x08)
	struct FName BlockHitMontageName; // 0x160(0x08)
	struct FName BlockKnockbackMontageName; // 0x168(0x08)
	float BlockImpulseStrength; // 0x170(0x04)
	float BlockMoveDistance; // 0x174(0x04)
	float BlockMoveDuration; // 0x178(0x04)
	float BlockMoveExitVelocityScale; // 0x17c(0x04)
	float BlockAttackDamageMultiplier; // 0x180(0x04)
	float BlockHeavyAttackDamageMultiplier; // 0x184(0x04)
	struct UTigerMeleeWeaponTrailConfig* WeaponTrailConfigClass; // 0x188(0x08)
	float MasqueradeNoiseEventRadius; // 0x190(0x04)
	enum class ETigerMeleeWeaponIdentifier MeleeWeaponIdentifier; // 0x194(0x01)
	char pad_195[0x3]; // 0x195(0x03)

	void OnWorldObjectHit(struct ATigerCharacter* InInstigator, struct FHitResult InWorldObjectHitResult, struct FVector InSwingDirection); // Function Tiger.TigerMeleeWeapon.OnWorldObjectHit // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnHit(struct ATigerCharacter* Instigator, struct ATigerCharacter* Target, enum class ETigerWeaponMeleeAttackType AttackType, float Damage); // Function Tiger.TigerMeleeWeapon.OnHit // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	struct FName GetWeaponOverrideHitReactionMontage(struct ATigerCharacter* Attacker, enum class ESharkFourWayDirection HitFromFourWayDirection); // Function Tiger.TigerMeleeWeapon.GetWeaponOverrideHitReactionMontage // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x12d1dc0
	char GetRandomAttackFromNextGroup(struct FTigerMeleeWeaponAttackIdentifier AttackIdentifier); // Function Tiger.TigerMeleeWeapon.GetRandomAttackFromNextGroup // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d1d10
	char GetRandomAttackFromGroup(struct FTigerMeleeWeaponAttackIdentifier AttackIdentifier, char AttackGroup); // Function Tiger.TigerMeleeWeapon.GetRandomAttackFromGroup // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d1c20
	enum class ETigerMeleeWeaponIdentifier GetMeleeWeaponIdentifier(); // Function Tiger.TigerMeleeWeapon.GetMeleeWeaponIdentifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d1c00
	char GetAttackGroupFromAttackIdentifier(struct FTigerMeleeWeaponAttackIdentifier AttackIdentifier); // Function Tiger.TigerMeleeWeapon.GetAttackGroupFromAttackIdentifier // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d1b50
};

// Class Tiger.TigerMetaStoreUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerMetaStoreUtilityBFL : UBlueprintFunctionLibrary {

	struct FString GetTotalPriceAsString(struct FTigerMetaStoreEntry InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetTotalPriceAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12d7c40
	void GetTotalPayloadPriceAsString(struct UTigerVendorComponent* InVendorComponent, struct TArray<struct FTigerMetaStoreBuyPayloadElement> InStoreBuyPayloadElements, struct FString OutPrice, bool bOutCouldGetTotalPrice); // Function Tiger.TigerMetaStoreUtilityBFL.GetTotalPayloadPriceAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12d7aa0
	struct FString GetStoreEntryIdAsString(struct FTigerMetaStoreEntry InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetStoreEntryIdAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12d7990
	struct FString GetQuantityAsString(struct FTigerMetaStoreEntryItem InStoreEntryItem); // Function Tiger.TigerMetaStoreUtilityBFL.GetQuantityAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12d78c0
	struct FString GetPremiumPriceAsString(struct FTigerMetaStoreEntry InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetPremiumPriceAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12d7630
	int32_t GetNumBoughtItems(struct FTigerBuyStoreEntryResponsePayload InBuyResponse); // Function Tiger.TigerMetaStoreUtilityBFL.GetNumBoughtItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12d7570
	struct FString GetDiscountAsString(struct FTigerMetaStoreEntry InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetDiscountAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12d7460
	bool GetBoughtItemInfo(struct FTigerBuyStoreEntryResponsePayload InBuyResponse, int32_t InItemIndex, struct FTigerItemId OutItemId, struct FString OutItemQuantity); // Function Tiger.TigerMetaStoreUtilityBFL.GetBoughtItemInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12d7110
	struct FTigerMetaStoreBuyPayloadElement CreateStoreEntryBuyElement(struct FTigerMetaStoreEntry InStoreEntry, int32_t InQuantity); // Function Tiger.TigerMetaStoreUtilityBFL.CreateStoreEntryBuyElement // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d6fe0
};

// Class Tiger.TigerMiniMap
// Size: 0x288 (Inherited: 0x280)
struct UTigerMiniMap : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void UpdatePlayerMarkerAlignmentAndMinimapSize(struct UTigerMapUi* InMap, struct UImage* InMinimapBorder, struct UTigerMapMarkerOverlay* InMapMarkerOverlay, struct FVector2D InPreviousCanvasSize); // Function Tiger.TigerMiniMap.UpdatePlayerMarkerAlignmentAndMinimapSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12d8030
	void SetupMasqueradeComponentAndDelegate(); // Function Tiger.TigerMiniMap.SetupMasqueradeComponentAndDelegate // (Final|Native|Public|BlueprintCallable) // @ game+0x12d8010
	void OnMasqueradeStateChanged(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerMiniMap.OnMasqueradeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerModelViewerItem
// Size: 0x238 (Inherited: 0x228)
struct ATigerModelViewerItem : AActor {
	struct UStaticMeshComponent* Mesh; // 0x228(0x08)
	float DesiredScreenSize; // 0x230(0x04)
	float CurrentScreenSize; // 0x234(0x04)

	float GetCurrentScreenSize(struct FVector InOrigin, float InDistance, struct FVector InViewOrigin, struct FMatrix InProjectionMatrix); // Function Tiger.TigerModelViewerItem.GetCurrentScreenSize // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d72c0
};

// Class Tiger.TigerMultiplayAgent
// Size: 0xf8 (Inherited: 0x50)
struct UTigerMultiplayAgent : UTigerDsBackendAgent {
	char pad_50[0xa8]; // 0x50(0xa8)
};

// Class Tiger.TigerMultiplayRegionCache
// Size: 0x150 (Inherited: 0x30)
struct UTigerMultiplayRegionCache : UGameInstanceSubsystem {
	char pad_30[0x10]; // 0x30(0x10)
	float RefreshRegionsIntervalSeconds; // 0x40(0x04)
	float MaxWaitTimeSecondsAfterRegionDetermination; // 0x44(0x04)
	struct FTigerRegionPingerSettings PingerSettings; // 0x48(0x14)
	char pad_5C[0x3c]; // 0x5c(0x3c)
	float MinimumMeasurementTime; // 0x98(0x04)
	int32_t DesiredMeasuredRegions; // 0x9c(0x04)
	char pad_A0[0xb0]; // 0xa0(0xb0)
};

// Class Tiger.TigerMusicAsset
// Size: 0x38 (Inherited: 0x30)
struct UTigerMusicAsset : UDataAsset {
	struct USoundCue* SoundCue; // 0x30(0x08)
};

// Class Tiger.TigerMusicVolume
// Size: 0x268 (Inherited: 0x260)
struct ATigerMusicVolume : AVolume {
	struct UTigerMusicAsset* MusicAsset; // 0x260(0x08)
};

// Class Tiger.TigerMusicManager
// Size: 0x230 (Inherited: 0x228)
struct ATigerMusicManager : AActor {
	struct UAudioComponent* AudioComponent; // 0x228(0x08)
};

// Class Tiger.TigerNearbySoundCueComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerNearbySoundCueComponent : UActorComponent {
	float DistanceToPlaySoundOnSquared; // 0xb0(0x04)
	float DistanceToStopSoundOnSquared; // 0xb4(0x04)
	struct UAkAudioEvent* PlayEvent; // 0xb8(0x08)
	struct UAkAudioEvent* StopEvent; // 0xc0(0x08)
	bool bDisableOcclusion; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct ATigerCharacter* CharacterOwner; // 0xd0(0x08)
	struct UAkComponent* AkComponent; // 0xd8(0x08)
	char pad_E0[0x10]; // 0xe0(0x10)
};

// Class Tiger.TigerNearCameraFadeMaterialDb
// Size: 0xd0 (Inherited: 0x30)
struct UTigerNearCameraFadeMaterialDb : UDataAsset {
	struct TMap<struct TSoftObjectPtr<struct UMaterialInterface>, struct TSoftObjectPtr<struct UMaterialInterface>> OriginalMaterialToFadingMaterialLut; // 0x30(0x50)
	struct TMap<struct TSoftObjectPtr<struct UMaterialInterface>, struct TSoftObjectPtr<struct UMaterialInterface>> FadingMaterialToOriginalMaterialLut; // 0x80(0x50)
};

// Class Tiger.TigerNearCameraFadeSettings
// Size: 0xd8 (Inherited: 0x38)
struct UTigerNearCameraFadeSettings : UDeveloperSettings {
	bool bEnableNearCameraFade; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TMap<struct FName, struct FName> CollisionProfileChangesWhenTogglingFade; // 0x40(0x50)
	struct UTigerNearCameraFadeMaterialDb* MaterialDatabase; // 0x90(0x08)
	float FadeLength; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct TArray<struct FTigerNearCameraFadeMaterialMasterData> MasterMaterialDatas; // 0xa0(0x10)
	struct FTigerNearCameraFadeDebugData DebugData; // 0xb0(0x28)
};

// Class Tiger.TigerNetInfoSubSystem
// Size: 0x50 (Inherited: 0x30)
struct UTigerNetInfoSubSystem : UGameInstanceSubsystem {
	char pad_30[0x20]; // 0x30(0x20)

	bool IsPublicIpv6Set(); // Function Tiger.TigerNetInfoSubSystem.IsPublicIpv6Set // (Final|Native|Public|BlueprintCallable) // @ game+0x12d7d80
	bool IsPublicIpv4Set(); // Function Tiger.TigerNetInfoSubSystem.IsPublicIpv4Set // (Final|Native|Public|BlueprintCallable) // @ game+0x12d7d50
	struct FString GetPublicIpv6(); // Function Tiger.TigerNetInfoSubSystem.GetPublicIpv6 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d7800
	struct FString GetPublicIpv4(); // Function Tiger.TigerNetInfoSubSystem.GetPublicIpv4 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d7740
};

// Class Tiger.TigerBestialTrailPart
// Size: 0x580 (Inherited: 0x580)
struct UTigerBestialTrailPart : USplineMeshComponent {
};

// Class Tiger.TigerBestialTrailVisualizer
// Size: 0x240 (Inherited: 0x228)
struct ATigerBestialTrailVisualizer : AActor {
	struct TArray<struct FTigerPlayerSavedLocation> LocationHistory; // 0x228(0x10)
	struct ATigerGameState* GameState; // 0x238(0x08)

	float SecondsUntilTimeStamp(float Timestamp); // Function Tiger.TigerBestialTrailVisualizer.SecondsUntilTimeStamp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d7f70
	float SecondsSinceTimeStamp(float Timestamp); // Function Tiger.TigerBestialTrailVisualizer.SecondsSinceTimeStamp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d7ed0
	void ReceiveNewTrackingPoint(struct FTigerPlayerSavedLocation NewLocation); // Function Tiger.TigerBestialTrailVisualizer.ReceiveNewTrackingPoint // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void ReceiveInitialTrackingPoints(struct TArray<struct FTigerPlayerSavedLocation> Locations, struct ATigerPlayer* TrackedPlayer); // Function Tiger.TigerBestialTrailVisualizer.ReceiveInitialTrackingPoints // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void BeginEndTracking(); // Function Tiger.TigerBestialTrailVisualizer.BeginEndTracking // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerTrackedBuffInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerTrackedBuffInstance : UTigerBuffInstance {
};

// Class Tiger.TigerTrackedBuff
// Size: 0x270 (Inherited: 0x270)
struct UTigerTrackedBuff : UTigerBuff {
};

// Class Tiger.TigerNosferatuPassiveBestialConfig
// Size: 0x168 (Inherited: 0x138)
struct UTigerNosferatuPassiveBestialConfig : UTigerPassiveConfig {
	struct ATigerBestialTrailVisualizer* TrailVisualizationActor; // 0x138(0x08)
	struct UTigerTrackedBuff* TrackedBuffType; // 0x140(0x08)
	float RevealDistanceSquared; // 0x148(0x04)
	float LoseDistanceSquared; // 0x14c(0x04)
	struct TArray<float> RevealHealthThreshold; // 0x150(0x10)
	float TrackingTimeSeconds; // 0x160(0x04)
	bool bEnableTrackingFeedback; // 0x164(0x01)
	char pad_165[0x3]; // 0x165(0x03)
};

// Class Tiger.TigerPassiveArchetypeLogic
// Size: 0x178 (Inherited: 0xc0)
struct UTigerPassiveArchetypeLogic : UTigerPassiveComponent {
	struct FTigerCharacterStatModification PowerLevelStatChanges; // 0xc0(0xb4)
	char pad_174[0x4]; // 0x174(0x04)

	void OnPowerLevelIncreased(); // Function Tiger.TigerPassiveArchetypeLogic.OnPowerLevelIncreased // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	int32_t GetPowerLevel(); // Function Tiger.TigerPassiveArchetypeLogic.GetPowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e5cc0
};

// Class Tiger.TigerNosferatuPassiveBestialLogic
// Size: 0x1d0 (Inherited: 0x178)
struct UTigerNosferatuPassiveBestialLogic : UTigerPassiveArchetypeLogic {
	struct TMap<int32_t, struct FTigerTrackedPlayerData> RevealedPlayers; // 0x178(0x50)
	struct UTigerNosferatuPassiveBestialConfig* Config; // 0x1c8(0x08)

	void NewTrackedLocation(struct ATigerPlayer* InTrackedPlayer, struct FVector InNewLocation, float InTimeStamp); // Function Tiger.TigerNosferatuPassiveBestialLogic.NewTrackedLocation // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x12d7db0
	bool CalculateIsWithinDistanceToTrail(float InDistance); // Function Tiger.TigerNosferatuPassiveBestialLogic.CalculateIsWithinDistanceToTrail // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d6f50
	float CalculateDistanceToTrail(); // Function Tiger.TigerNosferatuPassiveBestialLogic.CalculateDistanceToTrail // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d6f20
};

// Class Tiger.TigerNotificationsUI
// Size: 0x2b8 (Inherited: 0x280)
struct UTigerNotificationsUI : UTigerWidget {
	float HolyIncenseImminentTime; // 0x280(0x04)
	char pad_284[0x34]; // 0x284(0x34)

	void OnReceivedReward(); // Function Tiger.TigerNotificationsUI.OnReceivedReward // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnQuestObjectiveCompleted(struct UTigerQuestObjective* InCompleteObjective); // Function Tiger.TigerNotificationsUI.OnQuestObjectiveCompleted // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnQuestCompleted(struct UTigerQuest* InCompletedQuest); // Function Tiger.TigerNotificationsUI.OnQuestCompleted // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnPlayerHealed(struct FString InPlayerName); // Function Tiger.TigerNotificationsUI.OnPlayerHealed // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnPlayerDeath(struct FText PlayerName, struct FText InstigatorName, bool bIsPlayerInSameGroup); // Function Tiger.TigerNotificationsUI.OnPlayerDeath // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnOtherPlayerBrokeMasquerade(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerNotificationsUI.OnOtherPlayerBrokeMasquerade // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnMosquitoActivated(); // Function Tiger.TigerNotificationsUI.OnMosquitoActivated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnMemberLeftGroup(struct FString PlayerName); // Function Tiger.TigerNotificationsUI.OnMemberLeftGroup // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnMemberJoinedGroup(struct FString PlayerName); // Function Tiger.TigerNotificationsUI.OnMemberJoinedGroup // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnInGameTalentUnlocked(struct UTexture2D* Icon, struct FText Name); // Function Tiger.TigerNotificationsUI.OnInGameTalentUnlocked // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnHolyIncenseImminent(float Time); // Function Tiger.TigerNotificationsUI.OnHolyIncenseImminent // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnGroupPingResponse(struct UTigerPingClientData* InPingData, struct ATigerPlayerState* InRespondingPlayer, bool bInIsInterested); // Function Tiger.TigerNotificationsUI.OnGroupPingResponse // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnGroupPingCanceled(struct UTigerPingClientData* InPingData); // Function Tiger.TigerNotificationsUI.OnGroupPingCanceled // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnGroupPing(struct FTigerPingNotificationNetData PingData, struct ATigerPlayerState* InSendingPlayerState); // Function Tiger.TigerNotificationsUI.OnGroupPing // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnGroupInviteReceived(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerNotificationsUI.OnGroupInviteReceived // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnGrimoireItemUnlocked(struct UTigerGrimoireEntry* InGrimoireEntry); // Function Tiger.TigerNotificationsUI.OnGrimoireItemUnlocked // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFriendRemoved(struct UTigerFriend* InLostFriend); // Function Tiger.TigerNotificationsUI.OnFriendRemoved // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFriendInviteSent(); // Function Tiger.TigerNotificationsUI.OnFriendInviteSent // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFriendInviteRejected(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerNotificationsUI.OnFriendInviteRejected // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFriendInviteReceived(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerNotificationsUI.OnFriendInviteReceived // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFriendAdded(struct UTigerFriend* InNewFriend); // Function Tiger.TigerNotificationsUI.OnFriendAdded // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnExperienceGained(struct UTigerExperienceEvent* ExperienceEvent, int32_t GainedExperience); // Function Tiger.TigerNotificationsUI.OnExperienceGained // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnDisciplineReceived(struct UTexture2D* Icon, struct FText Name); // Function Tiger.TigerNotificationsUI.OnDisciplineReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnCollectibleFound(struct UTigerCollectibleData* InCollectible); // Function Tiger.TigerNotificationsUI.OnCollectibleFound // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnChallengeCompleted(struct UTigerChallenge* InCompletedChallenge); // Function Tiger.TigerNotificationsUI.OnChallengeCompleted // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnBloodTrackPassiveUnlocked(struct UTigerBloodTrackPassiveConfig* Passive); // Function Tiger.TigerNotificationsUI.OnBloodTrackPassiveUnlocked // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnBloodReceived(int32_t Amount); // Function Tiger.TigerNotificationsUI.OnBloodReceived // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnAcceptGroupInviteFailed(struct FTigerInviteId InInviteId); // Function Tiger.TigerNotificationsUI.OnAcceptGroupInviteFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void ItemReceived(struct FTigerItemNotification ItemNotification); // Function Tiger.TigerNotificationsUI.ItemReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerNotificationsUIStacker
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerNotificationsUIStacker : UTigerWidget {
	struct TArray<struct FDisplayedItemWidget> ShownItemWidgets; // 0x280(0x10)
	int32_t MaxDisplayedItems; // 0x290(0x04)
	float ItemMargin; // 0x294(0x04)
	float ItemDisplayTime; // 0x298(0x04)
	float ItemMoveTime; // 0x29c(0x04)
	float ItemFadeOffsetX; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct TArray<struct UUserWidget*> WaitingItems; // 0x2a8(0x10)
	struct UUserWidget* ItemWidgetFadingIn; // 0x2b8(0x08)
	struct UUserWidget* ItemWidgetFadingOut; // 0x2c0(0x08)
	struct UCanvasPanel* ItemCanvasWidget; // 0x2c8(0x08)
	char pad_2D0[0x10]; // 0x2d0(0x10)

	void EnqueueItem(struct UUserWidget* ItemWidget); // Function Tiger.TigerNotificationsUIStacker.EnqueueItem // (Final|Native|Public|BlueprintCallable) // @ game+0x12db9c0
};

// Class Tiger.TigerNPC
// Size: 0xb10 (Inherited: 0x9a0)
struct ATigerNPC : ATigerBaseNPC {
	struct FMulticastInlineDelegate OnAnimationModeChanged; // 0x9a0(0x10)
	struct UTigerAICommandComponent* AICommandComponent; // 0x9b0(0x08)
	struct UTigerNpcAccuracyComponent* AccuracyComponent; // 0x9b8(0x08)
	struct UTigerEntityCombatComponent* EntityCombatComponent; // 0x9c0(0x08)
	struct UParticleSystemComponent* NpcAwarenessComponent; // 0x9c8(0x08)
	struct TWeakObjectPtr<struct ATigerCharacter> CurrentTarget; // 0x9d0(0x08)
	struct FVector_NetQuantize CurrentTargetLocation; // 0x9d8(0x0c)
	char pad_9E4[0x4]; // 0x9e4(0x04)
	struct ATigerCharacter* TargetToShoot; // 0x9e8(0x08)
	enum class ETigerAIAnimationMode AnimationMode; // 0x9f0(0x01)
	enum class ETigerCivilianEmotionalState EmotionalState; // 0x9f1(0x01)
	char pad_9F2[0x2]; // 0x9f2(0x02)
	int32_t EmotionalStateRandomPot[0x6]; // 0x9f4(0x18)
	char pad_A0C[0x4]; // 0xa0c(0x04)
	struct UAnimMontage* LuredCancelAnim; // 0xa10(0x08)
	struct UTigerNpcPropComponent* NpcPropComponent; // 0xa18(0x08)
	char pad_A20[0x20]; // 0xa20(0x20)
	float BumpTimeInterval; // 0xa40(0x04)
	float HighPotenceBloodChange; // 0xa44(0x04)
	float EarliestHighPotenceBloodTime; // 0xa48(0x04)
	float LastHighPotenceBloodTime; // 0xa4c(0x04)
	float PreferedMinimumDistanceBetweenPotent; // 0xa50(0x04)
	struct FVector_NetQuantize RagdollImpulse; // 0xa54(0x0c)
	struct FTigerNpcReactionData ReactionData; // 0xa60(0x0c)
	char pad_A6C[0x4]; // 0xa6c(0x04)
	float MaxYawAngleToShoot; // 0xa70(0x04)
	float MinTargetIsInfrontDotAngle; // 0xa74(0x04)
	struct FSharkRandomDeviation DownedStateDuration; // 0xa78(0x08)
	struct FName HeartRateParam; // 0xa80(0x08)
	struct FName BloodAmountParam; // 0xa88(0x08)
	struct FName HeartSocketName; // 0xa90(0x08)
	struct FName HeartLocationParam; // 0xa98(0x08)
	float HeartLocationUpdateTime; // 0xaa0(0x04)
	char pad_AA4[0x4]; // 0xaa4(0x04)
	struct UDamageType* LastDamageSource; // 0xaa8(0x08)
	char pad_AB0[0x60]; // 0xab0(0x60)

	void TriggerNpcReactionEvent(struct FTigerNpcReactionEvent ReactionEvent); // Function Tiger.TigerNPC.TriggerNpcReactionEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12dc570
	void TigerDelegateNpcAnimationModeChanged__DelegateSignature(enum class ETigerAIAnimationMode NewAnimationMode); // DelegateFunction Tiger.TigerNPC.TigerDelegateNpcAnimationModeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void StopFireWeapon(); // Function Tiger.TigerNPC.StopFireWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x12dc550
	bool StartFireWeapon(struct ATigerCharacter* InTigerChar); // Function Tiger.TigerNPC.StartFireWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x12dc4b0
	void Server_SetCharacterMeshes(struct FTigerMeshCollection MeshCollection); // Function Tiger.TigerNPC.Server_SetCharacterMeshes // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12dc390
	void OnRep_RagdollImpulseSet(); // Function Tiger.TigerNPC.OnRep_RagdollImpulseSet // (Final|Native|Protected) // @ game+0x12dc370
	void OnRep_AnimationModeChanged(enum class ETigerAIAnimationMode LastMode); // Function Tiger.TigerNPC.OnRep_AnimationModeChanged // (Final|Native|Protected) // @ game+0x12dc2f0
	void OnFeedingStart(int32_t FeedingTicksLeft, int32_t MaxFeedingTicks); // Function Tiger.TigerNPC.OnFeedingStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnFeedingEnd(); // Function Tiger.TigerNPC.OnFeedingEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnBurstCompleted(); // Function Tiger.TigerNPC.OnBurstCompleted // (Final|Native|Private) // @ game+0x12dc2b0
	void Multicast_PlayReactionFromMontage(struct UAnimMontage* InMontage, float InPlayBackSpeed, bool bInCanMoveDuringReaction); // Function Tiger.TigerNPC.Multicast_PlayReactionFromMontage // (Net|Native|Event|NetMulticast|Public) // @ game+0x12dc1a0
	void Multicast_PlayReactionFromBlendSpace(struct UBlendSpaceBase* InBlendSpace, struct FVector InSamplePoint, float InPlayBackSpeed, bool bInCanMoveDuringReaction, float InBlendOutTime); // Function Tiger.TigerNPC.Multicast_PlayReactionFromBlendSpace // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x12dbff0
	void Multicast_PlayMontageFromBlendSpace(struct UBlendSpaceBase* BlendSpace, struct FVector SamplePoint, float PlayBackSpeed, bool bFreezeAtEnd); // Function Tiger.TigerNPC.Multicast_PlayMontageFromBlendSpace // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x12dbea0
	void Multicast_PlayDeathMontage(struct FVector SamplePoint, float PlayBackSpeed); // Function Tiger.TigerNPC.Multicast_PlayDeathMontage // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x12dbdd0
	void Multicast_PlayAnimationWithContextIdle(struct UAnimMontage* InMontage, struct FName InContextIdle); // Function Tiger.TigerNPC.Multicast_PlayAnimationWithContextIdle // (Net|Native|Event|NetMulticast|Public) // @ game+0x12dbd00
	void Multicast_InterruptCap(enum class ETigerDetachMethod InDetachMethod); // Function Tiger.TigerNPC.Multicast_InterruptCap // (Net|Native|Event|NetMulticast|Public) // @ game+0x12dbc80
	void Multicast_DeactivateLure(); // Function Tiger.TigerNPC.Multicast_DeactivateLure // (Net|Native|Event|NetMulticast|Public) // @ game+0x12dbc60
	void Multicast_AuthorityPlayAkEvent(struct UAkAudioEvent* VoiceEvent); // Function Tiger.TigerNPC.Multicast_AuthorityPlayAkEvent // (Net|Native|Event|NetMulticast|Public) // @ game+0x12dbbd0
	bool IsReacting(); // Function Tiger.TigerNPC.IsReacting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dbb70
	bool IsInControl(); // Function Tiger.TigerNPC.IsInControl // (Final|Native|Public|BlueprintCallable) // @ game+0x12dbb40
	bool HasShootingTarget(); // Function Tiger.TigerNPC.HasShootingTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dbae0
	struct FVector GetHeardRoarPosition(); // Function Tiger.TigerNPC.GetHeardRoarPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dba50
	struct ATigerAIController* GetAIController(); // Function Tiger.TigerNPC.GetAIController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x123dbd0
	void CollideWithOtherCharacter(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult Hit); // Function Tiger.TigerNPC.CollideWithOtherCharacter // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x12db7c0
	void AuthorityPlayReactionFromMontage(struct UAnimMontage* InMontage, bool bInCanMoveDuringReaction); // Function Tiger.TigerNPC.AuthorityPlayReactionFromMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x12db6f0
	void AuthorityPlayReactionFromBlendSpace(struct UBlendSpaceBase* InBlendSpace, struct FVector InSamplePoint, bool bInCanMoveDuringReaction, float InBlendOutTime); // Function Tiger.TigerNPC.AuthorityPlayReactionFromBlendSpace // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12db570
	void AuthorityPlayMontageFromBlendSpace(struct UBlendSpaceBase* BlendSpace, struct FVector SamplePoint, bool bFreezeAtEnd); // Function Tiger.TigerNPC.AuthorityPlayMontageFromBlendSpace // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12db450
	void AuthorityPlayDeathMontage(struct FVector SamplePoint); // Function Tiger.TigerNPC.AuthorityPlayDeathMontage // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12db3c0
	void AuthorityPlayAkEvent(struct UAkAudioEvent* VoiceEvent); // Function Tiger.TigerNPC.AuthorityPlayAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x12db330
};

// Class Tiger.TigerNpcAccuracyComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerNpcAccuracyComponent : UActorComponent {
	float TimeToReachMaxAccuracy; // 0xb0(0x04)
	float TimeToReachMaxInaccuracy; // 0xb4(0x04)
	float MaxAccuracyConeRadius; // 0xb8(0x04)
	float MinAccuracyConeRadius; // 0xbc(0x04)
	float AccuracyDistance; // 0xc0(0x04)
	float MovingTargetAccuracyPenaltyPercentage; // 0xc4(0x04)
	float MinSwooshByAccuracyConeRadius; // 0xc8(0x04)
	float MaxSwooshByAccuracyConeRadius; // 0xcc(0x04)
	float MinSwooshByAccuracyDistance; // 0xd0(0x04)
	bool bShouldKeepAccuracyWhenSwitchingToTargetsAlly; // 0xd4(0x01)
	bool bShouldDebugDraw; // 0xd5(0x01)
	bool bShouldMissEveryBurst; // 0xd6(0x01)
	char pad_D7[0x9]; // 0xd7(0x09)
	struct ATigerNPC* Owner; // 0xe0(0x08)
	char pad_E8[0x8]; // 0xe8(0x08)

	void OnBurstCompleted(); // Function Tiger.TigerNpcAccuracyComponent.OnBurstCompleted // (Final|Native|Private) // @ game+0x12dc2d0
};

// Class Tiger.TigerNpcAnimInstance
// Size: 0x430 (Inherited: 0x3c0)
struct UTigerNpcAnimInstance : UTigerAnimInstance {
	enum class ETigerAIAnimationMode AnimationMode; // 0x3b8(0x01)
	struct ATigerPropDummy* PropDummyClass; // 0x3c0(0x08)
	bool bIsReadyToFireWeapon; // 0x3c8(0x01)
	char pad_3CA[0x2]; // 0x3ca(0x02)
	float TimeAnimModeChanged; // 0x3cc(0x04)
	bool bIsBurstFiring; // 0x3d0(0x01)
	bool bIsBeingFedOn; // 0x3d1(0x01)
	bool bCanSeeLocalPlayer; // 0x3d2(0x01)
	bool bIsLookingAtLocalPlayer; // 0x3d3(0x01)
	struct FVector AimDirection; // 0x3d4(0x0c)
	struct FVector StrafeDirection; // 0x3e0(0x0c)
	float LocalPlayerLookAtPitch; // 0x3ec(0x04)
	float LocalPlayerLookAtYaw; // 0x3f0(0x04)
	float LocalPlayerLookAtDistance; // 0x3f4(0x04)
	float LocalPlayerLookAtActivationDistance; // 0x3f8(0x04)
	float LocalPlayerLookAtDeactivationDistance; // 0x3fc(0x04)
	struct FSharkRandomDeviation LocalPlayerLookAtDuration; // 0x400(0x08)
	struct FSharkRandomDeviation LocalPlayerLookAtAgainCooldown; // 0x408(0x08)
	float DeathDirection; // 0x410(0x04)
	float ReactionCooldown; // 0x414(0x04)
	float TurnCooldownTime; // 0x418(0x04)
	char pad_41C[0x14]; // 0x41c(0x14)

	void UpdateSpeed(); // Function Tiger.TigerNpcAnimInstance.UpdateSpeed // (Final|Native|Protected|BlueprintCallable) // @ game+0x12dc600
	void OnVisualAssetReceived(struct UTigerNPCVisualAsset* VisualAsset); // Function Tiger.TigerNpcAnimInstance.OnVisualAssetReceived // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnPropAssetReceivedEvent(); // Function Tiger.TigerNpcAnimInstance.OnPropAssetReceivedEvent // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnNpcThreatStateChangedEvent(enum class ETigerAIMasqueradeState OldThreatState, enum class ETigerAIMasqueradeState NewThreatState); // Function Tiger.TigerNpcAnimInstance.OnNpcThreatStateChangedEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnNpcReactionEvent(struct FTigerNpcReactionEvent ReactionEvent); // Function Tiger.TigerNpcAnimInstance.OnNpcReactionEvent // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnEntityEvent(enum class ETigerEntityEvent EntityEvent); // Function Tiger.TigerNpcAnimInstance.OnEntityEvent // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnBumpedByPlayerEvent(struct ATigerPlayer* InPlayer, struct FVector InDirectionToPlayer); // Function Tiger.TigerNpcAnimInstance.OnBumpedByPlayerEvent // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnAnimationModeChanged(enum class ETigerAIAnimationMode LastAnimationMode); // Function Tiger.TigerNpcAnimInstance.OnAnimationModeChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsReactionOnCooldown(); // Function Tiger.TigerNpcAnimInstance.IsReactionOnCooldown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dbba0
	bool IsFootIKEnabled(); // Function Tiger.TigerNpcAnimInstance.IsFootIKEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dbb10
	struct ATigerAIController* GetTigerAIController(); // Function Tiger.TigerNpcAnimInstance.GetTigerAIController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dbab0
	struct ATigerNPC* GetOwningNpc(); // Function Tiger.TigerNpcAnimInstance.GetOwningNpc // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dba80
	void DetachProps(); // Function Tiger.TigerNpcAnimInstance.DetachProps // (Final|Native|Public|BlueprintCallable) // @ game+0x12db9a0
	void AttachProps(); // Function Tiger.TigerNpcAnimInstance.AttachProps // (Final|Native|Public|BlueprintCallable) // @ game+0x12db310
};

// Class Tiger.TigerNpcCapSpawner
// Size: 0x268 (Inherited: 0x260)
struct ATigerNpcCapSpawner : ATigerNPCSpawningBase {
	struct ATigerAiSpawningCap* OwningSpawningCap; // 0x260(0x08)
};

// Class Tiger.TigerDroppedPropTrackerComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerDroppedPropTrackerComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class Tiger.TigerNPCDetachedProp
// Size: 0x240 (Inherited: 0x238)
struct ATigerNPCDetachedProp : AStaticMeshActor {
	char pad_238[0x8]; // 0x238(0x08)
};

// Class Tiger.TigerDialogueCondition
// Size: 0x30 (Inherited: 0x28)
struct UTigerDialogueCondition : UObject {
	bool bFalseCondition; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Tiger.TigerDialogueCondition_Clan
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_Clan : UTigerDialogueCondition {
	enum class ETigerDialogueClanRequirementSpecifier ClanEquality; // 0x30(0x01)
	enum class ETigerClan ClanRequirement; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Tiger.TigerDialogueCondition_DialogueRead
// Size: 0x50 (Inherited: 0x30)
struct UTigerDialogueCondition_DialogueRead : UTigerDialogueCondition {
	struct FString ListId; // 0x30(0x10)
	struct FString DialogueId; // 0x40(0x10)
};

// Class Tiger.TigerDialogueCondition_FinishedCertainGame
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_FinishedCertainGame : UTigerDialogueCondition {
	enum class ETigerGroupingMode ModeFinished; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerDialogueCondition_GrimoireEntry
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_GrimoireEntry : UTigerDialogueCondition {
	struct UTigerGrimoireEntry* RequiredEntry; // 0x30(0x08)
};

// Class Tiger.TigerDialogueCondition_MatchCount
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_MatchCount : UTigerDialogueCondition {
	int32_t RequiredMatches; // 0x30(0x04)
	enum class ETigerDialogueEqualitySpecifier MatchEquality; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Tiger.TigerDialogueCondition_MatchStats
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_MatchStats : UTigerDialogueCondition {
	enum class ETigerSeasonMatchStatType StatType; // 0x30(0x01)
	enum class ETigerDialogueEqualitySpecifier StatEquality; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	int32_t StatValue; // 0x34(0x04)
};

// Class Tiger.TigerDialogueCondition_Outfit
// Size: 0x48 (Inherited: 0x30)
struct UTigerDialogueCondition_Outfit : UTigerDialogueCondition {
	enum class ETigerDialogueOutfitRequirementSpecifier OutfitRequirement; // 0x30(0x01)
	enum class ETigerClan Clan; // 0x31(0x01)
	enum class ETigerGender Gender; // 0x32(0x01)
	char pad_33[0x5]; // 0x33(0x05)
	struct FString OutfitAssetName; // 0x38(0x10)
};

// Class Tiger.TigerDialogueCondition_Quest
// Size: 0x68 (Inherited: 0x30)
struct UTigerDialogueCondition_Quest : UTigerDialogueCondition {
	enum class ETigerDialogueQuestRequirementSpecifier Requirement; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FTigerQuestIdentifier questIdToCheck; // 0x38(0x30)
};

// Class Tiger.TigerDialogueCondition_SeasonLevel
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_SeasonLevel : UTigerDialogueCondition {
	int32_t RequiredSeasonLevel; // 0x30(0x04)
	enum class ETigerDialogueEqualitySpecifier SeasonEquality; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Tiger.TigerNpcMovementRestrictionBoundsData
// Size: 0x48 (Inherited: 0x28)
struct UTigerNpcMovementRestrictionBoundsData : UObject {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class Tiger.TigerNpcMovementRestrictionBounds
// Size: 0x248 (Inherited: 0x228)
struct ATigerNpcMovementRestrictionBounds : AActor {
	struct USplineComponent* InnerSpline; // 0x228(0x08)
	struct USplineComponent* OuterSpline; // 0x230(0x08)
	char pad_238[0x10]; // 0x238(0x10)
};

// Class Tiger.TigerNpcPropComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerNpcPropComponent : UActorComponent {
	struct USkeletalMeshComponent* OwnerMeshComp; // 0xb0(0x08)
	struct TArray<struct FTigerPropAttachment> AttachedProps; // 0xb8(0x10)
	struct TArray<struct TScriptInterface<None>> FreeProps; // 0xc8(0x10)

	bool HasProp(struct FName AttachmentIdentifier); // Function Tiger.TigerNpcPropComponent.HasProp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e09b0
	bool HasAnyProp(struct TArray<struct FName> AttachmentIdentifiers); // Function Tiger.TigerNpcPropComponent.HasAnyProp // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e08c0
	bool HasAllProps(struct TArray<struct FName> AttachmentIdentifiers); // Function Tiger.TigerNpcPropComponent.HasAllProps // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e0800
	struct UMeshComponent* GetPropComponent(struct FName Identifier); // Function Tiger.TigerNpcPropComponent.GetPropComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e0680
	void DetachPropWithSetImpulse(struct FName AttachmentIdentifier, struct FVector Impulse, float AngularImpulseStrength); // Function Tiger.TigerNpcPropComponent.DetachPropWithSetImpulse // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12e02d0
	void DetachProp(struct FName AttachmentIdentifier, enum class ETigerDetachMethod DetachMethod); // Function Tiger.TigerNpcPropComponent.DetachProp // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0200
	void ClearProps(enum class ETigerDetachMethod DetachMethod); // Function Tiger.TigerNpcPropComponent.ClearProps // (Final|Native|Public|BlueprintCallable) // @ game+0x12dfed0
	struct UMeshComponent* AttachProp(struct FTigerPropAttachmentInfo Attachment); // Function Tiger.TigerNpcPropComponent.AttachProp // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12dfce0
};

// Class Tiger.TigerNPCSpawningCoordinator
// Size: 0x128 (Inherited: 0xb0)
struct UTigerNPCSpawningCoordinator : UActorComponent {
	struct UTigerNPCAsset* JudgeNpcAsset; // 0xb0(0x08)
	struct UDataTable* NpcSpawningGroupBudget; // 0xb8(0x08)
	float JudgeSpawnTime; // 0xc0(0x04)
	bool bShouldSpawnJudge; // 0xc4(0x01)
	char pad_C5[0x63]; // 0xc5(0x63)

	void TrySpawnNpcs(); // Function Tiger.TigerNPCSpawningCoordinator.TrySpawnNpcs // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1e60
	void SpawnNpcs(); // Function Tiger.TigerNPCSpawningCoordinator.SpawnNpcs // (Final|Native|Protected) // @ game+0x12e1d70
	void OnMatchStateChanged(enum class ETigerMatchState OldState, enum class ETigerMatchState NewState); // Function Tiger.TigerNPCSpawningCoordinator.OnMatchStateChanged // (Final|Native|Public) // @ game+0x12e0ed0
	void OnBalanceModeSet(); // Function Tiger.TigerNPCSpawningCoordinator.OnBalanceModeSet // (Final|Native|Public) // @ game+0x12e0d70
};

// Class Tiger.TigerNPCSpawningSpline
// Size: 0x320 (Inherited: 0x260)
struct ATigerNPCSpawningSpline : ATigerNPCSpawningBase {
	struct USplineComponent* Spline; // 0x260(0x08)
	struct UTigerNPCAsset* NPCAsset; // 0x268(0x08)
	struct FTigerAISplinePathData PathData; // 0x270(0xa0)
	char pad_310[0x10]; // 0x310(0x10)
};

// Class Tiger.TigerOneWayExpandableArea
// Size: 0x338 (Inherited: 0x338)
struct UTigerOneWayExpandableArea : UExpandableArea {

	void CloseArea(); // Function Tiger.TigerOneWayExpandableArea.CloseArea // (Final|Native|Public|BlueprintCallable) // @ game+0x12dff50
};

// Class Tiger.TigerOnlineBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTigerOnlineBlueprintLibrary : UBlueprintFunctionLibrary {

	struct FString PartyIdToUserString(struct FTigerPartyId InId); // Function Tiger.TigerOnlineBlueprintLibrary.PartyIdToUserString // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x12e0a70
	struct FString InviteIdToUserString(struct FTigerInviteId InId); // Function Tiger.TigerOnlineBlueprintLibrary.InviteIdToUserString // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x12e0a70
	int32_t GetMinimumAccountCreationAge(); // Function Tiger.TigerOnlineBlueprintLibrary.GetMinimumAccountCreationAge // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x12e0620
	struct FString GetAccountRecoverUrl(); // Function Tiger.TigerOnlineBlueprintLibrary.GetAccountRecoverUrl // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x12e0480
};

// Class Tiger.TigerOnlineError
// Size: 0x50 (Inherited: 0x28)
struct UTigerOnlineError : UObject {
	struct FText Message; // 0x28(0x18)
	struct FString ErrorCodeString; // 0x40(0x10)
};

// Class Tiger.TigerOnlineSettings
// Size: 0x170 (Inherited: 0x38)
struct UTigerOnlineSettings : UDeveloperSettings {
	bool bResetPlayerDataInEditor; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FString OnlineServicesBaseUrlDev; // 0x40(0x10)
	struct FString OnlineServicesBaseUrlUat; // 0x50(0x10)
	struct FString OnlineServicesBaseUrlProd; // 0x60(0x10)
	struct FString OnlineServicesBaseUrlLocal; // 0x70(0x10)
	struct FString OnlineServicesPushBaseUrlDev; // 0x80(0x10)
	struct FString OnlineServicesPushBaseUrlUat; // 0x90(0x10)
	struct FString OnlineServicesPushBaseUrlProd; // 0xa0(0x10)
	struct FString OnlineServicesPushBaseUrlLocal; // 0xb0(0x10)
	struct FString CdnBaseUrlDev; // 0xc0(0x10)
	struct FString CdnBaseUrlUat; // 0xd0(0x10)
	struct FString CdnBaseUrlProd; // 0xe0(0x10)
	struct FString PlayerDataServiceUri; // 0xf0(0x10)
	struct FString SessionServiceUri; // 0x100(0x10)
	struct FString PushServiceUri; // 0x110(0x10)
	struct FString PartyServiceUri; // 0x120(0x10)
	struct FString FriendServiceUri; // 0x130(0x10)
	struct FString PresenceServiceUri; // 0x140(0x10)
	struct FString LoginQueueServiceUri; // 0x150(0x10)
	struct FString StoreServiceUri; // 0x160(0x10)
};

// Class Tiger.TigerOnlineStatusMessages
// Size: 0x98 (Inherited: 0x28)
struct UTigerOnlineStatusMessages : UObject {
	struct FText DefaultMessage; // 0x28(0x18)
	struct FText DefaultAccountMessage; // 0x40(0x18)
	struct FText DefaultSystemMessage; // 0x58(0x18)
	struct FText DefaultServerMessage; // 0x70(0x18)
	struct TArray<struct FTigerOnlineStatusMessageEntry> Messages; // 0x88(0x10)

	struct FText GetMessageForError(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerOnlineStatusMessages.GetMessageForError // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12e0530
};

// Class Tiger.TigerOnlineStatusSubsystem
// Size: 0xd8 (Inherited: 0x30)
struct UTigerOnlineStatusSubsystem : UGameInstanceSubsystem {
	char pad_30[0x10]; // 0x30(0x10)
	struct UTigerOnlineStatusMessages* OnlineStatusMessages; // 0x40(0x08)
	char pad_48[0x90]; // 0x48(0x90)

	void TigerTestOnlineError(enum class ETigerOnlineErrorCategory InCategory, int32_t InId); // Function Tiger.TigerOnlineStatusSubsystem.TigerTestOnlineError // (Final|Exec|Native|Public) // @ game+0x12e1d90
	void SetOnlineErrorAndGoToTitle(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerOnlineStatusSubsystem.SetOnlineErrorAndGoToTitle // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1860
	void SetOnlineError(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerOnlineStatusSubsystem.SetOnlineError // (Final|Native|Public|BlueprintCallable) // @ game+0x12e17e0
	bool IsStatusOk(); // Function Tiger.TigerOnlineStatusSubsystem.IsStatusOk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e0c30
	float GetRetryDelaySeconds(); // Function Tiger.TigerOnlineStatusSubsystem.GetRetryDelaySeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e0720
	struct UTigerOnlineError* GetOnlineError(); // Function Tiger.TigerOnlineStatusSubsystem.GetOnlineError // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0650
	void ClearOnlineError(); // Function Tiger.TigerOnlineStatusSubsystem.ClearOnlineError // (Final|Native|Public|BlueprintCallable) // @ game+0x12dfeb0
};

// Class Tiger.TigerOutfitVendorUI
// Size: 0x3c8 (Inherited: 0x3b0)
struct UTigerOutfitVendorUI : UTigerSceneBackgroundUI {
	struct UTigerVendorComponent* VendorComponent; // 0x3b0(0x08)
	struct UTigerVendorStoreCategory* CurrentCategory; // 0x3b8(0x08)
	char pad_3C0[0x8]; // 0x3c0(0x08)

	void OnCategoryItemsReceived(enum class ETigerPersistentStoreCategory CategoryType, struct TArray<struct FTigerVendorStoreCategoryItem> CategoryItems); // Function Tiger.TigerOutfitVendorUI.OnCategoryItemsReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnBuyItemResponseBP(SoftClassProperty ItemClassPath, struct FString ErrorMessage, int32_t InventoryCount); // Function Tiger.TigerOutfitVendorUI.OnBuyItemResponseBP // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnBuyItemResponse(bool bInSuccess, struct FTigerItemId InItemId, struct FString InErrorMessage); // Function Tiger.TigerOutfitVendorUI.OnBuyItemResponse // (Final|Native|Protected|HasOutParms) // @ game+0x12e0d90
	void GetStoreCategoriesResponse(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerOutfitVendorUI.GetStoreCategoriesResponse // (Final|Native|Protected) // @ game+0x12e0750
	void FetchCategoryItems(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerOutfitVendorUI.FetchCategoryItems // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0400
	struct FTigerVendorStoreCategoryItem CreateStoreCategoryItemFromStoreEntry(struct FTigerMetaStoreEntry InStoreEntry); // Function Tiger.TigerOutfitVendorUI.CreateStoreCategoryItemFromStoreEntry // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dff70
	void BuyItem(struct FTigerItemId InItemId, struct FTigerItemId InSoftCurrencyId); // Function Tiger.TigerOutfitVendorUI.BuyItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x12dfde0
};

// Class Tiger.TigerOutlineComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerOutlineComponent : UActorComponent {
	enum class ETigerOutlineMode CurrentMode; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	int32_t StencilValue; // 0xb4(0x04)
	int32_t LocalPlayerStencilValue; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct FMulticastInlineDelegate OnOutlineModeRefreshed; // 0xc0(0x10)
	struct TArray<struct UMeshComponent*> OutlineMeshes; // 0xd0(0x10)
	uint16_t OutlinesToPauseWhenHidden; // 0xe0(0x02)
	uint16_t OutlinesToPauseWhenBehindTrapGas; // 0xe2(0x02)
	char pad_E4[0xc]; // 0xe4(0x0c)

	void SetShouldUseCustomDepth(bool bInShouldUseCustomDepth); // Function Tiger.TigerOutlineComponent.SetShouldUseCustomDepth // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1970
	void RegisterOutlineMesh(struct UMeshComponent* InMesh); // Function Tiger.TigerOutlineComponent.RegisterOutlineMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0fa0
	void OnOutlineModeRefreshed__DelegateSignature(enum class ETigerOutlineMode HighestPrioOutline); // DelegateFunction Tiger.TigerOutlineComponent.OnOutlineModeRefreshed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	bool IsOutlineActivated(enum class ETigerOutlineMode InMode); // Function Tiger.TigerOutlineComponent.IsOutlineActivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e0b90
	bool IsHidden(); // Function Tiger.TigerOutlineComponent.IsHidden // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e0b70
	bool IsBehindTrapGas(); // Function Tiger.TigerOutlineComponent.IsBehindTrapGas // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e0b50
	bool HasOutline(); // Function Tiger.TigerOutlineComponent.HasOutline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e0980
	void DeactivateOutline(enum class ETigerOutlineMode InMode); // Function Tiger.TigerOutlineComponent.DeactivateOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0180
	void ActivateOutline(enum class ETigerOutlineMode InMode); // Function Tiger.TigerOutlineComponent.ActivateOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x12dfb30
};

// Class Tiger.TigerPaperDoll
// Size: 0x620 (Inherited: 0x228)
struct ATigerPaperDoll : AActor {
	struct UTigerCharacterMeshManager* MeshManager; // 0x228(0x08)
	struct TWeakObjectPtr<struct ATigerPlayerState> TigerPlayerState; // 0x230(0x08)
	struct UTigerNpcPropComponent* PropComponent; // 0x238(0x08)
	struct USceneComponent* PlayerAttachment; // 0x240(0x08)
	struct USkeletalMeshComponent* BodySkelMesh; // 0x248(0x08)
	struct USkeletalMeshComponent* HeadSkelMesh; // 0x250(0x08)
	struct USkeletalMeshComponent* HoodieSkelMesh; // 0x258(0x08)
	struct USkeletalMeshComponent* HairSkelMesh; // 0x260(0x08)
	struct USkeletalMeshComponent* HeadgearMesh; // 0x268(0x08)
	struct USkeletalMeshComponent* EyewearMesh; // 0x270(0x08)
	struct USkeletalMeshComponent* BeardSkelMesh; // 0x278(0x08)
	struct USkeletalMeshComponent* BodyAdditionalMesh; // 0x280(0x08)
	struct FTigerPreviewerData StartupAppearance; // 0x288(0x2b0)
	bool bRegisterWithPlayerController; // 0x538(0x01)
	char pad_539[0x7]; // 0x539(0x07)
	struct UTigerCharCustomizationComponent* CharacterCustomization; // 0x540(0x08)
	struct UTigerPlayerClanData* PlayerClan; // 0x548(0x08)
	struct UCameraComponent* CameraComponent; // 0x550(0x08)
	struct UAnimInstance* PlayerAnimInstanceClass; // 0x558(0x08)
	struct USceneCaptureComponent2D* SceneCapture; // 0x560(0x08)
	struct ATigerPlayerCameraManager* CameraManager; // 0x568(0x08)
	bool bUseFreeCam; // 0x570(0x01)
	char pad_571[0x3]; // 0x571(0x03)
	float DefaultCameraLerpSpeed; // 0x574(0x04)
	struct FVector CamerasOffset[0xb]; // 0x578(0x84)
	struct FVector CameraTargetOffset; // 0x5fc(0x0c)
	struct FMulticastInlineDelegate OnStartupAppearanceApplied; // 0x608(0x10)
	char pad_618[0x8]; // 0x618(0x08)

	void ShowPaperdollFromCharacter(struct ATigerCharacter* Character); // Function Tiger.TigerPaperDoll.ShowPaperdollFromCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1b50
	void ShowPaperDoll(); // Function Tiger.TigerPaperDoll.ShowPaperDoll // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1b30
	void ShowCharacter(struct FTigerPersistentPlayerCharacter Character); // Function Tiger.TigerPaperDoll.ShowCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e1a00
	void SetPlayerState(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPaperDoll.SetPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x12e18e0
	void SetCameraTargetOffset(struct FVector InCameraTargetOffset, bool bAnimateCamera); // Function Tiger.TigerPaperDoll.SetCameraTargetOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12e1700
	void SetCameraFocus(enum class ETigerCustomizePart CustomizePart, bool bAnimateCamera); // Function Tiger.TigerPaperDoll.SetCameraFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1630
	void SetAppearanceFromPlayerState(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPaperDoll.SetAppearanceFromPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x12e15a0
	void SetAppearanceDataWithItemOverride(struct FTigerPreviewerData InPreviewAppearance, enum class ETigerClan InClanType, SoftClassProperty InItemOverrideClass); // Function Tiger.TigerPaperDoll.SetAppearanceDataWithItemOverride // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e13c0
	void SetAppearanceAndOutfit(struct FTigerCharacterAppearance Appearance, SoftClassProperty OutfitClassPath); // Function Tiger.TigerPaperDoll.SetAppearanceAndOutfit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e1270
	void SetAppearanceAndClan(struct FTigerCharacterAppearance Appearance, struct UTigerPlayerClanData* ClanData, struct FDelegate Delegate); // Function Tiger.TigerPaperDoll.SetAppearanceAndClan // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e10f0
	void SetAppearance(struct FTigerCharacterAppearance Appearance); // Function Tiger.TigerPaperDoll.SetAppearance // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e1030
	void PreNewCharacterSelected(); // Function Tiger.TigerPaperDoll.PreNewCharacterSelected // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void PostNewCharacterSelected(); // Function Tiger.TigerPaperDoll.PostNewCharacterSelected // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnStartupAppearanceApplied__DelegateSignature(); // DelegateFunction Tiger.TigerPaperDoll.OnStartupAppearanceApplied__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnDynamicAppearanceLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPaperDoll.OnDynamicAppearanceLoaded__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	void HidePaperdoll(); // Function Tiger.TigerPaperDoll.HidePaperdoll // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0a50
	struct UTigerAnimInstance* GetTigerAnimInstance(); // Function Tiger.TigerPaperDoll.GetTigerAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e07d0
	enum class ETigerGender GetBodyType(); // Function Tiger.TigerPaperDoll.GetBodyType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e0500
	void ApplyStartupAppearance(struct UTigerCharCustomizationComponent* InCustomizationComponent); // Function Tiger.TigerPaperDoll.ApplyStartupAppearance // (Final|Native|Protected|BlueprintCallable) // @ game+0x12dfc50
	bool ApplyEditorAppearance(struct UTigerCharCustomizationComponent* CustomizationComponent); // Function Tiger.TigerPaperDoll.ApplyEditorAppearance // (Final|Native|Protected|BlueprintCallable) // @ game+0x12dfbb0
};

// Class Tiger.TigerPaperDollAnimInstance
// Size: 0x3c0 (Inherited: 0x3c0)
struct UTigerPaperDollAnimInstance : UTigerAnimInstance {
	struct FName DefaultSequenceName; // 0x3b8(0x08)
};

// Class Tiger.TigerParticleStrategyChooseSystem
// Size: 0x28 (Inherited: 0x28)
struct UTigerParticleStrategyChooseSystem : UTigerParticleStrategy {

	struct UParticleSystem* ChooseSpawningSystem(struct ATigerCharacter* InParticleInstigator); // Function Tiger.TigerParticleStrategyChooseSystem.ChooseSpawningSystem // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x12e5750
};

// Class Tiger.TigerPartyInvite
// Size: 0x70 (Inherited: 0x28)
struct UTigerPartyInvite : UObject {
	struct FTigerInviteId ID; // 0x28(0x10)
	struct FTigerPersistentPlayerID HostId; // 0x38(0x10)
	struct FString HostDisplayName; // 0x48(0x10)
	char pad_58[0x18]; // 0x58(0x18)
};

// Class Tiger.TigerPartyManager
// Size: 0x250 (Inherited: 0x28)
struct UTigerPartyManager : UObject {
	struct FMulticastInlineDelegate OnInviteReceived; // 0x28(0x10)
	struct FMulticastInlineDelegate OnInviteRemoved; // 0x38(0x10)
	struct FMulticastInlineDelegate OnJoinedParty; // 0x48(0x10)
	struct FMulticastInlineDelegate OnLeftParty; // 0x58(0x10)
	struct FMulticastInlineDelegate OnMemberJoinedParty; // 0x68(0x10)
	struct FMulticastInlineDelegate OnMemberLeftParty; // 0x78(0x10)
	struct FMulticastInlineDelegate OnLeaderChanged; // 0x88(0x10)
	struct FMulticastInlineDelegate OnInviteAccepted; // 0x98(0x10)
	struct FMulticastInlineDelegate OnInviteDeclined; // 0xa8(0x10)
	struct FMulticastInlineDelegate OnPartyUpdated; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnInviteFailed; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnAcceptInviteFailed; // 0xd8(0x10)
	struct FMulticastInlineDelegate OnSessionAvailable; // 0xe8(0x10)
	struct FMulticastInlineDelegate OnCreateGameSessionFailed; // 0xf8(0x10)
	struct TWeakObjectPtr<struct UTigerGameInstance> GameInstance; // 0x108(0x08)
	struct TArray<struct UTigerUser*> PartyMembers; // 0x110(0x10)
	struct TArray<struct UTigerPartyInvite*> Invites; // 0x120(0x10)
	float TravelTimeoutSeconds; // 0x130(0x04)
	float MaxInviteAgeSeconds; // 0x134(0x04)
	int32_t MaxInvites; // 0x138(0x04)
	char pad_13C[0xc]; // 0x13c(0x0c)
	struct UTigerPartyService* PartyService; // 0x148(0x08)
	char pad_150[0x98]; // 0x150(0x98)
	struct TMap<struct FString, double> LatestInviteAttemptTimestamps; // 0x1e8(0x50)
	float DefaultInviteCooldown; // 0x238(0x04)
	float DeclinedInviteCooldown; // 0x23c(0x04)
	char pad_240[0x10]; // 0x240(0x10)

	bool TravelToPartyElysium(); // Function Tiger.TigerPartyManager.TravelToPartyElysium // (Final|Native|Public|BlueprintCallable) // @ game+0x12e6220
	void TigerPartyInvite(struct FString InPlayerId); // Function Tiger.TigerPartyManager.TigerPartyInvite // (Final|Exec|Native|Public) // @ game+0x12646e0
	void TigerPartyDump(); // Function Tiger.TigerPartyManager.TigerPartyDump // (Final|Exec|Native|Public) // @ game+0xb45020
	void RequestPartyUpdate(); // Function Tiger.TigerPartyManager.RequestPartyUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x12e6120
	void RequestPartyCheck(); // Function Tiger.TigerPartyManager.RequestPartyCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x12e6100
	void RemoveInvitesOfPlayer(struct FTigerPersistentPlayerID InPlayerId); // Function Tiger.TigerPartyManager.RemoveInvitesOfPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e6050
	void RemoveExpiredInvites(); // Function Tiger.TigerPartyManager.RemoveExpiredInvites // (Final|Native|Public|BlueprintCallable) // @ game+0x12e6030
	bool PartyHasSelectedElysium(); // Function Tiger.TigerPartyManager.PartyHasSelectedElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12e6000
	void OnSessionAvailableDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnSessionAvailableDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPartyUpdatedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnPartyUpdatedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnMemberLeftDelegate__DelegateSignature(struct FTigerPartyId InPartyId, struct FString InDepartingPlayerId); // DelegateFunction Tiger.TigerPartyManager.OnMemberLeftDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnMemberJoinedDelegate__DelegateSignature(struct FTigerPartyId InPartyId, struct FString InJoiningPlayerId); // DelegateFunction Tiger.TigerPartyManager.OnMemberJoinedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnLeftPartyDelegate__DelegateSignature(struct FTigerParty InParty); // DelegateFunction Tiger.TigerPartyManager.OnLeftPartyDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnLeaderChangedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnLeaderChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnJoinPartyFailedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnJoinPartyFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnJoinedPartyDelegate__DelegateSignature(struct FTigerParty InParty); // DelegateFunction Tiger.TigerPartyManager.OnJoinedPartyDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnInviteFailedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnInviteFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnInviteDeclinedDelegate__DelegateSignature(struct FTigerInviteId InInviteId); // DelegateFunction Tiger.TigerPartyManager.OnInviteDeclinedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnInviteActionDelegate__DelegateSignature(struct UTigerPartyInvite* InInvite); // DelegateFunction Tiger.TigerPartyManager.OnInviteActionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnInviteAcceptedDelegate__DelegateSignature(struct FTigerInviteId InInviteId); // DelegateFunction Tiger.TigerPartyManager.OnInviteAcceptedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnCreateGameSessionFailedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnCreateGameSessionFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnAcceptInviteFailedDelegate__DelegateSignature(struct FTigerInviteId InInviteId); // DelegateFunction Tiger.TigerPartyManager.OnAcceptInviteFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void LeaveParty(); // Function Tiger.TigerPartyManager.LeaveParty // (Final|Native|Public|BlueprintCallable) // @ game+0x12e5fa0
	bool IsPartyFull(); // Function Tiger.TigerPartyManager.IsPartyFull // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12e5f40
	bool IsLeader(struct FString InPlayerId); // Function Tiger.TigerPartyManager.IsLeader // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12e5e90
	bool IsInParty(); // Function Tiger.TigerPartyManager.IsInParty // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12e5e60
	void InviteByPlayerId(struct FTigerPersistentPlayerID InPlayerId); // Function Tiger.TigerPartyManager.InviteByPlayerId // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e5d80
	void Invite(struct UTigerUser* InUser); // Function Tiger.TigerPartyManager.Invite // (Final|Native|Public|BlueprintCallable) // @ game+0x12e5cf0
	struct FTigerPartyId GetPartyId(); // Function Tiger.TigerPartyManager.GetPartyId // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12e5c50
	float GetInvitePlayerCooldown(struct FTigerPersistentPlayerID InPlayerId); // Function Tiger.TigerPartyManager.GetInvitePlayerCooldown // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e5b90
	void DeclineInvite(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerPartyManager.DeclineInvite // (Final|Native|Public|BlueprintCallable) // @ game+0x12e5a30
	void CreateGameSession(struct FTigerBpFindSessionSelectedSession InGameSession); // Function Tiger.TigerPartyManager.CreateGameSession // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e57f0
	void AcceptInvite(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerPartyManager.AcceptInvite // (Final|Native|Public|BlueprintCallable) // @ game+0x12e56c0
};

// Class Tiger.TigerPartyService
// Size: 0x40 (Inherited: 0x28)
struct UTigerPartyService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerPassionProjectile
// Size: 0x288 (Inherited: 0x228)
struct ATigerPassionProjectile : AActor {
	struct FVector TargetLocation; // 0x228(0x0c)
	struct FVector Velocity; // 0x234(0x0c)
	float ScaledSpeedValue; // 0x240(0x04)
	float BuffDuration; // 0x244(0x04)
	float BuffStrength; // 0x248(0x04)
	float TimeUntilParticleFadeTiemout; // 0x24c(0x04)
	struct FTimerHandle TimerHandle; // 0x250(0x08)
	char Effect; // 0x258(0x01)
	bool bIsMoving; // 0x259(0x01)
	bool bTurnOnCollision; // 0x25a(0x01)
	char pad_25B[0x5]; // 0x25b(0x05)
	struct ATigerCharacter* TigerCharacterOwner; // 0x260(0x08)
	struct UTigerDisciplinePassion* PassionDiscipline; // 0x268(0x08)
	struct UTigerPassionConfig* ConfigType; // 0x270(0x08)
	struct UBoxComponent* Box; // 0x278(0x08)
	struct UParticleSystemComponent* ParticleComp; // 0x280(0x08)

	void Server_DestroyProjectile(); // Function Tiger.TigerPassionProjectile.Server_DestroyProjectile // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12e6140
	void OnRep_TargetLocation(); // Function Tiger.TigerPassionProjectile.OnRep_TargetLocation // (Final|Native|Private) // @ game+0x12e5fe0
	void OnRep_Effect(); // Function Tiger.TigerPassionProjectile.OnRep_Effect // (Final|Native|Private) // @ game+0x12e5fc0
};

// Class Tiger.TigerPassiveOverpower
// Size: 0x138 (Inherited: 0x138)
struct UTigerPassiveOverpower : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveAdrenalineRushConfig
// Size: 0x148 (Inherited: 0x138)
struct UTigerPassiveAdrenalineRushConfig : UTigerPassiveConfig {
	struct UTigerBuffAdrenalineRush* OnEnemyWithinRadiusBuff; // 0x138(0x08)
	float RadiusInUnits; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
};

// Class Tiger.TigerPassiveAdrenalineRushLogicComponent
// Size: 0x198 (Inherited: 0x178)
struct UTigerPassiveAdrenalineRushLogicComponent : UTigerPassiveArchetypeLogic {
	struct UTigerPassiveAdrenalineRushConfig* PassiveConfig; // 0x178(0x08)
	char pad_180[0x18]; // 0x180(0x18)
};

// Class Tiger.TigerPassiveAHuntForPleasure
// Size: 0x140 (Inherited: 0x138)
struct UTigerPassiveAHuntForPleasure : UTigerPassiveConfig {
	float MinEffectDistance; // 0x138(0x04)
	float MaxEffectDistance; // 0x13c(0x04)
};

// Class Tiger.TigerPassiveCollectorConfig
// Size: 0x140 (Inherited: 0x138)
struct UTigerPassiveCollectorConfig : UTigerPassiveConfig {
	float CarryCapacityMultiplier; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
};

// Class Tiger.TigerPassiveColossalStrength
// Size: 0x140 (Inherited: 0x138)
struct UTigerPassiveColossalStrength : UTigerPassiveConfig {
	float UnarmedDamageMultiplier; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
};

// Class Tiger.TigerPassiveEnragedConfig
// Size: 0x170 (Inherited: 0x138)
struct UTigerPassiveEnragedConfig : UTigerPassiveConfig {
	struct UAnimMontage* ActivationMontage; // 0x138(0x08)
	struct ATigerEnragedEffectActor* EffectActor; // 0x140(0x08)
	float EffectActorDestructionDelay; // 0x148(0x04)
	char pad_14C[0x4]; // 0x14c(0x04)
	struct UTigerBuff* OnHitBuff; // 0x150(0x08)
	float DisciplineDamageMultiplier; // 0x158(0x04)
	float RegenSpeed; // 0x15c(0x04)
	float RegenDelay; // 0x160(0x04)
	float HealthPercentThreshold; // 0x164(0x04)
	bool bUseBaseHealthPercent; // 0x168(0x01)
	bool bDamageMultiplierOneTimeUse; // 0x169(0x01)
	char pad_16A[0x6]; // 0x16a(0x06)
};

// Class Tiger.TigerPassiveEnragedLogic
// Size: 0xd8 (Inherited: 0xc0)
struct UTigerPassiveEnragedLogic : UTigerPassiveComponent {
	struct UTigerPassiveEnragedConfig* Config; // 0xc0(0x08)
	struct ATigerEnragedEffectActor* EffectActor; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)

	bool IsEnraged(); // Function Tiger.TigerPassiveEnragedLogic.IsEnraged // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e5e30
};

// Class Tiger.TigerPassiveFinalActConfig
// Size: 0x138 (Inherited: 0x138)
struct UTigerPassiveFinalActConfig : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveFinalActLogic
// Size: 0xc0 (Inherited: 0xc0)
struct UTigerPassiveFinalActLogic : UTigerPassiveComponent {
};

// Class Tiger.TigerPassiveHideousConfig
// Size: 0x148 (Inherited: 0x138)
struct UTigerPassiveHideousConfig : UTigerPassiveConfig {
	float TimeUntilMasqueradeTicks; // 0x138(0x04)
	float HideousReachDistance; // 0x13c(0x04)
	struct UCurveFloat* ScaleCurve; // 0x140(0x08)
};

// Class Tiger.TigerPassiveHideousLogic
// Size: 0x120 (Inherited: 0xc0)
struct UTigerPassiveHideousLogic : UTigerPassiveComponent {
	struct UTigerPassiveHideousConfig* Config; // 0xc0(0x08)
	struct TMap<struct ATigerBaseNPC*, struct FHideousTimingData> TimingData; // 0xc8(0x50)
	struct ATigerPlayer* Player; // 0x118(0x08)
};

// Class Tiger.TigerPassiveKindredCharmConfig
// Size: 0x190 (Inherited: 0x138)
struct UTigerPassiveKindredCharmConfig : UTigerPassiveConfig {
	struct ATigerKindredCharmEffectActor* EffectActor; // 0x138(0x08)
	struct FName EffectSocketR; // 0x140(0x08)
	struct FName EffectSocketL; // 0x148(0x08)
	struct TArray<float> CharmCountCooldownSpeed; // 0x150(0x10)
	int32_t MaxCharmedCharacterCount; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
	struct UTigerBuffKindredCharm* CharmBuff; // 0x168(0x08)
	float PlayerPulseRange; // 0x170(0x04)
	float PlayerPulseInterval; // 0x174(0x04)
	float BuffDuration; // 0x178(0x04)
	float NpcDamageBreakCharmRadius; // 0x17c(0x04)
	float NpcDamageBreakCharmThreshold; // 0x180(0x04)
	float NpcDamageBreakCharmImmunityTime; // 0x184(0x04)
	float CharmedFeedingSpeedMultiplier; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
};

// Class Tiger.TigerPassiveKindredCharmLogic
// Size: 0xe8 (Inherited: 0xc0)
struct UTigerPassiveKindredCharmLogic : UTigerPassiveComponent {
	struct UTigerPassiveKindredCharmConfig* Config; // 0xc0(0x08)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	struct ATigerKindredCharmEffectActor* EffectActorR; // 0xd0(0x08)
	struct ATigerKindredCharmEffectActor* EffectActorL; // 0xd8(0x08)
	char pad_E0[0x8]; // 0xe0(0x08)

	int32_t GetKindredCharmCount(); // Function Tiger.TigerPassiveKindredCharmLogic.GetKindredCharmCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee600
};

// Class Tiger.TigerPassiveMomentum
// Size: 0x138 (Inherited: 0x138)
struct UTigerPassiveMomentum : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveMomentumLogicComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UTigerPassiveMomentumLogicComponent : UTigerPassiveComponent {
	float CoolDownReduction; // 0xc0(0x04)
	float PassiveCoolDown; // 0xc4(0x04)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	float EndTime; // 0xd0(0x04)
	bool bIsInCooldown; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
};

// Class Tiger.TigerPassiveNightstalkerConfig
// Size: 0x170 (Inherited: 0x138)
struct UTigerPassiveNightstalkerConfig : UTigerPassiveConfig {
	float CrouchedTimeUntilUnseen; // 0x138(0x04)
	float CrouchedTimePerAdditionalPowerLevel; // 0x13c(0x04)
	struct TArray<struct UTigerBuffUnseenPresence*> InvisibilityBuff; // 0x140(0x10)
	struct FTigerSightConfigProperties OverrideSightProperties; // 0x150(0x1c)
	char pad_16C[0x4]; // 0x16c(0x04)
};

// Class Tiger.TigerPassiveNightstalkerLogic
// Size: 0x190 (Inherited: 0x178)
struct UTigerPassiveNightstalkerLogic : UTigerPassiveArchetypeLogic {
	struct UTigerPassiveNightstalkerConfig* Config; // 0x178(0x08)
	char pad_180[0x10]; // 0x180(0x10)

	void OnCharacterAction(enum class ETigerCharacterAction Action); // Function Tiger.TigerPassiveNightstalkerLogic.OnCharacterAction // (Final|Native|Public) // @ game+0x12ef620
	void OnBuffRemoved(struct UTigerBuff* BuffType, int32_t ID, float Duration); // Function Tiger.TigerPassiveNightstalkerLogic.OnBuffRemoved // (Final|Native|Public) // @ game+0x12ef500
	void OnBuffAdded(struct UTigerBuff* BuffType, int32_t ID, float Duration); // Function Tiger.TigerPassiveNightstalkerLogic.OnBuffAdded // (Final|Native|Public) // @ game+0x12ef3e0
};

// Class Tiger.TigerPassiveUnbridledRageConfig
// Size: 0x140 (Inherited: 0x138)
struct UTigerPassiveUnbridledRageConfig : UTigerPassiveConfig {
	float MinimumLoudnessMultiplier; // 0x138(0x04)
	float MaximumLoudnessMultiplier; // 0x13c(0x04)
};

// Class Tiger.TigerPassiveUnbridledRageLogic
// Size: 0x188 (Inherited: 0xc0)
struct UTigerPassiveUnbridledRageLogic : UTigerPassiveComponent {
	struct UTigerPassiveUnbridledRageConfig* Config; // 0xc0(0x08)
	struct ATigerPlayer* Player; // 0xc8(0x08)
	char pad_D0[0xb8]; // 0xd0(0xb8)
};

// Class Tiger.TigerBuffUnseenPresenceInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffUnseenPresenceInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)

	void UpdateInvisibilityMaterial(float DeltaTime, struct ATigerPlayer* Player, struct UMaterialInstanceDynamic* MaterialInstance); // Function Tiger.TigerBuffUnseenPresenceInstance.UpdateInvisibilityMaterial // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerBuffUnseenPresence
// Size: 0x288 (Inherited: 0x270)
struct UTigerBuffUnseenPresence : UTigerBuff {
	struct UTigerBuffUnseenPresenceInstance* BuffInstanceClass; // 0x270(0x08)
	struct UAkAudioEvent* NearbySound; // 0x278(0x08)
	float NearbySoundPlayDistanceSquared; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
};

// Class Tiger.TigerPassiveVoiceOfInspirationConfig
// Size: 0x138 (Inherited: 0x138)
struct UTigerPassiveVoiceOfInspirationConfig : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveVoiceOfInspirationLogic
// Size: 0x180 (Inherited: 0x178)
struct UTigerPassiveVoiceOfInspirationLogic : UTigerPassiveArchetypeLogic {
	struct UTigerBuff* ActiveBuff; // 0x178(0x08)
};

// Class Tiger.TigerPathFollowingComponent
// Size: 0x298 (Inherited: 0x298)
struct UTigerPathFollowingComponent : UCrowdFollowingComponent {
};

// Class Tiger.TigerCharacterSlotExpansion
// Size: 0x110 (Inherited: 0x110)
struct UTigerCharacterSlotExpansion : UTigerInventoryItemBase {
};

// Class Tiger.TigerConsumableInventoryItemBase
// Size: 0x118 (Inherited: 0x110)
struct UTigerConsumableInventoryItemBase : UTigerInventoryItemBase {
	int32_t Count; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
};

// Class Tiger.TigerPremiumCurrencyPack
// Size: 0x118 (Inherited: 0x118)
struct UTigerPremiumCurrencyPack : UTigerConsumableInventoryItemBase {
};

// Class Tiger.TigerSeasonExpPack
// Size: 0x118 (Inherited: 0x118)
struct UTigerSeasonExpPack : UTigerConsumableInventoryItemBase {

	int32_t GetExpRewardAmount(); // Function Tiger.TigerSeasonExpPack.GetExpRewardAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee2e0
};

// Class Tiger.TigerSeasonPlacementExpBoostPercentage
// Size: 0x118 (Inherited: 0x118)
struct UTigerSeasonPlacementExpBoostPercentage : UTigerConsumableInventoryItemBase {
};

// Class Tiger.TigerSeasonRankSkip
// Size: 0x118 (Inherited: 0x118)
struct UTigerSeasonRankSkip : UTigerConsumableInventoryItemBase {
};

// Class Tiger.TigerBattlepassItem
// Size: 0x118 (Inherited: 0x110)
struct UTigerBattlepassItem : UTigerInventoryItemBase {
	int32_t SeasonId; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
};

// Class Tiger.TigerSoftCurrency
// Size: 0x110 (Inherited: 0x110)
struct UTigerSoftCurrency : UTigerInventoryItemBase {
};

// Class Tiger.TigerInventoryItemPack
// Size: 0x120 (Inherited: 0x118)
struct UTigerInventoryItemPack : UTigerConsumableInventoryItemBase {
	struct FTigerItemId ItemId; // 0x118(0x08)
};

// Class Tiger.TigerServerCallbacks
// Size: 0x28 (Inherited: 0x28)
struct UTigerServerCallbacks : UInterface {

	void OnLoginSucceeded(struct TArray<struct FTigerPersistentPlayerCharacter> AvailableCharacters); // Function Tiger.TigerServerCallbacks.OnLoginSucceeded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnLoginFailed(struct FTigerLoginFailedInfo InLoginFailedInfo); // Function Tiger.TigerServerCallbacks.OnLoginFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnGetValidGameVersionResult(enum class ETigerVersionIsValidResult Result); // Function Tiger.TigerServerCallbacks.OnGetValidGameVersionResult // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnCreateCharacterResult(struct FTigerPersistentCharacterID CharacterId, bool bWasCharacterCreated); // Function Tiger.TigerServerCallbacks.OnCreateCharacterResult // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnCharacterSelected(); // Function Tiger.TigerServerCallbacks.OnCharacterSelected // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerPersistentPlayerState
// Size: 0x5c0 (Inherited: 0xb0)
struct UTigerPersistentPlayerState : UActorComponent {
	char pad_B0[0x28]; // 0xb0(0x28)
	struct FMulticastInlineDelegate OnDailyChallengesInitializedEvent; // 0xd8(0x10)
	struct FMulticastInlineDelegate OnRewardsLoaded; // 0xe8(0x10)
	struct FMulticastInlineDelegate OnClientTransactionalPlayerDataChangedEvent; // 0xf8(0x10)
	struct FMulticastInlineDelegate OnClientPlayerInventoryChanged; // 0x108(0x10)
	struct FMulticastInlineDelegate OnSelectedCharacterChanged; // 0x118(0x10)
	struct FMulticastInlineDelegate OnChallengeProgressUpdated; // 0x128(0x10)
	char pad_138[0x48]; // 0x138(0x48)
	struct FMulticastInlineDelegate OnSeasonLevelGained; // 0x180(0x10)
	struct UTigerThrallSystem* PlayerThrallSystem; // 0x190(0x08)
	struct UTigerCollectibleSystem* PlayerCollectibleSystem; // 0x198(0x08)
	char pad_1A0[0x10]; // 0x1a0(0x10)
	struct UObject* ServerCallbacks; // 0x1b0(0x08)
	char pad_1B8[0x20]; // 0x1b8(0x20)
	struct FSharkUserId SharkmobUserId; // 0x1d8(0x10)
	struct FTigerPersistentPlayerID PersistentPlayerID; // 0x1e8(0x10)
	enum class EShAccountChannel AccountChannel; // 0x1f8(0x01)
	char pad_1F9[0x15f]; // 0x1f9(0x15f)
	struct TArray<struct FTigerPersistentPlayerCharacter> CachedPlayerCharacters; // 0x358(0x10)
	struct TMap<struct FString, struct UTigerQuestline*> ActiveQuests; // 0x368(0x50)
	struct TMap<struct FString, struct UTigerQuestline*> CompletedQuests; // 0x3b8(0x50)
	char pad_408[0xb0]; // 0x408(0xb0)
	struct TMap<struct FTigerChallengeTypeID, struct UTigerChallenge*> DailyChallenges; // 0x4b8(0x50)
	struct TMap<struct FTigerChallengeInstanceID, struct UTigerChallenge*> SeasonalChallenges; // 0x508(0x50)
	struct TMap<struct FTigerChallengeInstanceID, int32_t> PendingWeeklyChallengeUpdates; // 0x558(0x50)
	char pad_5A8[0x18]; // 0x5a8(0x18)

	void TryLoginAutomatically(struct FTigerLoginQueueToken InLoginQueueToken, struct UObject* InCallbacks); // Function Tiger.TigerPersistentPlayerState.TryLoginAutomatically // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12f0fc0
	bool TryGetSelectedCharacter(struct FTigerPersistentPlayerCharacter OutSelectedCharacter); // Function Tiger.TigerPersistentPlayerState.TryGetSelectedCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12f0e60
	void TransactionalPlayerDataChanged__DelegateSignature(struct FTigerPersistentPlayerTransactionalData TransactionalPlayerData); // DelegateFunction Tiger.TigerPersistentPlayerState.TransactionalPlayerDataChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void TigerDelegateChallengeProgressUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.TigerDelegateChallengeProgressUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void SwitchCharacter(struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.SwitchCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12f0dd0
	bool SetCallbackObject(struct UObject* Callbacks); // Function Tiger.TigerPersistentPlayerState.SetCallbackObject // (Final|Native|Public|BlueprintCallable) // @ game+0x12f0d30
	void Server_UpdateQuestProgress(); // Function Tiger.TigerPersistentPlayerState.Server_UpdateQuestProgress // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x12f0d10
	void Server_UpdatePersistentThralls(); // Function Tiger.TigerPersistentPlayerState.Server_UpdatePersistentThralls // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0cc0
	void Server_UpdateOngoingCollectibles(); // Function Tiger.TigerPersistentPlayerState.Server_UpdateOngoingCollectibles // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0c70
	void Server_UpdateGrimoireSuggestedArticlesData(uint32_t InDay, struct TArray<struct FString> InEntryIds); // Function Tiger.TigerPersistentPlayerState.Server_UpdateGrimoireSuggestedArticlesData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0b40
	void Server_UpdateActiveThrallMissions(); // Function Tiger.TigerPersistentPlayerState.Server_UpdateActiveThrallMissions // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0af0
	void Server_SwitchCharacter(struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.Server_SwitchCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0a40
	void Server_StartNewQuest(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.Server_StartNewQuest // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0920
	void Server_ResetReadDialogue(); // Function Tiger.TigerPersistentPlayerState.Server_ResetReadDialogue // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f08d0
	void Server_RegisterGrimoireEntryAsRead(uint32_t InGrimoireEntryId, bool bInForce); // Function Tiger.TigerPersistentPlayerState.Server_RegisterGrimoireEntryAsRead // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f07d0
	void Server_RefreshPremiumCurrencyBalance(); // Function Tiger.TigerPersistentPlayerState.Server_RefreshPremiumCurrencyBalance // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12f0780
	void Server_MarkDialogueAsRead(int32_t InDialogueId, struct FString InNpcIdentifier, char InCategory); // Function Tiger.TigerPersistentPlayerState.Server_MarkDialogueAsRead // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0620
	void Server_ForceCompleteQuest(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.Server_ForceCompleteQuest // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0500
	void Server_DeleteCharacter(struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.Server_DeleteCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0450
	void Server_CreateCharacter(struct FTigerPersistentPlayerCharacter InCharacter); // Function Tiger.TigerPersistentPlayerState.Server_CreateCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f0300
	void Server_ClearQuests(); // Function Tiger.TigerPersistentPlayerState.Server_ClearQuests // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12f02b0
	void Server_ChangeOutfit(int32_t InOutfitId); // Function Tiger.TigerPersistentPlayerState.Server_ChangeOutfit // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12f01f0
	void Server_BuyStoreEntries(struct FTigerMetaStoreBuyPayload InMetaStoreBuyPayload, int32_t InClientPurchaseId); // Function Tiger.TigerPersistentPlayerState.Server_BuyStoreEntries // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12f00e0
	void Server_BuyItem(struct FTigerItemId InItemId, struct FTigerItemId InSoftCurrencyId, int32_t InPurchaseId); // Function Tiger.TigerPersistentPlayerState.Server_BuyItem // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x12effa0
	void SelectCharacter(struct FTigerPersistentCharacterID InCharacterId); // Function Tiger.TigerPersistentPlayerState.SelectCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12eff10
	void RegisterUnlockedGrimoireSubEntriesAsRead(struct FString InGrimoireParentEntryId); // Function Tiger.TigerPersistentPlayerState.RegisterUnlockedGrimoireSubEntriesAsRead // (Final|Native|Public|BlueprintCallable) // @ game+0x12efe20
	void RegisterGrimoireEntryAsUnlocked(struct FString InGrimoireEntryId, bool bInForce); // Function Tiger.TigerPersistentPlayerState.RegisterGrimoireEntryAsUnlocked // (Final|Native|Public|BlueprintCallable) // @ game+0x12efcf0
	void RegisterGrimoireEntryAsRead(struct FString InGrimoireEntryId, bool bInForce); // Function Tiger.TigerPersistentPlayerState.RegisterGrimoireEntryAsRead // (Final|Native|Public|BlueprintCallable) // @ game+0x12efbc0
	void PlayerInventoryChanged__DelegateSignature(struct UTigerPersistentPlayerState* InPersistentPlayerState); // DelegateFunction Tiger.TigerPersistentPlayerState.PlayerInventoryChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void PlayerCharacterChanged__DelegateSignature(struct UTigerPersistentPlayerState* InPersistentPlayerState); // DelegateFunction Tiger.TigerPersistentPlayerState.PlayerCharacterChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OverridePlayerArchetypeForBenchmark(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerPersistentPlayerState.OverridePlayerArchetypeForBenchmark // (Final|Native|Public|BlueprintCallable) // @ game+0x12efb40
	void OnWeeklyChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnWeeklyChallengeValueChanged // (Final|Native|Private) // @ game+0x12efab0
	void OnSeasonLevelGained__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnSeasonLevelGained__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnRewardsLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnRewardsLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnRep_DailyChallenges(); // Function Tiger.TigerPersistentPlayerState.OnRep_DailyChallenges // (Final|Native|Private) // @ game+0x12efa90
	void OnPlatformLoginResultReceived(struct FSharkLoginResult InLoginResult); // Function Tiger.TigerPersistentPlayerState.OnPlatformLoginResultReceived // (Final|Native|Private) // @ game+0x12ef730
	void OnMutedStatusChanged__DelegateSignature(struct FTigerMuteInfo InMuteInfo); // DelegateFunction Tiger.TigerPersistentPlayerState.OnMutedStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnInitialised__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnInitialised__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnGetPlayerCharactersMulti__DelegateSignature(struct TArray<struct FTigerPersistentPlayerCharacter> InCharacters, struct FString InErrorString); // DelegateFunction Tiger.TigerPersistentPlayerState.OnGetPlayerCharactersMulti__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnGetPlayerCharacters__DelegateSignature(struct TArray<struct FTigerPersistentPlayerCharacter> InCharacters, struct FString InErrorString); // DelegateFunction Tiger.TigerPersistentPlayerState.OnGetPlayerCharacters__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnDailyChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnDailyChallengeValueChanged // (Final|Native|Private) // @ game+0x12ef6a0
	void OnDailyChallengesInitialized__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnDailyChallengesInitialized__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void LoginWithSharkmobAccount(struct UObject* InCallbacks, struct FTigerLoginQueueToken InLoginQueueToken, struct FSharkLoginResult InLoginDetails); // Function Tiger.TigerPersistentPlayerState.LoginWithSharkmobAccount // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12ef1e0
	bool IsQuestComplete(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.IsQuestComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x12ef060
	bool IsQuestActive(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.IsQuestActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eeee0
	bool IsItemInPlayerInventory(SoftClassProperty ItemClassPath); // Function Tiger.TigerPersistentPlayerState.IsItemInPlayerInventory // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eee10
	bool HasReachedSeasonMaxLevel(); // Function Tiger.TigerPersistentPlayerState.HasReachedSeasonMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eede0
	bool HasLoadedChallenges(); // Function Tiger.TigerPersistentPlayerState.HasLoadedChallenges // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12eeda0
	bool HasCurrentSeasonBattlepass(); // Function Tiger.TigerPersistentPlayerState.HasCurrentSeasonBattlepass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eed70
	bool HasCompletedInitialisation(); // Function Tiger.TigerPersistentPlayerState.HasCompletedInitialisation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eed40
	bool GrimoireEntryHasState(struct FString InGrimoireEntryId, enum class ETigerGrimoireEntryState InState); // Function Tiger.TigerPersistentPlayerState.GrimoireEntryHasState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eec50
	enum class ETigerVersionCheckStatus GetVersionCheckStatus(); // Function Tiger.TigerPersistentPlayerState.GetVersionCheckStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x12eec30
	struct FTigerPersistentPlayerTransactionalData GetTransactionalPlayerData(); // Function Tiger.TigerPersistentPlayerState.GetTransactionalPlayerData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee650
	struct FSharkUserId GetSharkmobUserId(); // Function Tiger.TigerPersistentPlayerState.GetSharkmobUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eebd0
	struct FTigerPersistentPlayerCharacter GetSelectedCharacter(); // Function Tiger.TigerPersistentPlayerState.GetSelectedCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eeba0
	struct TArray<struct UTigerQuest*> GetQuestsFromQuestlineOrdered(struct FString InQuestlineId); // Function Tiger.TigerPersistentPlayerState.GetQuestsFromQuestlineOrdered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12eeaa0
	struct FTigerPersistentPlayerID GetPlayerId(); // Function Tiger.TigerPersistentPlayerState.GetPlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee7b0
	struct FTigerPersistentPlayerData GetPlayerData(); // Function Tiger.TigerPersistentPlayerState.GetPlayerData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee780
	void GetPlayerCharacters(struct FDelegate InDelegate); // Function Tiger.TigerPersistentPlayerState.GetPlayerCharacters // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12ee6d0
	char GetNumCharacterSlots(); // Function Tiger.TigerPersistentPlayerState.GetNumCharacterSlots // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee680
	struct FTigerPersistentPlayerTransactionalData GetMutableTransactionalPlayerData(); // Function Tiger.TigerPersistentPlayerState.GetMutableTransactionalPlayerData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ee650
	enum class ETigerLoginStatus GetLoginStatus(); // Function Tiger.TigerPersistentPlayerState.GetLoginStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ee630
	int32_t GetInventoryItemCount(SoftClassProperty ItemClassPath); // Function Tiger.TigerPersistentPlayerState.GetInventoryItemCount // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee530
	struct FTigerSuggestedArticlesData GetGrimoireSuggestedArticlesData(); // Function Tiger.TigerPersistentPlayerState.GetGrimoireSuggestedArticlesData // (Final|Native|Public|BlueprintCallable) // @ game+0x12ee440
	enum class ETigerGrimoireEntryState GetGrimoireEntryState(struct FString InGrimoireEntryId); // Function Tiger.TigerPersistentPlayerState.GetGrimoireEntryState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee390
	struct TArray<struct FTigerGrimoireEntryStatusStruct> GetGrimoireEntries(); // Function Tiger.TigerPersistentPlayerState.GetGrimoireEntries // (Final|Native|Public|BlueprintCallable) // @ game+0x12ee310
	void GetCurrentSeasonLevelExperience(float OutLevelCurrentExperience, float OutExperienceRequiredBetweenLevels); // Function Tiger.TigerPersistentPlayerState.GetCurrentSeasonLevelExperience // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee200
	int32_t GetCurrentSeasonLevel(); // Function Tiger.TigerPersistentPlayerState.GetCurrentSeasonLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee1d0
	struct TArray<struct UTigerChallenge*> GetClosestChallengesToComplete(int32_t InNrOfChallenges); // Function Tiger.TigerPersistentPlayerState.GetClosestChallengesToComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee0f0
	struct FTigerPersistentArchetypeTransactionalData GetArchetypeDataForCharacterId(struct FTigerPersistentCharacterID InCharacterId); // Function Tiger.TigerPersistentPlayerState.GetArchetypeDataForCharacterId // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ee040
	struct TArray<struct FString> GetAllQuestlineIdsOrdered(); // Function Tiger.TigerPersistentPlayerState.GetAllQuestlineIdsOrdered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12edfc0
	bool FindOutfitSetup(SoftClassProperty OutfitClassPath, struct FTigerPersistentOutfitSetup OutfitSetup); // Function Tiger.TigerPersistentPlayerState.FindOutfitSetup // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12ede60
	void DeleteCharacter(struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.DeleteCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12eddd0
	void CreateCharacter(struct FTigerPersistentPlayerCharacter InCharacter); // Function Tiger.TigerPersistentPlayerState.CreateCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12edca0
	void Client_UpdateWeeklyChallenge(struct FTigerChallengeInstanceID InChallengeInstanceID, int32_t InNewValue); // Function Tiger.TigerPersistentPlayerState.Client_UpdateWeeklyChallenge // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12edbd0
	void Client_UpdateSeasonConfig(struct FTigerSeasonConfig InSeasonConfig, struct FDateTime InServerTime); // Function Tiger.TigerPersistentPlayerState.Client_UpdateSeasonConfig // (Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient) // @ game+0x12edad0
	void Client_UpdateDailyChallenge(struct FTigerChallengeTypeID InChallengeTypeID, int32_t InNewValue); // Function Tiger.TigerPersistentPlayerState.Client_UpdateDailyChallenge // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12eda00
	void Client_SetMuteStatus(struct FTigerMuteInfo InMuteInfo); // Function Tiger.TigerPersistentPlayerState.Client_SetMuteStatus // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12ed950
	void Client_SeasonLevelGained(); // Function Tiger.TigerPersistentPlayerState.Client_SeasonLevelGained // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x12ed900
	void Client_RefreshPremiumCurrencyBalanceResponse(bool bInSuccess, uint64_t InBalance); // Function Tiger.TigerPersistentPlayerState.Client_RefreshPremiumCurrencyBalanceResponse // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12ed830
	void Client_OnTransactionalPlayerDataUpdated(struct FTigerPersistentPlayerTransactionalData TransactionalData); // Function Tiger.TigerPersistentPlayerState.Client_OnTransactionalPlayerDataUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12ed6e0
	void Client_OnSeasonProgressUpdated(struct FTigerPersistentPlayerTransactionalData InTransactionalData); // Function Tiger.TigerPersistentPlayerState.Client_OnSeasonProgressUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12ed590
	void Client_OnPlayerDataUpdated(struct FTigerPersistentPlayerData PlayerData, struct FTigerPersistentPlayerCardData UpdatedPlayerCardData, bool bShowNotification); // Function Tiger.TigerPersistentPlayerState.Client_OnPlayerDataUpdated // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12ed430
	void Client_OnInitialPlayerDataReceived(); // Function Tiger.TigerPersistentPlayerState.Client_OnInitialPlayerDataReceived // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12d2210
	void Client_OnCharacterUpdated(struct FTigerPersistentPlayerCharacter CharacterInfo); // Function Tiger.TigerPersistentPlayerState.Client_OnCharacterUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12ed300
	void Client_OnBuyStoreEntriesResponse(int32_t InClientPurchaseId, struct FTigerBuyStoreEntryResponsePayload InBuyResponse, struct FDateTime InSeasonStartDate); // Function Tiger.TigerPersistentPlayerState.Client_OnBuyStoreEntriesResponse // (Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient) // @ game+0x12ed1c0
	void Client_NewItemRecievedInInventory(struct FTigerItemId InPersistentItemId); // Function Tiger.TigerPersistentPlayerState.Client_NewItemRecievedInInventory // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12ed130
	void Client_NewGrimoireEntryViewed(uint32_t InGrimoireEntryId); // Function Tiger.TigerPersistentPlayerState.Client_NewGrimoireEntryViewed // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12ed0a0
	void Client_DeleteCharacterResponse(bool bInCharacterWasDeleted, struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.Client_DeleteCharacterResponse // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12ecfd0
	void Client_CreateCharacterResponse(bool bInCharacterWasCreated, struct FTigerPersistentPlayerCharacter InCharacter); // Function Tiger.TigerPersistentPlayerState.Client_CreateCharacterResponse // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12ece40
	void Client_BuyItemResponse(bool bInSuccess, struct FTigerItemId InItemId, struct FString InErrorString, int32_t InPurchaseId); // Function Tiger.TigerPersistentPlayerState.Client_BuyItemResponse // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x12eccd0
	void CheckVersionValidity(struct UObject* Callbacks); // Function Tiger.TigerPersistentPlayerState.CheckVersionValidity // (Final|Native|Public|BlueprintCallable) // @ game+0x12ecc40
	void BuyStoreEntries(struct TArray<struct FTigerMetaStoreBuyPayloadElement> InEntriesToBuy, struct FDelegate InBuyDelegate); // Function Tiger.TigerPersistentPlayerState.BuyStoreEntries // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12ec860
	void BuyItemResultDelegate__DelegateSignature(bool bSuccess, struct FTigerItemId InItemId, struct FString InErrorString); // DelegateFunction Tiger.TigerPersistentPlayerState.BuyItemResultDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x16c0340
	void BuyItem(struct FTigerItemId InItemId, struct FTigerItemId InSoftCurrencyId, struct FDelegate InDelegate); // Function Tiger.TigerPersistentPlayerState.BuyItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12ec710
};

// Class Tiger.TigerPingClientData
// Size: 0x90 (Inherited: 0x30)
struct UTigerPingClientData : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	struct UTigerPingBase* PingClass; // 0x38(0x08)
	struct ATigerPlayerState* OwningPlayerState; // 0x40(0x08)
	struct FTigerPingContext Context; // 0x48(0x10)
	char pad_58[0xc]; // 0x58(0x0c)
	struct FVector WorldLocation; // 0x64(0x0c)
	bool bIsLocalPlayerInterested; // 0x70(0x01)
	char pad_71[0x1f]; // 0x71(0x1f)

	bool IsPlayerInterested(char InPlayerGroupIndex); // Function Tiger.TigerPingClientData.IsPlayerInterested // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12f5a70
};

// Class Tiger.TigerPingBase
// Size: 0xf0 (Inherited: 0x30)
struct UTigerPingBase : UDataAsset {
	int32_t MaxConcurrentPings; // 0x30(0x04)
	bool bBecomesPermanentOnInterest; // 0x34(0x01)
	bool bInstanceSupportsHover; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
	float LifeTimeInSeconds; // 0x38(0x04)
	float MaxDistance; // 0x3c(0x04)
	float MaxActorDistanceFromMarker; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct UTigerPingWorldInstanceUI* WidgetClass; // 0x48(0x08)
	struct TArray<struct UTigerPingBase*> ExclusiveWithPingClasses; // 0x50(0x10)
	struct UTexture2D* Icon; // 0x60(0x08)
	struct UTexture2D* InterestedResponseIcon; // 0x68(0x08)
	struct UTexture2D* NotInterestedResponseIcon; // 0x70(0x08)
	struct FText Name; // 0x78(0x18)
	struct FText Description; // 0x90(0x18)
	struct FText InterestedResponse; // 0xa8(0x18)
	struct FText NotInterestedResponse; // 0xc0(0x18)
	struct UAkAudioEvent* NotificationAudioEvent; // 0xd8(0x08)
	struct UAkAudioEvent* VoiceAudioEvent; // 0xe0(0x08)
	bool bCanBeInCluster; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)

	bool ShouldRemovePing(struct AActor* InContextActor); // Function Tiger.TigerPingBase.ShouldRemovePing // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12f5b00
	struct FText GetTooltipName(struct FTigerPingContext InContext); // Function Tiger.TigerPingBase.GetTooltipName // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12f5960
	struct FTigerPingNotificationUIData GetResponseText(struct FTigerPingContext InContext, bool bInIsInterested); // Function Tiger.TigerPingBase.GetResponseText // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	struct FTigerPingNotificationUIData GetNotificationUIData(struct FTigerPingContext InContext); // Function Tiger.TigerPingBase.GetNotificationUIData // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	struct FTigerPingIconData GetIconData(struct FTigerPingContext InContext); // Function Tiger.TigerPingBase.GetIconData // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x12f58a0
	bool EvaluateWorldActor(struct ATigerPlayerState* InPlayerState, struct FHitResult InHitResult, struct FTigerPingWorldNetData OutPingData, struct AActor* OutOverrideActor); // Function Tiger.TigerPingBase.EvaluateWorldActor // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerPingMarkerProxy
// Size: 0x70 (Inherited: 0x68)
struct UTigerPingMarkerProxy : UTigerMapMarkerProxy {
	struct UTigerPingClientData* PingData; // 0x68(0x08)
};

// Class Tiger.TigerPingSetupAsset
// Size: 0xc8 (Inherited: 0x30)
struct UTigerPingSetupAsset : UDataAsset {
	struct UUserWidget* MapMarkerClass; // 0x30(0x08)
	struct UTigerPingWorldInstanceUI* WidgetClass; // 0x38(0x08)
	struct TArray<struct UTigerPingBase*> WorldPingTypes; // 0x40(0x10)
	struct UTigerPingBase* DoublePressPingClass; // 0x50(0x08)
	struct UTigerPingBase* DistanceFallbackPingClass; // 0x58(0x08)
	struct TArray<struct UTigerPingBase*> InGamePingTypes; // 0x60(0x10)
	struct TArray<struct UTigerPingBase*> PingBarkTypes; // 0x70(0x10)
	struct UTigerPingBase* PingBarkDowned; // 0x80(0x08)
	struct UTigerPingBase* PingBarkFullHealth; // 0x88(0x08)
	struct UTigerPingBase* PingBarkNeedHealing; // 0x90(0x08)
	struct UTigerPingBase* PingBarkMasquerade; // 0x98(0x08)
	struct UTigerPingBase* PingInventoryWantsMeleeWeapon; // 0xa0(0x08)
	struct UTigerPingBase* PingInventoryWantsRangedWeapon; // 0xa8(0x08)
	struct UTigerPingBase* PingInventoryWantsItem; // 0xb0(0x08)
	struct UTigerPingBase* PingLocation; // 0xb8(0x08)
	struct UTigerPingBase* PingEnemy; // 0xc0(0x08)
};

// Class Tiger.TigerPingControllerComponent
// Size: 0x210 (Inherited: 0xb0)
struct UTigerPingControllerComponent : UActorComponent {
	struct FMulticastInlineDelegate OnPingUsedInTutorial; // 0xb0(0x10)
	float MaxTraceLength; // 0xc0(0x04)
	float WheelHoldTime; // 0xc4(0x04)
	float DoublePressTimeout; // 0xc8(0x04)
	float PingHeightOffset; // 0xcc(0x04)
	struct ATigerPlayerController* OwningController; // 0xd0(0x08)
	struct UTigerPingCoordinator* PingCoordinator; // 0xd8(0x08)
	struct UTigerInWorldIconController* WorldIconController; // 0xe0(0x08)
	struct TArray<struct FTigerPingWrapper> ActivePings; // 0xe8(0x10)
	struct TArray<struct FTigerPingWrapper> ReusablePings; // 0xf8(0x10)
	struct TArray<struct UTigerPingClientData*> UnresolvedActors; // 0x108(0x10)
	struct UTigerPingSetupAsset* PingSetup; // 0x118(0x08)
	char pad_120[0xe9]; // 0x120(0xe9)
	bool bEnablePingsInTutorial; // 0x209(0x01)
	char pad_20A[0x6]; // 0x20a(0x06)

	bool TryExecuteFocusPingAction(); // Function Tiger.TigerPingControllerComponent.TryExecuteFocusPingAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12ff750
	void SpawnLocalPing(struct FVector InWorldOffset, struct FTigerPingWorldNetData InPing); // Function Tiger.TigerPingControllerComponent.SpawnLocalPing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12ff580
	void Server_SpawnWorldPing(struct FTigerPingWorldNetData InPing); // Function Tiger.TigerPingControllerComponent.Server_SpawnWorldPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12ff310
	void Server_SpawnMapPing(struct UTigerPingBase* InPingClass, struct FVector_NetQuantize InWorldLocation); // Function Tiger.TigerPingControllerComponent.Server_SpawnMapPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12ff1e0
	void Server_SpawnLootBoxItemPing(struct FTigerPingWorldNetData InPingData); // Function Tiger.TigerPingControllerComponent.Server_SpawnLootBoxItemPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12ff110
	void Server_RespondToPing(struct FTigerUniquePingId InPingId, bool bInIsInterested); // Function Tiger.TigerPingControllerComponent.Server_RespondToPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12fee90
	void Server_NotificationOnlyPing(struct FTigerPingNotificationNetData InPing); // Function Tiger.TigerPingControllerComponent.Server_NotificationOnlyPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12fecd0
	void Server_CancelPing(struct FTigerUniquePingId InPingId, bool InShouldDisplayNotification); // Function Tiger.TigerPingControllerComponent.Server_CancelPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12fe8b0
	void SendWorldPing(struct FTigerPingWorldNetData InPingData); // Function Tiger.TigerPingControllerComponent.SendWorldPing // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12fe7c0
	void SendPingTypeFromCameraLocation(struct UTigerPingBase* InPingClass, bool InCancelInFocusPing); // Function Tiger.TigerPingControllerComponent.SendPingTypeFromCameraLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe6f0
	void SendNotificationPing(struct FTigerPingNotificationNetData InPingData); // Function Tiger.TigerPingControllerComponent.SendNotificationPing // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12fe650
	void SendMapPing(struct UTigerPingBase* InPingClass, struct FVector InWorldLocation); // Function Tiger.TigerPingControllerComponent.SendMapPing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12fe580
	void SendLootBoxItemPing(struct FTigerPingWorldNetData InItemPingData, struct ATigerLootBox* InLootBox); // Function Tiger.TigerPingControllerComponent.SendLootBoxItemPing // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe460
	void OnTigerPingUsedInTutorial__DelegateSignature(); // DelegateFunction Tiger.TigerPingControllerComponent.OnTigerPingUsedInTutorial__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	struct TArray<struct FPointOfInterest> GetPointsOfInterestedByDistance(int32_t InMaxCount); // Function Tiger.TigerPingControllerComponent.GetPointsOfInterestedByDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fce00
	void GetPingWheelItems(struct ATigerPlayerState* InPlayerState, struct TArray<struct FHitResult> InHitResults, struct TArray<struct FTigerPingWorldNetData> OutPingWheelItems); // Function Tiger.TigerPingControllerComponent.GetPingWheelItems // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	bool GetPingInfoFromActor(struct FHitResult InHitResult, struct FTigerPingWorldNetData OutPingData); // Function Tiger.TigerPingControllerComponent.GetPingInfoFromActor // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x12fcca0
	void Client_SpawnWorldPing(struct FTigerUniquePingId InPingId, struct FTigerPingWorldNetData InPing); // Function Tiger.TigerPingControllerComponent.Client_SpawnWorldPing // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12fc530
	void Client_SilentlyRemovePing(struct FTigerUniquePingId InPingId); // Function Tiger.TigerPingControllerComponent.Client_SilentlyRemovePing // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12fc4a0
	void Client_RespondToPing(struct FTigerUniquePingId InPingId, struct FTigerPingResponse InResponse); // Function Tiger.TigerPingControllerComponent.Client_RespondToPing // (Net|Native|Event|Protected|NetClient) // @ game+0x12fc1a0
	void Client_NotificationOnlyPing(struct FTigerPingNotificationNetData InPing, char InPlayerGroupIndex); // Function Tiger.TigerPingControllerComponent.Client_NotificationOnlyPing // (Net|Native|Event|Protected|NetClient) // @ game+0x12fbcd0
	void Client_CancelPing(struct FTigerUniquePingId InPingId, bool InShouldDisplayNotification); // Function Tiger.TigerPingControllerComponent.Client_CancelPing // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12fbaa0
	void ClearAllPings(); // Function Tiger.TigerPingControllerComponent.ClearAllPings // (Final|Native|Public|BlueprintCallable) // @ game+0x12fb990
	bool CanSendPings(); // Function Tiger.TigerPingControllerComponent.CanSendPings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fb7f0
	void CancelPingAtIndex(int32_t InExistingPingIndex, bool InShouldDisplayCancelNotification); // Function Tiger.TigerPingControllerComponent.CancelPingAtIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x12fb8c0
};

// Class Tiger.TigerPingCoordinator
// Size: 0x48 (Inherited: 0x28)
struct UTigerPingCoordinator : UObject {
	struct TArray<struct FTigerPingCoordinatorEntry> ActivePings; // 0x28(0x10)
	struct TArray<struct UTigerPingControllerComponent*> GroupMemberPingControllers; // 0x38(0x10)
};

// Class Tiger.TigerPingWorldInstanceUI
// Size: 0x2d0 (Inherited: 0x2c8)
struct UTigerPingWorldInstanceUI : UTigerInWorldWidget {
	struct UTigerPingClientData* PingData; // 0x2c8(0x08)

	void OnPlayerResponse(struct FTigerPingResponse InResponse); // Function Tiger.TigerPingWorldInstanceUI.OnPlayerResponse // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnPingDataUpdated(struct UTigerPingClientData* InPingData); // Function Tiger.TigerPingWorldInstanceUI.OnPingDataUpdated // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void ApplyIconDataToImage(struct UImage* InImageWidget, struct UTigerUIColorSet* InColorSet); // Function Tiger.TigerPingWorldInstanceUI.ApplyIconDataToImage // (Final|Native|Public|BlueprintCallable) // @ game+0x12fb4e0
};

// Class Tiger.TigerPingWheelWidget
// Size: 0x2c0 (Inherited: 0x2a0)
struct UTigerPingWheelWidget : UTigerWheelWidget {
	struct TArray<struct FTigerPingWorldNetData> CurrentPingTypeItems; // 0x2a0(0x10)
	struct UTigerPingClientData* CurrentPingResponseData; // 0x2b0(0x08)
	struct UTigerPingControllerComponent* PingController; // 0x2b8(0x08)
};

// Class Tiger.TigerPlayer
// Size: 0xf00 (Inherited: 0x780)
struct ATigerPlayer : ATigerCharacter {
	char pad_780[0x8]; // 0x780(0x08)
	char PlayerVisibilityToNPC; // 0x788(0x01)
	enum class ETigerTraversalState CurrentTraversalState; // 0x789(0x01)
	char pad_78A[0x2]; // 0x78a(0x02)
	struct FVector GunOffset; // 0x78c(0x0c)
	struct UTigerSpringArmComponent* SpringArm; // 0x798(0x08)
	struct UTigerInventoryComponent* InventoryComponent; // 0x7a0(0x08)
	struct UTigerConsumablesComponent* ConsumablesComponent; // 0x7a8(0x08)
	struct UTigerAudioVisualizationSpawnerComponent* AudioVisualizationComponent; // 0x7b0(0x08)
	char pad_7B8[0x18]; // 0x7b8(0x18)
	struct UShapeComponent* InteractionVolumeComponent; // 0x7d0(0x08)
	struct UShapeComponent* TriggerVolumeComponent; // 0x7d8(0x08)
	struct UPostProcessComponent* FullscreenPostProcessComponent; // 0x7e0(0x08)
	struct UTigerDistrictComponent* DistrictComponent; // 0x7e8(0x08)
	struct UTigerCrowdAgentComponent* CrowdAgentComponent; // 0x7f0(0x08)
	struct UTigerBloodResonanceComponent* BloodResonanceComponent; // 0x7f8(0x08)
	struct UTigerTalentComponent* TalentComponent; // 0x800(0x08)
	struct UTigerEmotePlayerComponent* EmotePlayerComponent; // 0x808(0x08)
	struct UTigerUtilityPowerHSenseComponent* HSenseComponent; // 0x810(0x08)
	struct UTigerUtilityPowerHSenseComponent* HSenseClass; // 0x818(0x08)
	struct UTigerUtilityPowerBaseComponent* UtilityPowerComp; // 0x820(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x828(0x08)
	struct UTigerLevelComponent* LevelComponent; // 0x830(0x08)
	struct UTigerCharCustomizationComponent* CharacterCustomizationComponent; // 0x838(0x08)
	char pad_840[0x8]; // 0x840(0x08)
	struct UTigerPlayerClanData* PlayerClan; // 0x848(0x08)
	struct FMulticastInlineDelegate OnBloodTrackUpdatedEvent; // 0x850(0x10)
	struct TArray<struct UTigerBloodTrackPassiveConfig*> BloodTrack; // 0x860(0x10)
	struct TMap<struct ATigerProjectile*, int8_t> InitialProjectileReserveCount; // 0x870(0x50)
	int8_t DefaultReservedProjectileCount; // 0x8c0(0x01)
	char pad_8C1[0x3]; // 0x8c1(0x03)
	float LastAirStartTime; // 0x8c4(0x04)
	float LastAirEndTime; // 0x8c8(0x04)
	char pad_8CC[0x4]; // 0x8cc(0x04)
	struct FMulticastInlineDelegate OnGasDamageTaken; // 0x8d0(0x10)
	struct FMulticastInlineDelegate OnSelfReviveBlockedByRedGas; // 0x8e0(0x10)
	struct FMulticastInlineDelegate OnShieldBroken; // 0x8f0(0x10)
	char pad_900[0x18]; // 0x900(0x18)
	struct FMulticastInlineDelegate OnDiablerizeStateChanged; // 0x918(0x10)
	struct FMulticastInlineDelegate OnReviveStateChanged; // 0x928(0x10)
	struct FMulticastInlineDelegate OnPlayerEvent; // 0x938(0x10)
	struct FMulticastInlineDelegate OnDamageDealt; // 0x948(0x10)
	struct FMulticastInlineDelegate OnHealthChanged; // 0x958(0x10)
	struct FMulticastInlineDelegate OnTraversalAction; // 0x968(0x10)
	struct FMulticastInlineDelegate OnLifeStatusChanged; // 0x978(0x10)
	char pad_988[0x30]; // 0x988(0x30)
	struct FMulticastInlineDelegate OnUpdateArchetypePassiveActiveState; // 0x9b8(0x10)
	struct FMulticastInlineDelegate OnBeginPlay; // 0x9c8(0x10)
	bool bExposePlayersInHeightenedSense; // 0x9d8(0x01)
	char pad_9D9[0x7]; // 0x9d9(0x07)
	struct UTigerPhysicalInteraction* DiablerizeInteractionClass; // 0x9e0(0x08)
	struct UTigerPhysicalInteraction* ReviveInteractionClass; // 0x9e8(0x08)
	struct FName LoopSectionName; // 0x9f0(0x08)
	struct FName EndSectionName; // 0x9f8(0x08)
	struct FName InterruptedSectionName; // 0xa00(0x08)
	struct FMulticastInlineDelegate SavedLocationAdded; // 0xa08(0x10)
	struct FMulticastInlineDelegate OnKilledBy; // 0xa18(0x10)
	char pad_A28[0x1]; // 0xa28(0x01)
	bool bAllowCollisionWithPlayersInElysium; // 0xa29(0x01)
	char pad_A2A[0x6]; // 0xa2a(0x06)
	struct UTigerPowerKit* PowerKit; // 0xa30(0x08)
	float RecentDamageTaken; // 0xa38(0x04)
	char pad_A3C[0x4]; // 0xa3c(0x04)
	float RecentDamageDecayWaitDuration; // 0xa40(0x04)
	float RecentDamageDecayInitialWaitDuration; // 0xa44(0x04)
	float RecentDamageDecayRate; // 0xa48(0x04)
	char pad_A4C[0x8]; // 0xa4c(0x08)
	float InvulnerabilityDurationDowned; // 0xa54(0x04)
	float InvulnerabilityDurationRegenerated; // 0xa58(0x04)
	float InvulnerabilityDurationRevived; // 0xa5c(0x04)
	char pad_A60[0x10]; // 0xa60(0x10)
	float LocationHistorySaveDistanceSquared; // 0xa70(0x04)
	float LocationHistoryDurationSeconds; // 0xa74(0x04)
	bool bIsInvisibleByDodge; // 0xa78(0x01)
	bool bIsRecoveringFromDodge; // 0xa79(0x01)
	char pad_A7A[0x2]; // 0xa7a(0x02)
	float ArmorDurability; // 0xa7c(0x04)
	enum class ETigerItemRarity ArmorRarity; // 0xa80(0x01)
	char pad_A81[0x7]; // 0xa81(0x07)
	struct USceneComponent* ProjectileSpawnRootRef; // 0xa88(0x08)
	struct UCameraComponent* Camera; // 0xa90(0x08)
	struct USkeletalMeshComponent* HolsteredWeaponMeshRef; // 0xa98(0x08)
	struct USkeletalMeshComponent* SecondaryHolsteredWeaponMeshRef; // 0xaa0(0x08)
	char pad_AA8[0x1]; // 0xaa8(0x01)
	struct FTigerCompressedRotation CompressedCameraRotation; // 0xaa9(0x02)
	char pad_AAB[0xd]; // 0xaab(0x0d)
	struct TArray<struct FTigerNpcThatCanSeePlayerWrapper> NpcThatCanSeePlayerServer; // 0xab8(0x10)
	struct TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> NpcThatCanSeePlayerClient; // 0xac8(0x10)
	struct TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> LastNpcsThatCantSeePlayerSent; // 0xad8(0x10)
	char pad_AE8[0x8]; // 0xae8(0x08)
	float LastNpcThatCanSeePlayerSyncTime; // 0xaf0(0x04)
	char pad_AF4[0x4]; // 0xaf4(0x04)
	struct UTigerPhysicalInteraction* PhysicalInteractionObject; // 0xaf8(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> OtherPhysicalInteractionPlayer; // 0xb00(0x08)
	struct TArray<struct UTigerPassiveComponent*> PassiveComponents; // 0xb08(0x10)
	struct TMap<struct UObject*, struct FTigerClanPassiveAndDefault> ClanPassivesMap; // 0xb18(0x50)
	struct FTigerCharacterStatModification CombinedPassiveStatChanges; // 0xb68(0xb4)
	char pad_C1C[0x4]; // 0xc1c(0x04)
	struct UMaterialInterface* InvisibilityMaterial; // 0xc20(0x08)
	struct UMaterialInstanceDynamic* InvisibilityMaterialInstance; // 0xc28(0x08)
	struct UTigerUIEnemyHealthBar* InWorldHealthBar; // 0xc30(0x08)
	float AirTimeRequiredForSuspiciousLanding; // 0xc38(0x04)
	struct FVector GroundBelowDeathLocation; // 0xc3c(0x0c)
	bool bWasDiablerized; // 0xc48(0x01)
	char pad_C49[0x3]; // 0xc49(0x03)
	struct FName DiablerizeAnimationName; // 0xc4c(0x08)
	struct FName GetDiablerizedAnimationName; // 0xc54(0x08)
	struct FName ReviveTeammateAnimationName; // 0xc5c(0x08)
	struct FName GettingRevivedAnimationName; // 0xc64(0x08)
	char pad_C6C[0x4]; // 0xc6c(0x04)
	struct UParticleSystem* EnhancedReviveParticleEffect; // 0xc70(0x08)
	struct UParticleSystemComponent* RegenerateComponent; // 0xc78(0x08)
	struct FName RegenerateSpawnRateParam; // 0xc80(0x08)
	float RegenerateRemainingDownTimeMultiplier; // 0xc88(0x04)
	float EnhancedReviveParticleEffectLength; // 0xc8c(0x04)
	char pad_C90[0x4]; // 0xc90(0x04)
	float TimeToGetInPositionForPhysicalInteraction; // 0xc94(0x04)
	float ReviveHealthPercentage; // 0xc98(0x04)
	float ReviveHealth; // 0xc9c(0x04)
	bool bUsePercentReviveHealth; // 0xca0(0x01)
	char pad_CA1[0x3]; // 0xca1(0x03)
	float PhysicalInteractionTimeLeft; // 0xca4(0x04)
	char pad_CA8[0x8]; // 0xca8(0x08)
	struct UAkAudioEvent* RevivedAudioEvent; // 0xcb0(0x08)
	struct FName RegeneratingDoneAnimationName; // 0xcb8(0x08)
	float DamageDurationForInterrupt; // 0xcc0(0x04)
	float InterruptDamageLimits[0x2]; // 0xcc4(0x08)
	char EnabledInterruptDamageLimits; // 0xccc(0x01)
	char pad_CCD[0x3]; // 0xccd(0x03)
	float DownedRangedDamageTakenMultiplier; // 0xcd0(0x04)
	float DownedMeleeDamageTakenMultiplier; // 0xcd4(0x04)
	float DownedDisciplineDamageTakenMultiplier; // 0xcd8(0x04)
	float DownedRegenRatePerSecond; // 0xcdc(0x04)
	float DownedRegenRateReviveMultiplier; // 0xce0(0x04)
	float DownedBaseHealth; // 0xce4(0x04)
	float DownedRegenValue; // 0xce8(0x04)
	char pad_CEC[0x4]; // 0xcec(0x04)
	bool bDownedRegenShouldTickInsideHolyIncense; // 0xcf0(0x01)
	bool bCanRegenerateInsideHolyIncense; // 0xcf1(0x01)
	char pad_CF2[0x2]; // 0xcf2(0x02)
	float EffectUpdateTimeAfterInsideHolyIncense; // 0xcf4(0x04)
	float HardLandingSpeed; // 0xcf8(0x04)
	int32_t OverlappingSuspiciousGuardVolumeCount; // 0xcfc(0x04)
	int32_t OverlappingThreatGuardVolumeCount; // 0xd00(0x04)
	char pad_D04[0x3c]; // 0xd04(0x3c)
	float IsInCloseQuartersCombatCooldownTime; // 0xd40(0x04)
	float EnemyOutlineDistanceSquared; // 0xd44(0x04)
	float EnemyOutlineCombatDistanceSquared; // 0xd48(0x04)
	float ApproximateDownedHeightOffset; // 0xd4c(0x04)
	char pad_D50[0x18]; // 0xd50(0x18)
	struct UAkAudioEvent* FallStartedAudioEvent; // 0xd68(0x08)
	struct UAkAudioEvent* FallEndedAudioEvent; // 0xd70(0x08)
	struct UAkAudioEvent* HitEnemyAudioEvent; // 0xd78(0x08)
	struct UAkAudioEvent* HitEnemyHeadAudioEvent; // 0xd80(0x08)
	struct UAkAudioEvent* ExtraHealthHitAudioEvent; // 0xd88(0x08)
	struct UAkAudioEvent* PickUpRangedWeaponAudioEvent; // 0xd90(0x08)
	struct UAkAudioEvent* PickUpMeleeWeaponAudioEvent; // 0xd98(0x08)
	struct UAkAudioEvent* PickUpAmmoAudioEvent; // 0xda0(0x08)
	struct UAkAudioEvent* PickUpConsumableAudioEvent; // 0xda8(0x08)
	struct UAkAudioEvent* PickUpCollectibleAudioEvent; // 0xdb0(0x08)
	struct UAkAudioEvent* PickupArmorAudioEvent; // 0xdb8(0x08)
	struct UAkAudioEvent* StartCrouchAudioEvent; // 0xdc0(0x08)
	struct UAkAudioEvent* EndCrouchAudioEvent; // 0xdc8(0x08)
	struct UAkAudioEvent* HalfHealthBreakAudioEvent; // 0xdd0(0x08)
	bool bOrientCharacterRotationToMovement; // 0xdd8(0x01)
	bool bRotateCharacterWithMeleeWeapon; // 0xdd9(0x01)
	char pad_DDA[0x6]; // 0xdda(0x06)
	struct UTigerPhysicalInteraction* PhysicalInteractionClass; // 0xde0(0x08)
	struct TWeakObjectPtr<struct ATigerJudge> JudgeFeedTarget; // 0xde8(0x08)
	float JudgeFeedTimeSeconds; // 0xdf0(0x04)
	char pad_DF4[0x4]; // 0xdf4(0x04)
	struct TArray<struct FName> RangedHitMontageNames; // 0xdf8(0x10)
	struct FName TransitionParameterName; // 0xe08(0x08)
	struct UStaticMeshComponent* TempProp; // 0xe10(0x08)
	struct TSet<struct ATigerCharacter*> CharmedCharacters; // 0xe18(0x50)
	bool bIsDowned; // 0xe68(0x01)
	char pad_E69[0x53]; // 0xe69(0x53)
	bool bIsInGhostMode; // 0xebc(0x01)
	char pad_EBD[0x3b]; // 0xebd(0x3b)
	bool bIsScouted; // 0xef8(0x01)
	bool bIsInAssaultedArea; // 0xef9(0x01)
	char pad_EFA[0x6]; // 0xefa(0x06)

	void UpdateScoutedMeshVisiblity(float InVisibility); // Function Tiger.TigerPlayer.UpdateScoutedMeshVisiblity // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void UpdateHuntingKnifeEffectParameters(float StrengthFromDistance, float StrengthFromKillings); // Function Tiger.TigerPlayer.UpdateHuntingKnifeEffectParameters // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void UpdateHolyIncenseEffect(float InDeltaTime); // Function Tiger.TigerPlayer.UpdateHolyIncenseEffect // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x16c0340
	void UpdateArchetypePassiveActiveState(); // Function Tiger.TigerPlayer.UpdateArchetypePassiveActiveState // (Final|Native|Public|BlueprintCallable) // @ game+0x12fc700
	void TriggerPlayerEvent(enum class ETigerPlayerEvent Event, struct ATigerCharacter* EventTiedCharacter); // Function Tiger.TigerPlayer.TriggerPlayerEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x12ff680
	void ShowUIFX(); // Function Tiger.TigerPlayer.ShowUIFX // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool ShouldUseFootIk(); // Function Tiger.TigerPlayer.ShouldUseFootIk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ff560
	bool ShouldShowRecentDamage(); // Function Tiger.TigerPlayer.ShouldShowRecentDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ff540
	void SetDebugAppearance(struct FString AppearanceText); // Function Tiger.TigerPlayer.SetDebugAppearance // (Final|Native|Public|BlueprintCallable) // @ game+0x1263e90
	void Server_UpdateCameraRotation(struct FTigerCompressedRotation CompressedRotation); // Function Tiger.TigerPlayer.Server_UpdateCameraRotation // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x12ff4a0
	void Server_SwitchControllerMove(bool bInOrientCharacterToMovement); // Function Tiger.TigerPlayer.Server_SwitchControllerMove // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12ff3e0
	void Server_SetDebugCharacterData(struct FString ClanText, int32_t PowerKitIndex, struct FString GenderText); // Function Tiger.TigerPlayer.Server_SetDebugCharacterData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12fefb0
	void Server_PickUpItemFromCluster(struct ATigerItemCluster* InItemCluster, uint32_t InItemClusterUID); // Function Tiger.TigerPlayer.Server_PickUpItemFromCluster // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x12fed90
	void Server_GetItemFromLootUI(struct ATigerLootBox* LootBox, struct UTigerItemAsset* Item, int32_t Count, enum class ETigerTelemetryItemSourceID InItemSourceID); // Function Tiger.TigerPlayer.Server_GetItemFromLootUI // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x12feb30
	void Server_Cheat_Walk(); // Function Tiger.TigerPlayer.Server_Cheat_Walk // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12feae0
	void Server_Cheat_Ghost(bool bForce); // Function Tiger.TigerPlayer.Server_Cheat_Ghost // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12fea20
	void Server_Cheat_Fly(); // Function Tiger.TigerPlayer.Server_Cheat_Fly // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12fe9d0
	void Server_AbortMeleeAnimation(); // Function Tiger.TigerPlayer.Server_AbortMeleeAnimation // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x12fe860
	void RemoveNPCThatLostSightOfPlayerFromList(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerPlayer.RemoveNPCThatLostSightOfPlayerFromList // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe3d0
	void PlayHitAudio(bool bIsHeadShot); // Function Tiger.TigerPlayer.PlayHitAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe340
	void PlayExtraHealthHitAudio(); // Function Tiger.TigerPlayer.PlayExtraHealthHitAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe320
	void OnWallJump(struct FVector InVelocity); // Function Tiger.TigerPlayer.OnWallJump // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnWallGrindStarted(struct FVector InVelocity); // Function Tiger.TigerPlayer.OnWallGrindStarted // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnWallGrindEnded(struct FVector InVelocity); // Function Tiger.TigerPlayer.OnWallGrindEnded // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnTigerMovementModeChanged(enum class EMovementMode PrevMovementMode, enum class ETigerMovementMode PrevCustomMode, enum class EMovementMode NewMovementMode, enum class ETigerMovementMode NewCustomMode); // Function Tiger.TigerPlayer.OnTigerMovementModeChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnSuperIsReady(); // Function Tiger.TigerPlayer.OnSuperIsReady // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStoppedBeingGroupMember(); // Function Tiger.TigerPlayer.OnStoppedBeingGroupMember // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStoppedAimingCameraTransition(); // Function Tiger.TigerPlayer.OnStoppedAimingCameraTransition // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStartedPhysicalInteraction(struct UTigerPhysicalInteraction* PhysInteractionClass, bool bIsTargetPlayer); // Function Tiger.TigerPlayer.OnStartedPhysicalInteraction // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStartedAimingCameraTransition(); // Function Tiger.TigerPlayer.OnStartedAimingCameraTransition // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnSlidingStarted(struct FVector InVelocity); // Function Tiger.TigerPlayer.OnSlidingStarted // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnSlidingEnded(struct FVector InVelocity); // Function Tiger.TigerPlayer.OnSlidingEnded // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnSlideJump(struct FVector InVelocity); // Function Tiger.TigerPlayer.OnSlideJump // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnShieldDepleted(struct ATigerPlayer* InInstigator); // Function Tiger.TigerPlayer.OnShieldDepleted // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnRep_TraversalState(); // Function Tiger.TigerPlayer.OnRep_TraversalState // (Final|Native|Public) // @ game+0x12fe300
	void OnRep_PowerKit(); // Function Tiger.TigerPlayer.OnRep_PowerKit // (Native|Event|Public|BlueprintEvent) // @ game+0x12fe2e0
	void OnRep_PlayerClan(); // Function Tiger.TigerPlayer.OnRep_PlayerClan // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnRep_GotDowned(bool bWasDowned); // Function Tiger.TigerPlayer.OnRep_GotDowned // (Final|Native|Protected) // @ game+0x12fe250
	void OnRep_EnteredGhostMode(bool bWasInGhostMode); // Function Tiger.TigerPlayer.OnRep_EnteredGhostMode // (Final|Native|Protected) // @ game+0x12fe1c0
	void OnRainAmountSet(float RainAmount); // Function Tiger.TigerPlayer.OnRainAmountSet // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnNoLongerScouted(); // Function Tiger.TigerPlayer.OnNoLongerScouted // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnModEquipped(); // Function Tiger.TigerPlayer.OnModEquipped // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnMatchStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerPlayer.OnMatchStateChanged // (Final|Native|Public) // @ game+0x12fe0f0
	void OnLocalSprintStarted(); // Function Tiger.TigerPlayer.OnLocalSprintStarted // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnLocalSprintEnded(); // Function Tiger.TigerPlayer.OnLocalSprintEnded // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnLocalExitedIndoor(); // Function Tiger.TigerPlayer.OnLocalExitedIndoor // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnLocalEnteredIndoor(); // Function Tiger.TigerPlayer.OnLocalEnteredIndoor // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnInterruptedPhysicalInteraction(struct UTigerPhysicalInteraction* PhysInteractionClass, bool bIsTargetPlayer); // Function Tiger.TigerPlayer.OnInterruptedPhysicalInteraction // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnHardLanding(struct FVector InVelocity); // Function Tiger.TigerPlayer.OnHardLanding // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnGotScouted(); // Function Tiger.TigerPlayer.OnGotScouted // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnGotPlayerState(); // Function Tiger.TigerPlayer.OnGotPlayerState // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnGoneBelowHalfHealth(); // Function Tiger.TigerPlayer.OnGoneBelowHalfHealth // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFinishedPhysicalInteraction(struct UTigerPhysicalInteraction* PhysInteractionClass, bool bIsTargetPlayer); // Function Tiger.TigerPlayer.OnFinishedPhysicalInteraction // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnExtraHealthDepleted(); // Function Tiger.TigerPlayer.OnExtraHealthDepleted // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnDoubleJump(struct FVector Direction); // Function Tiger.TigerPlayer.OnDoubleJump // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnDodgeRecovery(bool IsControllingPlayer, struct FVector_NetQuantizeNormal LaunchDirection, char DodgeStage); // Function Tiger.TigerPlayer.OnDodgeRecovery // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnDiablerizedFinished(); // Function Tiger.TigerPlayer.OnDiablerizedFinished // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDamageTaken(float DamageTaken, struct AActor* DamageInstigator); // Function Tiger.TigerPlayer.OnDamageTaken // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnClimbStarted(struct FVector InVelocity); // Function Tiger.TigerPlayer.OnClimbStarted // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnClimbEnded(struct FVector InVelocity); // Function Tiger.TigerPlayer.OnClimbEnded // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnBecameSpectator(); // Function Tiger.TigerPlayer.OnBecameSpectator // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnBecameGroupMember(); // Function Tiger.TigerPlayer.OnBecameGroupMember // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnAboutToBeHitByDisplacement(); // Function Tiger.TigerPlayer.OnAboutToBeHitByDisplacement // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Multicast_UpdateBloodTrack(struct TArray<struct UTigerBloodTrackPassiveConfig*> NewBloodTrack); // Function Tiger.TigerPlayer.Multicast_UpdateBloodTrack // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12fe050
	void Multicast_StopJudgeFeedAnimation(); // Function Tiger.TigerPlayer.Multicast_StopJudgeFeedAnimation // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12fe030
	void Multicast_ShieldDepleted(struct ATigerPlayer* InInstigator); // Function Tiger.TigerPlayer.Multicast_ShieldDepleted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12fdfa0
	void Multicast_SetupForPhysicalInteraction(struct UTigerPhysicalInteraction* InSetupPhysicalInteractionClass, struct ATigerPlayer* InOtherPlayer); // Function Tiger.TigerPlayer.Multicast_SetupForPhysicalInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12fded0
	void Multicast_SetCharacterData(struct UTigerPlayerClanData* NewClan, struct UTigerPowerKit* NewPowerKit, struct TArray<struct UTigerBloodTrackPassiveConfig*> NewBloodTrack); // Function Tiger.TigerPlayer.Multicast_SetCharacterData // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12fdda0
	void Multicast_RespawnPlayerWithTransform(struct FVector InLocation, struct FRotator InRotation); // Function Tiger.TigerPlayer.Multicast_RespawnPlayerWithTransform // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x12fdcc0
	void Multicast_RespawnPlayer(); // Function Tiger.TigerPlayer.Multicast_RespawnPlayer // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12fdca0
	void Multicast_PlayJudgeFeedAnimation(); // Function Tiger.TigerPlayer.Multicast_PlayJudgeFeedAnimation // (Net|Native|Event|NetMulticast|Protected) // @ game+0x12fdb60
	void Multicast_PlayerDowned(char LastHitYawCompressed, char ActorYaw, bool bUseStaticDownEntryAnimation); // Function Tiger.TigerPlayer.Multicast_PlayerDowned // (Net|Native|Event|NetMulticast|Protected) // @ game+0x12fdb80
	void Multicast_OnSuccessfulPhysicalInteraction(bool bWasTargetPlayer); // Function Tiger.TigerPlayer.Multicast_OnSuccessfulPhysicalInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12fdad0
	void Multicast_OnRegenerationDone(); // Function Tiger.TigerPlayer.Multicast_OnRegenerationDone // (Net|Native|Event|NetMulticast|Protected) // @ game+0x12fdab0
	void Multicast_OnItemPickedUp(struct UTigerItemAsset* InItemAsset); // Function Tiger.TigerPlayer.Multicast_OnItemPickedUp // (Net|Native|Event|NetMulticast|Public) // @ game+0x12fda20
	void Multicast_OnDamageTaken(float DamageAmount, struct AActor* DamageInstigator); // Function Tiger.TigerPlayer.Multicast_OnDamageTaken // (Net|Native|Event|NetMulticast|Protected) // @ game+0x12fd950
	void Multicast_InterruptPhysicalInteraction(); // Function Tiger.TigerPlayer.Multicast_InterruptPhysicalInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12fd930
	void Multicast_GuardBreak(); // Function Tiger.TigerPlayer.Multicast_GuardBreak // (Net|Native|Event|NetMulticast|Public) // @ game+0x12fd910
	void Multicast_ExtraHealthDepleted(); // Function Tiger.TigerPlayer.Multicast_ExtraHealthDepleted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12fd8f0
	void Multicast_ApplyWeaponVisibility(struct UTigerWeapon* WeaponClassToShow); // Function Tiger.TigerPlayer.Multicast_ApplyWeaponVisibility // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12fd860
	bool LocalValidateItemPickupFromLootUI(struct ATigerLootBox* LootBox, struct UTigerItemAsset* Item, int32_t Count); // Function Tiger.TigerPlayer.LocalValidateItemPickupFromLootUI // (Final|Native|Public|BlueprintCallable) // @ game+0x12fd750
	void LocalPlayerTick(float InDeltaSeconds); // Function Tiger.TigerPlayer.LocalPlayerTick // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsInPhysicalInteraction(); // Function Tiger.TigerPlayer.IsInPhysicalInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd700
	bool IsInInvulnerableState(); // Function Tiger.TigerPlayer.IsInInvulnerableState // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12fd6d0
	bool IsInGhostMode(); // Function Tiger.TigerPlayer.IsInGhostMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd6b0
	bool IsIndoor(); // Function Tiger.TigerPlayer.IsIndoor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd730
	bool IsInDialogueInteraction(); // Function Tiger.TigerPlayer.IsInDialogueInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd680
	bool IsGroupMember(struct ATigerPlayer* InOtherPlayer); // Function Tiger.TigerPlayer.IsGroupMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd5e0
	bool IsGettingDiablerized(); // Function Tiger.TigerPlayer.IsGettingDiablerized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd5b0
	bool IsFeedingOnJudge(); // Function Tiger.TigerPlayer.IsFeedingOnJudge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd580
	bool IsCharming(struct ATigerCharacter* Character); // Function Tiger.TigerPlayer.IsCharming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd4e0
	bool IsBeingRevived(); // Function Tiger.TigerPlayer.IsBeingRevived // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd4b0
	void IncrementShieldShaderCounter(); // Function Tiger.TigerPlayer.IncrementShieldShaderCounter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void HideUIFX(); // Function Tiger.TigerPlayer.HideUIFX // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool HaveEnhancedReviveSpeed(); // Function Tiger.TigerPlayer.HaveEnhancedReviveSpeed // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd480
	bool HasRecentlyLanded(float WithinSeconds, float MinimumAirTime); // Function Tiger.TigerPlayer.HasRecentlyLanded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd3a0
	bool HasPassiveByDataAsset(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.HasPassiveByDataAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd300
	bool HasPassive(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.HasPassive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd230
	bool HasMaxKindredCharmCount(); // Function Tiger.TigerPlayer.HasMaxKindredCharmCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd200
	bool HasBeenInAirFor(float MinimumAirTime); // Function Tiger.TigerPlayer.HasBeenInAirFor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd170
	void HandleAppearanceChange(); // Function Tiger.TigerPlayer.HandleAppearanceChange // (Final|Native|Protected) // @ game+0x12fd150
	float GetTimeInAir(); // Function Tiger.TigerPlayer.GetTimeInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd0d0
	struct ATigerPlayerState* GetTigerPlayerState(); // Function Tiger.TigerPlayer.GetTigerPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd0a0
	struct ATigerPlayerController* GetTigerPlayerController(); // Function Tiger.TigerPlayer.GetTigerPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fd070
	float GetRemainingDownedTime(bool InIgnoreRevive); // Function Tiger.TigerPlayer.GetRemainingDownedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fcfd0
	struct UActorComponent* GetPassiveLogicByDataAsset(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.GetPassiveLogicByDataAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fcbd0
	struct UActorComponent* GetPassiveLogic(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.GetPassiveLogic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fcad0
	float GetJudgeFeedProgress(); // Function Tiger.TigerPlayer.GetJudgeFeedProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fcaa0
	int8_t GetInitialProjectileReserveCountForClass(struct ATigerProjectile* InProjectileClass); // Function Tiger.TigerPlayer.GetInitialProjectileReserveCountForClass // (Final|Native|Public|Const) // @ game+0x12fca00
	struct FTigerInventoryStats GetCharacterInventoryStats(); // Function Tiger.TigerPlayer.GetCharacterInventoryStats // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fc9c0
	void EnableGhostMode(bool bGhostMode, bool bForce); // Function Tiger.TigerPlayer.EnableGhostMode // (Final|Native|Public|BlueprintCallable) // @ game+0x12fc8f0
	bool DownedRegenShouldTickInsideHolyIncense(); // Function Tiger.TigerPlayer.DownedRegenShouldTickInsideHolyIncense // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fc8d0
	bool DiedHighAboveGround(); // Function Tiger.TigerPlayer.DiedHighAboveGround // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fc870
	void DecrementShieldShaderCounter(); // Function Tiger.TigerPlayer.DecrementShieldShaderCounter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void Debug_Multicast_SendDummyData(struct TArray<int8_t> Data); // Function Tiger.TigerPlayer.Debug_Multicast_SendDummyData // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x12fc7d0
	void DeactivateHeightenedSenses(); // Function Tiger.TigerPlayer.DeactivateHeightenedSenses // (Final|Native|Public|BlueprintCallable) // @ game+0x12fc7b0
	void Client_UpdateKindredCharmCount(int32_t InKindredCharmCount); // Function Tiger.TigerPlayer.Client_UpdateKindredCharmCount // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fc720
	void Client_UpdateArchetypePassiveActiveState(); // Function Tiger.TigerPlayer.Client_UpdateArchetypePassiveActiveState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fc700
	void Client_SyncNpcsThatCanSeePlayer(struct TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> InNpcsThatCanSeePlayer, char InPlayerVisibilityToNpc); // Function Tiger.TigerPlayer.Client_SyncNpcsThatCanSeePlayer // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12fc620
	void Client_SetupForRevive(struct ATigerPlayer* OtherPlayer, uint16_t CompressedDesiredFacing); // Function Tiger.TigerPlayer.Client_SetupForRevive // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12fc3d0
	void Client_SetupForDiablerize(struct ATigerPlayer* OtherPlayer, uint16_t CompressedDesiredFacing); // Function Tiger.TigerPlayer.Client_SetupForDiablerize // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12fc300
	void Client_SetAsScouted(float Time); // Function Tiger.TigerPlayer.Client_SetAsScouted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fc280
	void Client_RemoveBestialTracking(struct APlayerState* Player); // Function Tiger.TigerPlayer.Client_RemoveBestialTracking // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fc110
	void Client_PostGunSound(struct UAkAudioEvent* InAudioEvent, struct FVector InSoundLocation); // Function Tiger.TigerPlayer.Client_PostGunSound // (Net|Native|Event|Public|HasDefaults|NetClient) // @ game+0x12fc040
	void Client_PlayerDowned(char LastHitYawCompressed, char ActorYaw, bool bUseStaticDownEntryAnimation); // Function Tiger.TigerPlayer.Client_PlayerDowned // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12fbf20
	void Client_OnTakeDamage(float NewHealth, float TotalDamageTaken, struct FDamageEvent DamageEvent, struct AActor* DamageCauser); // Function Tiger.TigerPlayer.Client_OnTakeDamage // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x12fbdb0
	void Client_InterruptPhysicalInteraction(); // Function Tiger.TigerPlayer.Client_InterruptPhysicalInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fbcb0
	void Client_InitialBestialTrackingData(struct APlayerState* Player, struct TArray<struct FTigerPlayerSavedLocation> Locations); // Function Tiger.TigerPlayer.Client_InitialBestialTrackingData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fbbd0
	void Client_HitPlayerGoneBelowHalfHealth(); // Function Tiger.TigerPlayer.Client_HitPlayerGoneBelowHalfHealth // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fbbb0
	void Client_GuardBreak(); // Function Tiger.TigerPlayer.Client_GuardBreak // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fbb90
	void Client_GoneBelowHalfHealth(); // Function Tiger.TigerPlayer.Client_GoneBelowHalfHealth // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fbb70
	void Client_AddBestialTrackingData(struct APlayerState* Player, struct FTigerPlayerSavedLocation Location); // Function Tiger.TigerPlayer.Client_AddBestialTrackingData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fb9d0
	void Client_AboutToBeHitByDisplacement(); // Function Tiger.TigerPlayer.Client_AboutToBeHitByDisplacement // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x12fb9b0
	bool CanUseConsumable(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerPlayer.CanUseConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fb820
	bool CanNPCSeePlayer(struct ATigerBaseNPC* TigerNPC, bool bIgnoreInvisibility); // Function Tiger.TigerPlayer.CanNPCSeePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x12fb720
	bool CanEmote(); // Function Tiger.TigerPlayer.CanEmote // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fb6f0
	bool CanBeRevivedBy(struct ATigerPlayer* Reviver); // Function Tiger.TigerPlayer.CanBeRevivedBy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fb650
	bool CanBeDiablerizedBy(struct ATigerPlayer* Diablerist); // Function Tiger.TigerPlayer.CanBeDiablerizedBy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fb5b0
	void AddNPCThatSawPlayerToList(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerPlayer.AddNPCThatSawPlayerToList // (Final|Native|Public|BlueprintCallable) // @ game+0x12fb450
	void ActivateHuntingKnifeEffect(bool bActivate); // Function Tiger.TigerPlayer.ActivateHuntingKnifeEffect // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void ActivateHeightenedSenses(); // Function Tiger.TigerPlayer.ActivateHeightenedSenses // (Final|Native|Public|BlueprintCallable) // @ game+0x12fb430
};

// Class Tiger.TigerActionBuffer
// Size: 0xb0 (Inherited: 0x28)
struct UTigerActionBuffer : UObject {
	float BufferTimes[0x11]; // 0x28(0x44)
	char MaxNumberOfBufferedActions; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct TArray<struct UTigerBufferedAction*> BufferedActions; // 0x70(0x10)
	struct TArray<struct UTigerBufferedAction*> QueuedActions; // 0x80(0x10)
	struct TWeakObjectPtr<struct ATigerPlayerController> Owner; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Tiger.TigerPlayerAnimInstance
// Size: 0x530 (Inherited: 0x3c0)
struct UTigerPlayerAnimInstance : UTigerAnimInstance {
	struct UAnimMontage* CurrentDownedMontage; // 0x3b8(0x08)
	struct FTigerHandIkWallTraceData HandIkTraceDataWhenWallHanging; // 0x3c0(0x58)
	struct TArray<struct FTigerAnimMetaData> CurrentMontageMetaData; // 0x418(0x10)
	struct TArray<struct UAnimMetaData*> CurrentAnimNodeMetaData; // 0x428(0x10)
	struct TArray<struct UAnimMetaData*> CurrentMetaDataFromProxy; // 0x438(0x10)
	struct UCurveFloat* CurrentTurnStartCurve; // 0x448(0x08)
	bool bIsEmoting; // 0x450(0x01)
	bool bIsJumping; // 0x451(0x01)
	bool bIsCrouching; // 0x452(0x01)
	bool bIsClimbing; // 0x453(0x01)
	bool bIsFalling; // 0x454(0x01)
	bool bIsSliding; // 0x455(0x01)
	bool bIsSprinting; // 0x456(0x01)
	bool bIsLedgeGrabbing; // 0x457(0x01)
	bool bWasSprintingWhenStartingJump; // 0x458(0x01)
	float SprintMultiplier; // 0x45c(0x04)
	float ClimbPitch; // 0x460(0x04)
	bool bWasLastLandingHard; // 0x464(0x01)
	bool bMeleeSwingRecoveryHasDisabledRootMotion; // 0x465(0x01)
	bool bIsOnGroundDuringAerialAttack; // 0x466(0x01)
	float Acceleration; // 0x468(0x04)
	float FloorHeightSensitivty; // 0x46c(0x04)
	bool bIsProbablyTouchingFloor; // 0x474(0x01)
	bool bHasVanishBuff; // 0x475(0x01)
	bool bIsInCombat; // 0x476(0x01)
	bool bIsDowned; // 0x477(0x01)
	bool bIsInWallJump; // 0x478(0x01)
	bool bWallJumpIsAvailable; // 0x479(0x01)
	enum class ETigerDisciplinesEnum ActiveMontageDisciplineType; // 0x47a(0x01)
	bool bAllowRotationLerpDuringDisciplineMontage; // 0x47b(0x01)
	int32_t CurrentJumpCount; // 0x47c(0x04)
	struct FName DownedMontageNames[0x4]; // 0x480(0x20)
	struct FName StaticEntryToDownedMontageName; // 0x4a0(0x08)
	enum class ESharkFourWayDirection AirDashDirection; // 0x4a8(0x01)
	enum class ESharkFourWayDirection WallJumpDirection; // 0x4a9(0x01)
	enum class ESharkFourWayDirection WallJumpAnticipationDirection; // 0x4aa(0x01)
	char pad_4AB[0x1]; // 0x4ab(0x01)
	float WallGrindRotationFromWallInDegrees; // 0x4ac(0x04)
	float CameraRelativeWallJumpCosineAngle; // 0x4b0(0x04)
	float WallJumpPlayerFacingYaw; // 0x4b4(0x04)
	float AirDashAngleInDegrees; // 0x4b8(0x04)
	enum class ETigerWallJumpAnimationState WallJumpAnimationState; // 0x4bc(0x01)
	char pad_4BD[0x3]; // 0x4bd(0x03)
	struct FTigerPlayerAnimationSets AnimationsSetsByGender[0x2]; // 0x4c0(0x30)
	bool bIsInTurnStart; // 0x4f0(0x01)
	bool bTurnStartIsOnCooldown; // 0x4f1(0x01)
	bool bAdjustClimbSpeedByAnimation; // 0x4f2(0x01)
	char pad_4F3[0x1]; // 0x4f3(0x01)
	float SurfaceCompensationInterpSpeed; // 0x4f4(0x04)
	float SurfaceCompensationPitch; // 0x4f8(0x04)
	float SurfaceCompensationRoll; // 0x4fc(0x04)
	int32_t CurrentLodLevel; // 0x500(0x04)
	char pad_504[0x2c]; // 0x504(0x2c)

	void OnWantsToStartRangedAttack(); // Function Tiger.TigerPlayerAnimInstance.OnWantsToStartRangedAttack // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsPlayingDisciplineMontage(); // Function Tiger.TigerPlayerAnimInstance.IsPlayingDisciplineMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a830
	bool IsAllowingRotationLerpDuringCurrentDisciplineMontage(); // Function Tiger.TigerPlayerAnimInstance.IsAllowingRotationLerpDuringCurrentDisciplineMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a6b0
	struct FVector GetPlayerDesiredMovement(bool bShowDebug); // Function Tiger.TigerPlayerAnimInstance.GetPlayerDesiredMovement // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a1c0
	struct ATigerPlayer* GetPlayer(); // Function Tiger.TigerPlayerAnimInstance.GetPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a190
	float GetBlendingInFirePoseTimeLeft(); // Function Tiger.TigerPlayerAnimInstance.GetBlendingInFirePoseTimeLeft // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16c0340
	void GetAllActiveMetadata(struct TArray<struct UAnimMetaData*> OutActiveMetaData); // Function Tiger.TigerPlayerAnimInstance.GetAllActiveMetadata // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1309b60
	void ClearWallJumpAnimationState(); // Function Tiger.TigerPlayerAnimInstance.ClearWallJumpAnimationState // (Final|Native|Public|BlueprintCallable) // @ game+0x1308590
	void CalculateTurnInPlace(float InDeltaSeconds, float InAimYawDelta, bool bInCanEnterTurnInPlace, bool bOutShouldTriggerTurnInPlace); // Function Tiger.TigerPlayerAnimInstance.CalculateTurnInPlace // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1308370
	void CalculateFootOffsetTargets(struct FName InFootBoneName, float InTraceLengthAboveFoot, float InTraceLengthBelowFoot, struct FVector InMinLimits, struct FVector InMaxLimits, enum class ETraceTypeQuery InTraceChannel, bool bInShowTraces, struct FRotator OutFootRotation, struct FVector OutFootOffset); // Function Tiger.TigerPlayerAnimInstance.CalculateFootOffsetTargets // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1308090
};

// Class Tiger.TigerPlayerAppearanceCache
// Size: 0x290 (Inherited: 0x228)
struct ATigerPlayerAppearanceCache : AActor {
	struct UTigerCharCustomizationComponent* CharacterCustomizationComponent; // 0x228(0x08)
	struct UTigerCharacterMeshManager* MeshManager; // 0x230(0x08)
	struct USkeletalMeshComponent* MeshComponents[0xb]; // 0x238(0x58)
};

// Class Tiger.TigerPlayerBeingLoggedInToServer
// Size: 0xf8 (Inherited: 0x28)
struct UTigerPlayerBeingLoggedInToServer : UObject {
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x28(0x08)
	char pad_30[0xc8]; // 0x30(0xc8)
};

// Class Tiger.TigerPlayerBotsSubsystem
// Size: 0x80 (Inherited: 0x30)
struct UTigerPlayerBotsSubsystem : UGameInstanceSubsystem {
	char pad_30[0x50]; // 0x30(0x50)
};

// Class Tiger.TigerPlayerBotSubsystemSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerPlayerBotSubsystemSettings : UDeveloperSettings {
	bool bUseSplitscreen; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerBufferedActionBlock
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionBlock : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionCrouch
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionCrouch : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionDisciplineBase
// Size: 0x50 (Inherited: 0x48)
struct UTigerBufferedActionDisciplineBase : UTigerBufferedAction {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Tiger.TigerBufferedActionDisciplineArchetype
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineArchetype : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineArchetypeReleased
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineArchetypeReleased : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineClan
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineClan : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineClanReleased
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineClanReleased : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineWeaponAbility
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineWeaponAbility : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineWeaponAbilityReleased
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineWeaponAbilityReleased : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDodge
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionDodge : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionJump
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionJump : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionMelee
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionMelee : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionRanged
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionRanged : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionReload
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionReload : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionSprint
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionSprint : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionSwitchWeapon
// Size: 0x50 (Inherited: 0x48)
struct UTigerBufferedActionSwitchWeapon : UTigerBufferedAction {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Tiger.TigerBufferedActionToggleHSenses
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionToggleHSenses : UTigerBufferedAction {
};

// Class Tiger.TigerPlayerCameraManager
// Size: 0x2900 (Inherited: 0x27c0)
struct ATigerPlayerCameraManager : APlayerCameraManager {
	float MinSpringArmLengthWhenLookingUp; // 0x27c0(0x04)
	float BaseTurnRate; // 0x27c4(0x04)
	float BaseLookUpRate; // 0x27c8(0x04)
	char pad_27CC[0x4]; // 0x27cc(0x04)
	struct UTigerCameraPreset* CameraPresetsAdditive[0x4]; // 0x27d0(0x20)
	struct UMatineeCameraShake* AdditiveCameraShakeInstances[0x4]; // 0x27f0(0x20)
	struct UMatineeCameraShake* CurrentPresetShakeBehaviour; // 0x2810(0x08)
	struct UTigerFullscreenFXManager* FullscreenFXManager; // 0x2818(0x08)
	struct UCurveFloat* RecoilResetCurve; // 0x2820(0x08)
	struct UCurveFloat* RecoilResetSpeedCurve; // 0x2828(0x08)
	float TimeBeforeRecoilReset; // 0x2830(0x04)
	char pad_2834[0x4]; // 0x2834(0x04)
	struct UCurveFloat* VerticalRecoilCurve; // 0x2838(0x08)
	struct UCurveFloat* HorizontalRecoilCurve; // 0x2840(0x08)
	struct ATigerPlayer* TigerPlayer; // 0x2848(0x08)
	struct ATigerBloodVeinPawn* BloodVeinPawn; // 0x2850(0x08)
	struct ATigerPlayerController* TigerPlayerController; // 0x2858(0x08)
	char pad_2860[0x8]; // 0x2860(0x08)
	struct UCurveFloat* DefaultTransitionCurve; // 0x2868(0x08)
	struct UTigerCameraPreset* CameraPresetOverride; // 0x2870(0x08)
	struct UTigerCameraPreset* CameraPresetIndoorOverride; // 0x2878(0x08)
	struct UTigerSpringArmComponent* CurrentSpringArm; // 0x2880(0x08)
	struct UTigerCameraBehavior* CurrentCameraBehavior; // 0x2888(0x08)
	struct UTigerCameraPreset* PreviousCameraPreset; // 0x2890(0x08)
	char pad_2898[0x38]; // 0x2898(0x38)
	struct TArray<struct UTigerCameraBehavior*> CachedCameraBehaviors; // 0x28d0(0x10)
	struct TArray<struct UTigerAdditiveCameraBehavior*> AdditiveCameraBehaviors; // 0x28e0(0x10)
	char pad_28F0[0x10]; // 0x28f0(0x10)

	struct UCurveFloat* SelectPresetTransitionCurve(struct UTigerCameraPreset* InPreviousPreset, struct UTigerCameraPreset* InNewPreset); // Function Tiger.TigerPlayerCameraManager.SelectPresetTransitionCurve // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OverrideCameraPreset(struct UTigerCameraPreset* CameraPresetClass, float Duration, struct UTigerCameraPreset* CameraPresetClassIndoor); // Function Tiger.TigerPlayerCameraManager.OverrideCameraPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x130ab70
	void OnChangingCameraPreset(struct UTigerCameraPreset* InCurrentCameraPresetClass, struct UTigerCameraPreset* InNewCameraPresetClass); // Function Tiger.TigerPlayerCameraManager.OnChangingCameraPreset // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool HasActiveCameraAnimations(); // Function Tiger.TigerPlayerCameraManager.HasActiveCameraAnimations // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a470
	struct AActor* GetViewTargetBlueprint(); // Function Tiger.TigerPlayerCameraManager.GetViewTargetBlueprint // (Final|Native|Public|BlueprintCallable) // @ game+0x130a420
	void ForceFinishCurrentCameraTransition(); // Function Tiger.TigerPlayerCameraManager.ForceFinishCurrentCameraTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x1309b10
	struct UTigerCameraPreset* EvaluateCameraPreset(); // Function Tiger.TigerPlayerCameraManager.EvaluateCameraPreset // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerPlayerClanData
// Size: 0x160 (Inherited: 0x30)
struct UTigerPlayerClanData : UDataAsset {
	struct FText DISPLAYNAME; // 0x30(0x18)
	enum class ETigerClan ClanType; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct UTexture2D* IconTexture; // 0x50(0x08)
	struct UTexture2D* LargeIconTexture; // 0x58(0x08)
	SoftClassProperty CharacterCreationStartingOutfitPath[0x2]; // 0x60(0x50)
	struct TArray<struct UTigerCharacterBodyTypeCustomization*> BodyTypeItems; // 0xb0(0x10)
	struct TArray<struct UTigerPowerKit*> PowerKits; // 0xc0(0x10)
	struct UTigerUtilityPowerBaseComponent* UtilityPower; // 0xd0(0x08)
	struct UTexture2D* UtilityPowerIcon; // 0xd8(0x08)
	struct USoundBase* StaggeredByAttackSound; // 0xe0(0x08)
	struct UMatineeCameraShake* FallShakeLowDrop; // 0xe8(0x08)
	struct UMatineeCameraShake* FallShakeHighDrop; // 0xf0(0x08)
	struct UTigerAnimationSetAsset* ClanAnimationSet[0x2]; // 0xf8(0x10)
	bool bBloodDropGlows; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
	struct TMap<enum class ETigerClan, float> ClanSpecificDiablerizeOffsets; // 0x110(0x50)
};

// Class Tiger.TigerItemCheatCommandsAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerItemCheatCommandsAsset : UDataAsset {
	struct TMap<struct FString, struct UTigerItemAsset*> Commands; // 0x30(0x50)
};

// Class Tiger.TigerPlayerController
// Size: 0xba8 (Inherited: 0x578)
struct ATigerPlayerController : APlayerController {
	struct FMulticastInlineDelegate OnPersistentPlayerInitialisedEvent; // 0x578(0x10)
	struct FMulticastInlineDelegate OnGhostModeSet; // 0x588(0x10)
	struct FMulticastInlineDelegate OnBeginPlay; // 0x598(0x10)
	struct FMulticastInlineDelegate OnPlayerStateCreated; // 0x5a8(0x10)
	struct FMulticastInlineDelegate OnClientDownedEnemyPlayer; // 0x5b8(0x10)
	struct FMulticastInlineDelegate OnCancelPsoCaching; // 0x5c8(0x10)
	char pad_5D8[0x30]; // 0x5d8(0x30)
	struct ATigerLocalAIController* LocalAIController; // 0x608(0x08)
	struct ATigerLocalAIController* LocalAIControllerClass; // 0x610(0x08)
	struct ATigerLocalAIControllerBase* GameplayBenchmarkController; // 0x618(0x08)
	struct ATigerLocalAIControllerBase* GameplayBenchmarkControllerClass; // 0x620(0x08)
	char pad_628[0x10]; // 0x628(0x10)
	struct UAkAudioEvent* MusicAudioEvent; // 0x638(0x08)
	struct AActor* SeamlessAudioActor; // 0x640(0x08)
	char pad_648[0x18]; // 0x648(0x18)
	struct UTigerUserInputBinding* UserInputBindings; // 0x660(0x08)
	struct FMulticastInlineDelegate OnUseGamepadChanged; // 0x668(0x10)
	bool bSilentMusic; // 0x678(0x01)
	char pad_679[0x3]; // 0x679(0x03)
	int32_t RedGasAkEventID; // 0x67c(0x04)
	int32_t CloseToRedGasAkEventID; // 0x680(0x04)
	char pad_684[0x4]; // 0x684(0x04)
	struct FMulticastInlineDelegate OnItemPickedUp; // 0x688(0x10)
	struct FMulticastInlineDelegate OnInventoryToggle; // 0x698(0x10)
	struct FMulticastInlineDelegate OnInitialLevelStreamingCompletedDelegate; // 0x6a8(0x10)
	struct UTigerResurrectComponent* ResurrectComponent; // 0x6b8(0x08)
	struct ATigerClientInteractiveSpawner* ClientSpawner; // 0x6c0(0x08)
	char pad_6C8[0x8]; // 0x6c8(0x08)
	struct ASpectatorPawn* SpectatingClass; // 0x6d0(0x08)
	struct UTigerMapInfoDataAsset* MapInfoAsset; // 0x6d8(0x08)
	struct UUserWidget* PlayerMapMarkerClass; // 0x6e0(0x08)
	struct UTigerUserInputBinding* UserInputSettingsClass; // 0x6e8(0x08)
	struct UUserWidget* RevealedItemMapMarkerWidgetClass; // 0x6f0(0x08)
	struct UUserWidget* RevealedItemCompassObjectWidgetClass; // 0x6f8(0x08)
	struct ATigerWorldMarker* QuestMapMarkerClass; // 0x700(0x08)
	float ControlRotationSpeedStandingStill; // 0x708(0x04)
	char pad_70C[0x4]; // 0x70c(0x04)
	struct UCurveFloat* ControlRotationSpeedMovingCurve; // 0x710(0x08)
	float ControlRotationSpeedMoving; // 0x718(0x04)
	float MinControlRotationSpeedMoving; // 0x71c(0x04)
	float InstantControlRotationTimeThreshold; // 0x720(0x04)
	float CycleWeaponsHolsterHoldTime; // 0x724(0x04)
	float SprintCancelTimeOnGamepad; // 0x728(0x04)
	float SprintGamepadInputLimit; // 0x72c(0x04)
	float SprintGamepadInputAngle; // 0x730(0x04)
	char pad_734[0x4]; // 0x734(0x04)
	float RandomizedDamageScale; // 0x738(0x04)
	float MouseScrollWeaponChangeCooldown; // 0x73c(0x04)
	char pad_740[0x4]; // 0x740(0x04)
	float TigerStuckTriggerZ; // 0x744(0x04)
	float ClimbingInputZCutOff; // 0x748(0x04)
	float MinimumUpwardClimbAngle; // 0x74c(0x04)
	float MaximumSidewaysClimbDeviation; // 0x750(0x04)
	float ClimbingOverHangZCutOff; // 0x754(0x04)
	float ClimbingHalfAngleInputDifferenceAllowed; // 0x758(0x04)
	bool bOnlyStartClimbIfLookingAtWall; // 0x75c(0x01)
	char pad_75D[0x3]; // 0x75d(0x03)
	struct UAkAudioEvent* TargetDownedAudioEvent; // 0x760(0x08)
	struct UAkAudioEvent* PlayerDownedAudioEvent; // 0x768(0x08)
	struct UAkAudioEvent* GuidingAudioEvent; // 0x770(0x08)
	float GuidingAudioCooldown; // 0x778(0x04)
	char pad_77C[0x4]; // 0x77c(0x04)
	struct UCurveFloat* AimAtEnemyGamepadRotationMultiplierCurve; // 0x780(0x08)
	struct UCurveFloat* AimAtEnemyGamepadRotationMultiplierCurveAiming; // 0x788(0x08)
	struct UCurveFloat* GamepadCameraYawStrengthCurve; // 0x790(0x08)
	struct UCurveFloat* GamepadCameraPitchStrengthCurve; // 0x798(0x08)
	struct UCurveFloat* GamepadRangedCameraYawStrengthCurve; // 0x7a0(0x08)
	struct UCurveFloat* GamepadRangedCameraPitchStrengthCurve; // 0x7a8(0x08)
	struct UCurveFloat* GamepadAimingCameraYawStrengthCurve; // 0x7b0(0x08)
	struct UCurveFloat* GamepadAimingCameraPitchStrengthCurve; // 0x7b8(0x08)
	struct UCurveFloat* GamepadCameraYawAccelerationCurve; // 0x7c0(0x08)
	struct UCurveFloat* GamepadCameraPitchAccelerationCurve; // 0x7c8(0x08)
	struct UCurveFloat* GamepadRangedCameraYawAccelerationCurve; // 0x7d0(0x08)
	struct UCurveFloat* GamepadRangedCameraPitchAccelerationCurve; // 0x7d8(0x08)
	struct UCurveFloat* GamepadAimingCameraYawAccelerationCurve; // 0x7e0(0x08)
	struct UCurveFloat* GamepadAimingCameraPitchAccelerationCurve; // 0x7e8(0x08)
	float DisciplineWeaponAbilityTriggerWindow; // 0x7f0(0x04)
	float HeightenedSensesPadTriggerwindow; // 0x7f4(0x04)
	float ConsumableWheelTriggerWindow; // 0x7f8(0x04)
	char pad_7FC[0x4]; // 0x7fc(0x04)
	struct UForceFeedbackEffect* DamageTakenForceFeedback; // 0x800(0x08)
	float DamageTakenForceFeedbackCooldown; // 0x808(0x04)
	char pad_80C[0x4]; // 0x80c(0x04)
	struct UForceFeedbackEffect* DeathForceFeedback; // 0x810(0x08)
	struct UForceFeedbackEffect* DownedForceFeedback; // 0x818(0x08)
	struct UForceFeedbackEffect* SoftLandingForceFeedback; // 0x820(0x08)
	struct UForceFeedbackEffect* HeavyLandingForceFeedback; // 0x828(0x08)
	struct ATigerSpectatorPawn* TigerSpectatorPawn; // 0x830(0x08)
	float HeavyAttackTriggerTime; // 0x838(0x04)
	float HeavyAttackTriggerTimeGamepad; // 0x83c(0x04)
	enum class ETigerMusicAudioState MusicAudioState; // 0x840(0x01)
	enum class ETigerBlindedAudioState BlindedAudioState; // 0x841(0x01)
	enum class ETigerIndoorAudioState IndoorAudioState; // 0x842(0x01)
	enum class ETigerMainMenuAudioState MainMenuAudioState; // 0x843(0x01)
	enum class ETigerAmbienceAudioState AmbienceAudioState; // 0x844(0x01)
	enum class ETigerCombatAudioState CombatAudioState; // 0x845(0x01)
	enum class ETigerFeedingAudioState FeedingAudioState; // 0x846(0x01)
	char pad_847[0x1]; // 0x847(0x01)
	float AssaultBorderMusicDistance; // 0x848(0x04)
	float RedGasLastWaveAssaultBorderMusicDistance; // 0x84c(0x04)
	float RedGasLastStageAssaultBorderMusicDistance; // 0x850(0x04)
	float AmbientMusicTimer; // 0x854(0x04)
	float NoAmbientMusicTimer; // 0x858(0x04)
	float NoAmbienceMusicTimerInterval; // 0x85c(0x04)
	float AmbientMusicTimerInterval; // 0x860(0x04)
	struct FVector2D RightThumbstick; // 0x864(0x08)
	struct TWeakObjectPtr<struct ATigerPaperDoll> PaperDoll; // 0x86c(0x08)
	char pad_874[0x4]; // 0x874(0x04)
	struct UTigerInteractionControllerComponent* InteractionControllerComponent; // 0x878(0x08)
	struct UTigerClientSeasonalRewardCollection* ClientSeasonalRewardCollection; // 0x880(0x08)
	struct UTigerClientChallengesCollection* ClientChallengesCollection; // 0x888(0x08)
	struct UTigerThrallSystem* ThrallComponent; // 0x890(0x08)
	struct UTigerCollectibleSystem* CollectibleComponent; // 0x898(0x08)
	struct UTigerQuestSystem* QuestComponent; // 0x8a0(0x08)
	struct UTSSClientComponent* AntiCheatTssComponent; // 0x8a8(0x08)
	enum class ETigerMusicAudioState OverrideMusicAudioState; // 0x8b0(0x01)
	char pad_8B1[0x7]; // 0x8b1(0x07)
	struct UTigerActionBuffer* ActionBufferClass; // 0x8b8(0x08)
	struct UTigerActionBuffer* ActionBuffer; // 0x8c0(0x08)
	char pad_8C8[0x10]; // 0x8c8(0x10)
	struct ATigerPlayer* TigerPlayerPawn; // 0x8d8(0x08)
	char pad_8E0[0x8]; // 0x8e0(0x08)
	struct ATigerBloodVeinPawn* TigerBloodVeinPawn; // 0x8e8(0x08)
	char pad_8F0[0x8]; // 0x8f0(0x08)
	struct UTigerMapGameData* MapGameData; // 0x8f8(0x08)
	struct UTigerInWorldIconController* InWorldIconController; // 0x900(0x08)
	struct UTigerPingControllerComponent* PingControllerComponent; // 0x908(0x08)
	struct UTigerContextualHelpComponent* ContextualHelpComponent; // 0x910(0x08)
	struct UTigerEmoteControllerComponent* EmoteControllerComponent; // 0x918(0x08)
	struct UTigerChatComponent* ChatComponent; // 0x920(0x08)
	char pad_928[0x78]; // 0x928(0x78)
	struct UTigerMapMarkerProxy* PlayerMapMarkerProxy; // 0x9a0(0x08)
	char pad_9A8[0x8]; // 0x9a8(0x08)
	struct UInputComponent* GhostInputComponent; // 0x9b0(0x08)
	struct UInputComponent* SpectateInputComponent; // 0x9b8(0x08)
	struct UInputComponent* HUDInputComponent; // 0x9c0(0x08)
	struct ATigerWorldCompositionGrid* StreamingGrid; // 0x9c8(0x08)
	char pad_9D0[0x2]; // 0x9d0(0x02)
	enum class ETigerWeaponSlot PreviouslyEquippedRangedSlot; // 0x9d2(0x01)
	char pad_9D3[0x41]; // 0x9d3(0x41)
	float MouseSidewaysSprintSafetyAngle; // 0xa14(0x04)
	float PitchSensitivityModifier; // 0xa18(0x04)
	float YawSensitivityModifier; // 0xa1c(0x04)
	float PitchAccelerationDeadZone; // 0xa20(0x04)
	float YawAccelerationDeadZone; // 0xa24(0x04)
	float PitchRangedAccelerationDeadZone; // 0xa28(0x04)
	float YawRangedAccelerationDeadZone; // 0xa2c(0x04)
	bool bUndoAccelerationInDeadZone; // 0xa30(0x01)
	char pad_A31[0x7]; // 0xa31(0x07)
	struct TSoftObjectPtr<struct UTigerNPCCheatCommandsAsset> NPCCheatCommandsAsset; // 0xa38(0x28)
	struct UTigerNPCCheatCommandsAsset* NPCCheatCommands; // 0xa60(0x08)
	struct TSoftObjectPtr<struct UTigerItemCheatCommandsAsset> ItemCheatCommandsAsset; // 0xa68(0x28)
	struct UTigerItemCheatCommandsAsset* ItemCheatCommands; // 0xa90(0x08)
	struct ATigerNPCInstantSpawner* NpcCheatSpawner; // 0xa98(0x08)
	struct UTigerWheelWidget* CurrentWheelWidget; // 0xaa0(0x08)
	struct UTigerVendorComponent* ElysiumVendorComponent; // 0xaa8(0x08)
	char pad_AB0[0x60]; // 0xab0(0x60)
	bool bPawnRotatesWithCameraWhileIdle; // 0xb10(0x01)
	bool bUseTurnInPlace; // 0xb11(0x01)
	bool bPrintRightGamepadAxis; // 0xb12(0x01)
	char pad_B13[0x1d]; // 0xb13(0x1d)
	struct FText KilledBloodHuntedPlayerText; // 0xb30(0x18)
	char pad_B48[0xc]; // 0xb48(0x0c)
	float TimeUntilKeyIsHeld; // 0xb54(0x04)
	char pad_B58[0x18]; // 0xb58(0x18)
	struct TArray<struct TWeakObjectPtr<struct ATigerSHPBMarker>> DiscoveredSHPBMarkers; // 0xb70(0x10)
	char pad_B80[0x28]; // 0xb80(0x28)

	void WaitForPersistantPlayerStateInitialisation(struct FDelegate OnLoaded); // Function Tiger.TigerPlayerController.WaitForPersistantPlayerStateInitialisation // (Final|Native|Protected|BlueprintCallable) // @ game+0x1310340
	void UseWeaponAbility(); // Function Tiger.TigerPlayerController.UseWeaponAbility // (Final|Native|Private|BlueprintCallable) // @ game+0x1310320
	void TryReload(); // Function Tiger.TigerPlayerController.TryReload // (Final|Native|Private|BlueprintCallable) // @ game+0x1310300
	void ToggleShowCombatStatus(); // Function Tiger.TigerPlayerController.ToggleShowCombatStatus // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerTrackLocomotionData(); // Function Tiger.TigerPlayerController.TigerTrackLocomotionData // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerToggleServerGunSoundRpcs(); // Function Tiger.TigerPlayerController.TigerToggleServerGunSoundRpcs // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerToggleOutlines(); // Function Tiger.TigerPlayerController.TigerToggleOutlines // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerToggleElysiumMobility(); // Function Tiger.TigerPlayerController.TigerToggleElysiumMobility // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerToggleDebugWallGrind(bool bInShouldPrintVelocity, bool bInShowVisualDebug, bool bInDebugVFX, bool bInShowSimulation); // Function Tiger.TigerPlayerController.TigerToggleDebugWallGrind // (Final|Exec|Native|Public) // @ game+0x1310180
	void TigerToggleCrosshairDebug(); // Function Tiger.TigerPlayerController.TigerToggleCrosshairDebug // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerToggleCharacterCard(); // Function Tiger.TigerPlayerController.TigerToggleCharacterCard // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerTestSpawnMechanic(); // Function Tiger.TigerPlayerController.TigerTestSpawnMechanic // (Final|Exec|Native|Public) // @ game+0x1310160
	void TigerTakeDamage(float DamageAmount); // Function Tiger.TigerPlayerController.TigerTakeDamage // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13100e0
	void TigerSwitchCharacter(int32_t InCharacterSlot); // Function Tiger.TigerPlayerController.TigerSwitchCharacter // (Final|Exec|Native|Public) // @ game+0x1310050
	void TigerStuck(float DropHeightInMeters); // Function Tiger.TigerPlayerController.TigerStuck // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerStopServerProfiler(); // Function Tiger.TigerPlayerController.TigerStopServerProfiler // (Final|Exec|Native|Public) // @ game+0x1310030
	void TigerStopServerNetworkProfiler(); // Function Tiger.TigerPlayerController.TigerStopServerNetworkProfiler // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerStartServerProfiler(float Duration); // Function Tiger.TigerPlayerController.TigerStartServerProfiler // (Final|Exec|Native|Public) // @ game+0x130ffb0
	void TigerStartServerNetworkProfiler(float InDuration); // Function Tiger.TigerPlayerController.TigerStartServerNetworkProfiler // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerSpectate(); // Function Tiger.TigerPlayerController.TigerSpectate // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x130ff90
	void TigerSpawnBotsFromServer(uint32_t InNumberOfBotsToSpawn); // Function Tiger.TigerPlayerController.TigerSpawnBotsFromServer // (Final|Exec|Native|Public) // @ game+0x130ff00
	void TigerSpawnBotsFromClient(uint32_t InNumberOfBotsToSpawn); // Function Tiger.TigerPlayerController.TigerSpawnBotsFromClient // (Final|Exec|Native|Public) // @ game+0x130fe70
	void TigerSkipSpawnCountdownTimer(); // Function Tiger.TigerPlayerController.TigerSkipSpawnCountdownTimer // (Final|Exec|Native|Public) // @ game+0x130fe50
	void TigerShowPlayers(int32_t InShowPlayers); // Function Tiger.TigerPlayerController.TigerShowPlayers // (Final|Exec|Native|Public) // @ game+0x130fdc0
	void TigerShowNPCToPlayerSightData(float InScreenDuration); // Function Tiger.TigerPlayerController.TigerShowNPCToPlayerSightData // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerShowJumpLength(float DebugDrawDuration); // Function Tiger.TigerPlayerController.TigerShowJumpLength // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x12644d0
	void TigerShowFreeRunningVolumes(); // Function Tiger.TigerPlayerController.TigerShowFreeRunningVolumes // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerShowDPS(); // Function Tiger.TigerPlayerController.TigerShowDPS // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerShowCAPs(float DebugDrawDuration); // Function Tiger.TigerPlayerController.TigerShowCAPs // (Final|Exec|Native|Public) // @ game+0x130fd40
	void TigerSetServerRespawn(int32_t RespawnType); // Function Tiger.TigerPlayerController.TigerSetServerRespawn // (Final|Exec|Native|Public) // @ game+0x1263e00
	void TigerSetSafeZoneMarginRelative(float InWidthRel, float InHeightRel); // Function Tiger.TigerPlayerController.TigerSetSafeZoneMarginRelative // (Final|Exec|Native|Public) // @ game+0x130fc70
	void TigerSetSafeZoneMarginPixel(float InWidthPix, float InHeightPix); // Function Tiger.TigerPlayerController.TigerSetSafeZoneMarginPixel // (Final|Exec|Native|Public) // @ game+0x130fc70
	void TigerSetPlayerIsReadyToPlay(); // Function Tiger.TigerPlayerController.TigerSetPlayerIsReadyToPlay // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerSetMuteAudio(bool bInShouldMute); // Function Tiger.TigerPlayerController.TigerSetMuteAudio // (Final|Exec|Native|Private) // @ game+0x130fbe0
	void TigerSetHolyIncenseSpeedMultiplier(float InSpeedMultiplier); // Function Tiger.TigerPlayerController.TigerSetHolyIncenseSpeedMultiplier // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerSetHolyIncenseElapsedTime(float InTotalElapsedTime); // Function Tiger.TigerPlayerController.TigerSetHolyIncenseElapsedTime // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerSetBloodVeinMoveSpeedMultipliers(float InMainSpeedMultiplier, float InBranchSpeedMultiplier); // Function Tiger.TigerPlayerController.TigerSetBloodVeinMoveSpeedMultipliers // (Final|Exec|Native|Public) // @ game+0x130fb10
	void TigerServerLogSignificance(); // Function Tiger.TigerPlayerController.TigerServerLogSignificance // (Final|Exec|Native|Public) // @ game+0x130faf0
	void TigerServerConsoleExec(struct FString InExecString); // Function Tiger.TigerPlayerController.TigerServerConsoleExec // (Final|Exec|Native|Public) // @ game+0x12646e0
	void TigerSendPlayerServerPose(float InInterval); // Function Tiger.TigerPlayerController.TigerSendPlayerServerPose // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerSavePlayerLocation(); // Function Tiger.TigerPlayerController.TigerSavePlayerLocation // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerRevive(); // Function Tiger.TigerPlayerController.TigerRevive // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerResurrectMember(float InOffsetX, float InOffsetY, float InOffsetZ); // Function Tiger.TigerPlayerController.TigerResurrectMember // (Final|Exec|Native|Public) // @ game+0x130f9d0
	void TigerRestoreMasquerade(); // Function Tiger.TigerPlayerController.TigerRestoreMasquerade // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerResetDialogues(); // Function Tiger.TigerPlayerController.TigerResetDialogues // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerResetDialogueCategories(); // Function Tiger.TigerPlayerController.TigerResetDialogueCategories // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerRebindBoundConsoleCommand(struct FString NewConsoleCommand); // Function Tiger.TigerPlayerController.TigerRebindBoundConsoleCommand // (Final|Exec|Native|Public) // @ game+0x12646e0
	void TigerPrintTraversalState(float InScreenTime); // Function Tiger.TigerPlayerController.TigerPrintTraversalState // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerPrintServerTickRate(); // Function Tiger.TigerPlayerController.TigerPrintServerTickRate // (Final|Exec|Native|Public) // @ game+0x130f9b0
	void TigerPrintNumberOfPlayersInGame(); // Function Tiger.TigerPlayerController.TigerPrintNumberOfPlayersInGame // (Final|Exec|Native|Public) // @ game+0x130f990
	void TigerPrintCurrentAnimationSetsUsed(float ScreenDuration); // Function Tiger.TigerPlayerController.TigerPrintCurrentAnimationSetsUsed // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerPlayerLocalBenchmarkEnable(bool bInNowEnabled); // Function Tiger.TigerPlayerController.TigerPlayerLocalBenchmarkEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x130f900
	void TigerPlayerLocalAIEnable(bool bInNowEnabled); // Function Tiger.TigerPlayerController.TigerPlayerLocalAIEnable // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x130f870
	void TigerNextSpawn(); // Function Tiger.TigerPlayerController.TigerNextSpawn // (Final|Exec|Native|Protected) // @ game+0xb45020
	void TigerLogState(bool bShouldLog); // Function Tiger.TigerPlayerController.TigerLogState // (Final|Exec|Native|Public) // @ game+0x124be70
	void TigerLogAllSyncedMasqueradeInstances(float InScreenDuration); // Function Tiger.TigerPlayerController.TigerLogAllSyncedMasqueradeInstances // (Final|Exec|Native|Public) // @ game+0x12644d0
	void TigerLoadPlayerLocation(); // Function Tiger.TigerPlayerController.TigerLoadPlayerLocation // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerLoadLocalStoreConfig(enum class ETigerMetaStoreCategoryType InStoreCategoryType, struct FString InFilePath); // Function Tiger.TigerPlayerController.TigerLoadLocalStoreConfig // (Final|Exec|Native|Public) // @ game+0x130f790
	void TigerKickMe(); // Function Tiger.TigerPlayerController.TigerKickMe // (Final|Exec|Native|Public) // @ game+0x130f770
	void TigerGetNpcCount(); // Function Tiger.TigerPlayerController.TigerGetNpcCount // (Final|Exec|Native|Public) // @ game+0x130f750
	void TigerGetMovingNpcCount(); // Function Tiger.TigerPlayerController.TigerGetMovingNpcCount // (Final|Exec|Native|Public) // @ game+0x130f730
	void TigerFakeMatchmakingReady(struct FString InSoloOrSquadOfFour); // Function Tiger.TigerPlayerController.TigerFakeMatchmakingReady // (Final|Exec|Native|Public) // @ game+0x130f690
	void TigerEndMatch(); // Function Tiger.TigerPlayerController.TigerEndMatch // (Final|Exec|Native|Public) // @ game+0x130f670
	void TigerEnableServerAutoStats(); // Function Tiger.TigerPlayerController.TigerEnableServerAutoStats // (Final|Exec|Native|Public) // @ game+0x130f650
	void TigerDumpLocomotionData(); // Function Tiger.TigerPlayerController.TigerDumpLocomotionData // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerDisableGamepad(); // Function Tiger.TigerPlayerController.TigerDisableGamepad // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerDeleteCharacterSlot(char InCharacterSlot); // Function Tiger.TigerPlayerController.TigerDeleteCharacterSlot // (Final|Exec|Native|Public) // @ game+0x130f5d0
	void TigerDebugTraversalStates(bool bInEnableTraversalDebugging, bool bInPrintStatesToScreen, float InDebugLedgeGrabTime); // Function Tiger.TigerPlayerController.TigerDebugTraversalStates // (Final|Exec|Native|Public) // @ game+0x130f4a0
	void TigerDebugPrintRootMotionFlags(); // Function Tiger.TigerPlayerController.TigerDebugPrintRootMotionFlags // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerDebugPreMatchState(); // Function Tiger.TigerPlayerController.TigerDebugPreMatchState // (Final|Exec|Native|Public) // @ game+0x130f480
	void TigerDebugPlayerProjectilePooling(int32_t InShouldShowPoolMovements); // Function Tiger.TigerPlayerController.TigerDebugPlayerProjectilePooling // (Final|Exec|Native|Public) // @ game+0x130f3f0
	void TigerDebugLoadingStates(); // Function Tiger.TigerPlayerController.TigerDebugLoadingStates // (Final|Exec|Native|Public) // @ game+0x130f3d0
	void TigerDebugHolyIncense(); // Function Tiger.TigerPlayerController.TigerDebugHolyIncense // (Final|Exec|Native|Public) // @ game+0x130f3b0
	void TigerDebugGameFlowStates(); // Function Tiger.TigerPlayerController.TigerDebugGameFlowStates // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerDebugDrawNpcMovementRestrictionBounds(float InDebugDrawLifetime); // Function Tiger.TigerPlayerController.TigerDebugDrawNpcMovementRestrictionBounds // (Final|Exec|Native|Public) // @ game+0x130f330
	void TigerDebugCharacterSpeed(); // Function Tiger.TigerPlayerController.TigerDebugCharacterSpeed // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb45020
	void TigerDebugCharacterPath(float Duration); // Function Tiger.TigerPlayerController.TigerDebugCharacterPath // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x12644d0
	void TigerDeactivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.TigerDeactivateMasqueradeConsequence // (Final|Exec|Native|Public) // @ game+0x1263e90
	void TigerCancelPsoCaching__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.TigerCancelPsoCaching__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerCameraUrl(); // Function Tiger.TigerPlayerController.TigerCameraUrl // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerBuildVersion(); // Function Tiger.TigerPlayerController.TigerBuildVersion // (Final|Exec|Native|Public) // @ game+0x130f310
	void TigerBuildScreenshotMap(); // Function Tiger.TigerPlayerController.TigerBuildScreenshotMap // (Final|Exec|Native|Public) // @ game+0x130f2f0
	void TigerBecomeBloodhunted(); // Function Tiger.TigerPlayerController.TigerBecomeBloodhunted // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerBackendUrl(); // Function Tiger.TigerPlayerController.TigerBackendUrl // (Final|Exec|Native|Public) // @ game+0x130f2d0
	void TigerAllBecomeBloodhunted(); // Function Tiger.TigerPlayerController.TigerAllBecomeBloodhunted // (Final|Exec|Native|Public) // @ game+0xb45020
	void TigerAddItem(struct FString ItemName, int32_t Count); // Function Tiger.TigerPlayerController.TigerAddItem // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x130f1f0
	void TigerActivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.TigerActivateMasqueradeConsequence // (Final|Exec|Native|Public) // @ game+0x1263e90
	void StartAttackMouse(); // Function Tiger.TigerPlayerController.StartAttackMouse // (Final|Native|Private|BlueprintCallable) // @ game+0x130f1d0
	void StartAttackGamepad(); // Function Tiger.TigerPlayerController.StartAttackGamepad // (Final|Native|Private|BlueprintCallable) // @ game+0x130f1b0
	void ShutdownServer(); // Function Tiger.TigerPlayerController.ShutdownServer // (Final|Exec|Native|Public) // @ game+0x130f190
	void ShowMouseCursor(bool bInShouldStopAlternateAction); // Function Tiger.TigerPlayerController.ShowMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x130f100
	bool ShouldPlayForceFeedback(); // Function Tiger.TigerPlayerController.ShouldPlayForceFeedback // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a940
	void SetupAsBot(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerPlayerController.SetupAsBot // (Final|Native|Protected) // @ game+0x130f070
	void SetPlayerIsReadyToPlay(); // Function Tiger.TigerPlayerController.SetPlayerIsReadyToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x130f050
	void SetInCinematic(bool bCinematicState); // Function Tiger.TigerPlayerController.SetInCinematic // (Final|Native|Public|BlueprintCallable) // @ game+0x130efc0
	void SetHUDInputEnabled(bool bIsEnabled, bool bInShouldStopAlternateAction); // Function Tiger.TigerPlayerController.SetHUDInputEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x130eef0
	void SetFogDensity(float Value); // Function Tiger.TigerPlayerController.SetFogDensity // (Final|Exec|Native|Public) // @ game+0x130ee70
	void SetActiveFindSessionInstance(struct UTigerFindSessionAsync* FindSessionInstance); // Function Tiger.TigerPlayerController.SetActiveFindSessionInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x130ede0
	void Server_ToggleElysiumMobility(); // Function Tiger.TigerPlayerController.Server_ToggleElysiumMobility // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130ed90
	void Server_TigerTrackLocomotionData(); // Function Tiger.TigerPlayerController.Server_TigerTrackLocomotionData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130ed40
	void Server_TigerToggleServerGunSoundRpcs(); // Function Tiger.TigerPlayerController.Server_TigerToggleServerGunSoundRpcs // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130ecf0
	void Server_TigerToggleDebugWallGrind(bool bInShouldPrintVelocity, bool bInShowVisualDebug, bool bInDebugVFX, bool bInShowSimulation); // Function Tiger.TigerPlayerController.Server_TigerToggleDebugWallGrind // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130eb20
	void Server_TigerTestSpawnMechanic(); // Function Tiger.TigerPlayerController.Server_TigerTestSpawnMechanic // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130ead0
	void Server_TigerTeleportPlayer(struct FVector Location, struct FRotator Rotation); // Function Tiger.TigerPlayerController.Server_TigerTeleportPlayer // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x130e9e0
	void Server_TigerTakeDamage(float DamageAmount); // Function Tiger.TigerPlayerController.Server_TigerTakeDamage // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e920
	void Server_TigerStuck(float DropHeightInMeters); // Function Tiger.TigerPlayerController.Server_TigerStuck // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e860
	void Server_TigerStopServerProfiler(); // Function Tiger.TigerPlayerController.Server_TigerStopServerProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e810
	void Server_TigerStopServerNetworkProfiler(); // Function Tiger.TigerPlayerController.Server_TigerStopServerNetworkProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e7c0
	void Server_TigerStartServerProfiler(float Duration); // Function Tiger.TigerPlayerController.Server_TigerStartServerProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e700
	void Server_TigerStartServerNetworkProfiler(float InDuration); // Function Tiger.TigerPlayerController.Server_TigerStartServerNetworkProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e640
	void Server_TigerSkipSpawnCountdownTimer(); // Function Tiger.TigerPlayerController.Server_TigerSkipSpawnCountdownTimer // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e5f0
	void Server_TigerShowNPCToPlayerSightData(float InScreenDuration); // Function Tiger.TigerPlayerController.Server_TigerShowNPCToPlayerSightData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e530
	void Server_TigerShowCaps(float DebugDrawLength); // Function Tiger.TigerPlayerController.Server_TigerShowCaps // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e470
	void Server_TigerServerConsoleExec(struct FString InExecString); // Function Tiger.TigerPlayerController.Server_TigerServerConsoleExec // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e3b0
	void Server_TigerSendPlayerServerPose(float InInterval); // Function Tiger.TigerPlayerController.Server_TigerSendPlayerServerPose // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e2f0
	void Server_TigerRevive(); // Function Tiger.TigerPlayerController.Server_TigerRevive // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e2a0
	void Server_TigerRestoreMasquerade(); // Function Tiger.TigerPlayerController.Server_TigerRestoreMasquerade // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e250
	void Server_TigerPrintTraversalState(float InScreenTime); // Function Tiger.TigerPlayerController.Server_TigerPrintTraversalState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e190
	void Server_TigerPrintServerTickRate(); // Function Tiger.TigerPlayerController.Server_TigerPrintServerTickRate // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e140
	void Server_TigerPrintNumberOfPlayersInGame(); // Function Tiger.TigerPlayerController.Server_TigerPrintNumberOfPlayersInGame // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e0f0
	void Server_TigerNextSpawn(); // Function Tiger.TigerPlayerController.Server_TigerNextSpawn // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x130e0a0
	void Server_TigerLogSignificance(); // Function Tiger.TigerPlayerController.Server_TigerLogSignificance // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130e050
	void Server_TigerLoadLocalStoreConfig(enum class ETigerMetaStoreCategoryType InStoreCategoryType, struct FString InFilePath); // Function Tiger.TigerPlayerController.Server_TigerLoadLocalStoreConfig // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x130df60
	void Server_TigerEndMatch(); // Function Tiger.TigerPlayerController.Server_TigerEndMatch // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130df10
	void Server_TigerDumpLocomotionData(); // Function Tiger.TigerPlayerController.Server_TigerDumpLocomotionData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130dec0
	void Server_TigerDebugTraversalStates(bool bInEnableTraversalDebugging, bool bInPrintStatesToScreen, float InDebugLedgeGrabTime); // Function Tiger.TigerPlayerController.Server_TigerDebugTraversalStates // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130dd70
	void Server_TigerDebugPrematchState(); // Function Tiger.TigerPlayerController.Server_TigerDebugPrematchState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130dd20
	void Server_TigerDebugLoadingStates(); // Function Tiger.TigerPlayerController.Server_TigerDebugLoadingStates // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130dcd0
	void Server_TigerDebugDrawPlayerGrid(float DebugDrawLifetime); // Function Tiger.TigerPlayerController.Server_TigerDebugDrawPlayerGrid // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130dc10
	void Server_TigerDebugDrawNpcMovementRestrictionBounds(float InDebugDrawLifetime); // Function Tiger.TigerPlayerController.Server_TigerDebugDrawNpcMovementRestrictionBounds // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130db50
	void Server_TigerDebugCharacterPath(float Duration); // Function Tiger.TigerPlayerController.Server_TigerDebugCharacterPath // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130da90
	void Server_TigerDeactivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.Server_TigerDeactivateMasqueradeConsequence // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130d9d0
	void Server_TigerBecomeBloodhunted(bool bInAllPlayers); // Function Tiger.TigerPlayerController.Server_TigerBecomeBloodhunted // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130d910
	void Server_TigerAddItem(struct UTigerItemAsset* ItemAsset, int32_t RequestedCount, enum class ETigerTelemetryItemSourceID InItemSourceID); // Function Tiger.TigerPlayerController.Server_TigerAddItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130d7d0
	void Server_TigerActivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.Server_TigerActivateMasqueradeConsequence // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130d710
	void Server_TeleportToMapLocation(struct FVector2D Location); // Function Tiger.TigerPlayerController.Server_TeleportToMapLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable|NetValidate) // @ game+0x130d660
	void Server_StopUsingConsumable(); // Function Tiger.TigerPlayerController.Server_StopUsingConsumable // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130d610
	void Server_StopFireWeapon(); // Function Tiger.TigerPlayerController.Server_StopFireWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130d5c0
	void Server_StopBlocking(); // Function Tiger.TigerPlayerController.Server_StopBlocking // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130d570
	void Server_StopAiming(); // Function Tiger.TigerPlayerController.Server_StopAiming // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130d520
	void Server_StartHeavySwing(bool bDisabledRootMotion); // Function Tiger.TigerPlayerController.Server_StartHeavySwing // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130d460
	void Server_StartBlocking(); // Function Tiger.TigerPlayerController.Server_StartBlocking // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130d410
	void Server_StartAiming(); // Function Tiger.TigerPlayerController.Server_StartAiming // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130d3c0
	void Server_Spectate(); // Function Tiger.TigerPlayerController.Server_Spectate // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130d370
	void Server_SpawnBots(int32_t InNumberOfBotsToSpawn); // Function Tiger.TigerPlayerController.Server_SpawnBots // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130d2b0
	void Server_ShutdownServer(); // Function Tiger.TigerPlayerController.Server_ShutdownServer // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130d260
	void Server_SetRespawn(int32_t RespawnType); // Function Tiger.TigerPlayerController.Server_SetRespawn // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130d1a0
	void Server_SetPlayerIsReadyToPlay(); // Function Tiger.TigerPlayerController.Server_SetPlayerIsReadyToPlay // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130d150
	void Server_SetMatchmakingID(int32_t InMatchmakingID); // Function Tiger.TigerPlayerController.Server_SetMatchmakingID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x130d0c0
	void Server_SetBloodVeinMoveSpeedMultipliers(float InMainSpeedMultiplier, float InBranchSpeedMultiplier); // Function Tiger.TigerPlayerController.Server_SetBloodVeinMoveSpeedMultipliers // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130cfc0
	void Server_SaveBloodTrack(struct TArray<struct UTigerBloodTrackPassiveConfig*> NewBloodTrack); // Function Tiger.TigerPlayerController.Server_SaveBloodTrack // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x130cf00
	void Server_ResetDialogues(); // Function Tiger.TigerPlayerController.Server_ResetDialogues // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130ceb0
	void Server_RequestNewSpawnLocation(struct FVector InDesiredSpawnLocation); // Function Tiger.TigerPlayerController.Server_RequestNewSpawnLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x130ce00
	void Server_ReloadWeapon(); // Function Tiger.TigerPlayerController.Server_ReloadWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130cdb0
	void Server_MarkDialogueAsRead(int32_t InDialogueId, struct FString InNpcIdentifier, char InCategory, struct ATigerBaseNPC* InteractingCharacter); // Function Tiger.TigerPlayerController.Server_MarkDialogueAsRead // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x130cc10
	void Server_LeaveMatchAndRequestMatchStats(); // Function Tiger.TigerPlayerController.Server_LeaveMatchAndRequestMatchStats // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x130cbc0
	void Server_KillSelf(); // Function Tiger.TigerPlayerController.Server_KillSelf // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130cb70
	void Server_KickMe(); // Function Tiger.TigerPlayerController.Server_KickMe // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130cb20
	void Server_Jump(); // Function Tiger.TigerPlayerController.Server_Jump // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130cad0
	void Server_GhostFollowPrevPlayer(); // Function Tiger.TigerPlayerController.Server_GhostFollowPrevPlayer // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130ca80
	void Server_GhostFollowNextPlayer(); // Function Tiger.TigerPlayerController.Server_GhostFollowNextPlayer // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130ca30
	void Server_GetNpcCount(); // Function Tiger.TigerPlayerController.Server_GetNpcCount // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c9e0
	void Server_GetMovingNpcCount(); // Function Tiger.TigerPlayerController.Server_GetMovingNpcCount // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c990
	void Server_FireWeaponMulti(int32_t InFirstProjectileId, struct FVector_NetQuantize10 InPreviousCharacterLocation, struct TArray<struct FTigerFireProjectileDataInterpolated> InProjectiles); // Function Tiger.TigerPlayerController.Server_FireWeaponMulti // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c840
	void Server_FireWeapon(int32_t InProjectileId, struct FVector_NetQuantize10 InPreviousCharacterLocation, struct FTigerFireProjectileData InProjectile); // Function Tiger.TigerPlayerController.Server_FireWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c6f0
	void Server_FakeMatchmakingReady(enum class ETigerGroupingMode InGroupingMode); // Function Tiger.TigerPlayerController.Server_FakeMatchmakingReady // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c640
	void Server_EquipWeapon(enum class ETigerWeaponSlot WeaponSlot, bool bInstantSwitch, char RequestId); // Function Tiger.TigerPlayerController.Server_EquipWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130c4f0
	void Server_EnableServerAutoStats(); // Function Tiger.TigerPlayerController.Server_EnableServerAutoStats // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x130c4d0
	void Server_EnableLootBox(struct ATigerLootBox* LootBox); // Function Tiger.TigerPlayerController.Server_EnableLootBox // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x130c410
	void Server_DiscoveredSHPB(struct ATigerSHPBMarker* DiscoveredMarker); // Function Tiger.TigerPlayerController.Server_DiscoveredSHPB // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130c350
	void Server_ClientReportRangedWeaponHits(struct TArray<struct FTigerRangedHitInfo> InHits); // Function Tiger.TigerPlayerController.Server_ClientReportRangedWeaponHits // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c290
	void Server_ClientReportRangedWeaponHit(struct FTigerRangedHitInfo InHit); // Function Tiger.TigerPlayerController.Server_ClientReportRangedWeaponHit // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c1e0
	void Server_Cheat_UpdateSeasonProgress(int32_t InExpToAdd, int32_t InLevelsToAdd); // Function Tiger.TigerPlayerController.Server_Cheat_UpdateSeasonProgress // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c0e0
	void Server_Cheat_UnlockAllItemsInDatabase(); // Function Tiger.TigerPlayerController.Server_Cheat_UnlockAllItemsInDatabase // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c090
	void Server_Cheat_ToggleNoAggro(); // Function Tiger.TigerPlayerController.Server_Cheat_ToggleNoAggro // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130c040
	void Server_Cheat_ToggleGod(); // Function Tiger.TigerPlayerController.Server_Cheat_ToggleGod // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130bff0
	void Server_Cheat_ToggleFreeReload(); // Function Tiger.TigerPlayerController.Server_Cheat_ToggleFreeReload // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130bfa0
	void Server_Cheat_TigerSetSessionProgressToBattlepassLevel(int32_t InLevel, bool bInShouldOwnBattlepass); // Function Tiger.TigerPlayerController.Server_Cheat_TigerSetSessionProgressToBattlepassLevel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130bea0
	void Server_Cheat_TigerCompleteNextChallengeWeekly(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextChallengeWeekly // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130be50
	void Server_Cheat_TigerCompleteNextChallengeDaily(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextChallengeDaily // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130be00
	void Server_Cheat_SubmitChallengeProgress(); // Function Tiger.TigerPlayerController.Server_Cheat_SubmitChallengeProgress // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130bdb0
	void Server_Cheat_SpawnNpc(struct FName NPCType, struct FVector Location, enum class ETigerBloodPotency InPotency, enum class ETigerBloodType InBloodType); // Function Tiger.TigerPlayerController.Server_Cheat_SpawnNpc // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x130bc20
	void Server_Cheat_Slomo(float NewTimeDilation); // Function Tiger.TigerPlayerController.Server_Cheat_Slomo // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130bb60
	void Server_Cheat_SetMatchesPlayed(int32_t InNumberMatches); // Function Tiger.TigerPlayerController.Server_Cheat_SetMatchesPlayed // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130baa0
	void Server_Cheat_SetHolyIncenseElapsedTime(float InTotalElapsedTime, float InSpeedMultiplier); // Function Tiger.TigerPlayerController.Server_Cheat_SetHolyIncenseElapsedTime // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b9a0
	void Server_Cheat_ResetDialogueCategories(); // Function Tiger.TigerPlayerController.Server_Cheat_ResetDialogueCategories // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b950
	void Server_Cheat_RemoveHolyIncense(); // Function Tiger.TigerPlayerController.Server_Cheat_RemoveHolyIncense // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b900
	void Server_Cheat_RegisterGrimoireEntryAsUnread(uint32_t InGrimoireEntryId); // Function Tiger.TigerPlayerController.Server_Cheat_RegisterGrimoireEntryAsUnread // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b840
	void Server_Cheat_RegisterGrimoireEntryAsUnlocked(uint32_t InGrimoireEntryId); // Function Tiger.TigerPlayerController.Server_Cheat_RegisterGrimoireEntryAsUnlocked // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b780
	void Server_Cheat_RegisterGrimoireEntryAsLocked(uint32_t InGrimoireEntryId); // Function Tiger.TigerPlayerController.Server_Cheat_RegisterGrimoireEntryAsLocked // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b6c0
	void Server_Cheat_IncrementPremiumCurrency(uint64_t InAmountToAdd); // Function Tiger.TigerPlayerController.Server_Cheat_IncrementPremiumCurrency // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b600
	void Server_Cheat_DisableDisciplineCost(); // Function Tiger.TigerPlayerController.Server_Cheat_DisableDisciplineCost // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130b5b0
	void Server_Cheat_DestroyNpcWithinRadius(float InRadius, bool bInExludeDebugTarget); // Function Tiger.TigerPlayerController.Server_Cheat_DestroyNpcWithinRadius // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b4a0
	void Server_Cheat_DebugHolyIncense(); // Function Tiger.TigerPlayerController.Server_Cheat_DebugHolyIncense // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b450
	void Server_Cheat_Crash(); // Function Tiger.TigerPlayerController.Server_Cheat_Crash // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b400
	void Server_Cheat_ClearInGameTalents(); // Function Tiger.TigerPlayerController.Server_Cheat_ClearInGameTalents // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b3b0
	void Server_Cheat_BringMeHome(); // Function Tiger.TigerPlayerController.Server_Cheat_BringMeHome // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130b360
	void Server_Cheat_AddSoftCurrency(int32_t InAmount, uint64_t InCurrencyId); // Function Tiger.TigerPlayerController.Server_Cheat_AddSoftCurrency // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b260
	void Server_Cheat_AddLevels(int32_t InNumLevels); // Function Tiger.TigerPlayerController.Server_Cheat_AddLevels // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b1a0
	void Server_Cheat_AddInGameTalent(struct FString TalentToAdd); // Function Tiger.TigerPlayerController.Server_Cheat_AddInGameTalent // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b0e0
	void Server_Cheat_AddExperience(int32_t ExperienceAmount); // Function Tiger.TigerPlayerController.Server_Cheat_AddExperience // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x130b020
	void Server_CancelHeavyAttack(); // Function Tiger.TigerPlayerController.Server_CancelHeavyAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130afd0
	void Server_ActivateCarAlarm(struct FTigerAIPlayerAction InPlayerAction); // Function Tiger.TigerPlayerController.Server_ActivateCarAlarm // (Final|Net|NetReliableNative|Event|Private|NetServer|BlueprintCallable|NetValidate) // @ game+0x130ae90
	void Server_AbortReloadWeapon(); // Function Tiger.TigerPlayerController.Server_AbortReloadWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x130ae40
	void Server_AbortChannelingDiscipline(enum class ETigerDisciplinesEnum DisciplineEnum); // Function Tiger.TigerPlayerController.Server_AbortChannelingDiscipline // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x130ad90
	void ResetActions(); // Function Tiger.TigerPlayerController.ResetActions // (Final|Native|Public|BlueprintCallable) // @ game+0x130ad70
	void ReleaseWeaponAbility(); // Function Tiger.TigerPlayerController.ReleaseWeaponAbility // (Final|Native|Private|BlueprintCallable) // @ game+0x130ad50
	void RefreshEquippedWeapon(); // Function Tiger.TigerPlayerController.RefreshEquippedWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x130ad30
	int32_t PostSeamlessAkEvent(struct UAkAudioEvent* InEvent); // Function Tiger.TigerPlayerController.PostSeamlessAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x130ac90
	void OnToggleMainMenu(); // Function Tiger.TigerPlayerController.OnToggleMainMenu // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnToggleInventory(); // Function Tiger.TigerPlayerController.OnToggleInventory // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnPreMatchAssetsLoadedMulti__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnPreMatchAssetsLoadedMulti__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPreMatchAssetsLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnPreMatchAssetsLoaded__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	void OnPlayerStateCreated__DelegateSignature(struct ATigerPlayerState* TigerPlayerState); // DelegateFunction Tiger.TigerPlayerController.OnPlayerStateCreated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPersistentPlayerInitialisedSingle__DelegateSignature(struct ATigerPlayerController* PlayerController); // DelegateFunction Tiger.TigerPlayerController.OnPersistentPlayerInitialisedSingle__DelegateSignature // (Public|Delegate) // @ game+0x16c0340
	void OnPersistentPlayerInitialised__DelegateSignature(struct ATigerPlayerController* PlayerController); // DelegateFunction Tiger.TigerPlayerController.OnPersistentPlayerInitialised__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPersistentPlayerInitialised(); // Function Tiger.TigerPlayerController.OnPersistentPlayerInitialised // (Native|Protected) // @ game+0x130ab50
	void OnLastWaveFinished(); // Function Tiger.TigerPlayerController.OnLastWaveFinished // (Final|Native|Private) // @ game+0x130ab30
	void OnItemPickedUp__DelegateSignature(struct UTigerItemAsset* Item, int32_t Count); // DelegateFunction Tiger.TigerPlayerController.OnItemPickedUp__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnInventoryToggled__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnInventoryToggled__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnInitialLevelStreamingCompleted__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnInitialLevelStreamingCompleted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnInGameMenuToggled(bool bIsOpen); // Function Tiger.TigerPlayerController.OnInGameMenuToggled // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnGhostModeSet__DelegateSignature(bool bIsGhostModeEnabled); // DelegateFunction Tiger.TigerPlayerController.OnGhostModeSet__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnDownedEnemyPlayer__DelegateSignature(struct ATigerPlayer* InPlayer); // DelegateFunction Tiger.TigerPlayerController.OnDownedEnemyPlayer__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnClanLevelUpdated__DelegateSignature(uint32_t OldLevel, uint32_t NewLevel); // DelegateFunction Tiger.TigerPlayerController.OnClanLevelUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnBeginPlay__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnBeginPlay__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void MarkDialogueAsRead(int32_t InDialogueId, struct FString InNpcIdentifier, char InCategory); // Function Tiger.TigerPlayerController.MarkDialogueAsRead // (Final|Native|Public|BlueprintCallable) // @ game+0x130aa10
	struct UTigerSharedMouseCursor* MakeSharedMouseCursor(); // Function Tiger.TigerPlayerController.MakeSharedMouseCursor // (Final|Native|Public) // @ game+0x130a9e0
	void KillSelf(); // Function Tiger.TigerPlayerController.KillSelf // (Final|Exec|Native|Public) // @ game+0x130a9c0
	bool IsWheelUIOpen(); // Function Tiger.TigerPlayerController.IsWheelUIOpen // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a990
	bool IsUsingCrosshairDebug(); // Function Tiger.TigerPlayerController.IsUsingCrosshairDebug // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1289080
	bool IsSpectating(); // Function Tiger.TigerPlayerController.IsSpectating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a960
	bool IsProbablyUsingGamepadInput(); // Function Tiger.TigerPlayerController.IsProbablyUsingGamepadInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a940
	bool IsPreSpawnStreamingDone(); // Function Tiger.TigerPlayerController.IsPreSpawnStreamingDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a910
	void IsPreMatchAssetsLoadedAsync(struct FDelegate InDelegate); // Function Tiger.TigerPlayerController.IsPreMatchAssetsLoadedAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x130a860
	bool IsLocalBot(); // Function Tiger.TigerPlayerController.IsLocalBot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a810
	bool IsInTutorial(); // Function Tiger.TigerPlayerController.IsInTutorial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a7e0
	bool IsInTransferFromMatch(); // Function Tiger.TigerPlayerController.IsInTransferFromMatch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a7b0
	bool IsInMatch(); // Function Tiger.TigerPlayerController.IsInMatch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a780
	bool IsInElysium(); // Function Tiger.TigerPlayerController.IsInElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a750
	bool IsInCinematic(); // Function Tiger.TigerPlayerController.IsInCinematic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a730
	bool IsInBenchmark(); // Function Tiger.TigerPlayerController.IsInBenchmark // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a700
	bool IsGhostModeEnabled(); // Function Tiger.TigerPlayerController.IsGhostModeEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a6d0
	void InGameMenuToggled(bool bIsOpen); // Function Tiger.TigerPlayerController.InGameMenuToggled // (Final|Native|Public) // @ game+0x130a620
	void HideMouseCursor(); // Function Tiger.TigerPlayerController.HideMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x130a600
	bool HasWeaponForSlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerPlayerController.HasWeaponForSlot // (Final|Native|Private|BlueprintCallable) // @ game+0x130a570
	bool HasRangedWeaponCurrentlyEquipped(); // Function Tiger.TigerPlayerController.HasRangedWeaponCurrentlyEquipped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a540
	bool HasLocalPlayerSpawned(); // Function Tiger.TigerPlayerController.HasLocalPlayerSpawned // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a520
	bool HasLoadedRewards(); // Function Tiger.TigerPlayerController.HasLoadedRewards // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a4f0
	bool HasGamepadMovedMouse(); // Function Tiger.TigerPlayerController.HasGamepadMovedMouse // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a4d0
	bool HasBegunPlay(); // Function Tiger.TigerPlayerController.HasBegunPlay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a4a0
	void HandlePreSpawnLoadingCheckTimerTick(); // Function Tiger.TigerPlayerController.HandlePreSpawnLoadingCheckTimerTick // (Final|Native|Private) // @ game+0x130a450
	struct ATigerSpectatorPawn* GetTigerSpectatorPawn(); // Function Tiger.TigerPlayerController.GetTigerSpectatorPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a3f0
	struct ATigerPlayerState* GetTigerPlayerState(); // Function Tiger.TigerPlayerController.GetTigerPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x931450
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerPlayerController.GetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a3d0
	struct UTigerPersistentPlayerState* GetTigerPersistentPlayerState(); // Function Tiger.TigerPlayerController.GetTigerPersistentPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a3a0
	struct ATigerMatchHUD* GetTigerMatchHUD(); // Function Tiger.TigerPlayerController.GetTigerMatchHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a370
	struct UTigerGameInstance* GetTigerGameInstance(); // Function Tiger.TigerPlayerController.GetTigerGameInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a340
	struct ATigerElysiumHUD* GetTigerElysiumHUD(); // Function Tiger.TigerPlayerController.GetTigerElysiumHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a310
	struct ATigerHUD* GetTigerBaseHUD(); // Function Tiger.TigerPlayerController.GetTigerBaseHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a2e0
	struct FVector2D GetRightStickAnalogValues(); // Function Tiger.TigerPlayerController.GetRightStickAnalogValues // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a2a0
	struct UTigerPromptCollectionWidget* GetPromptCollection(); // Function Tiger.TigerPlayerController.GetPromptCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a270
	struct UTigerMapGameData* GetMapGameData(); // Function Tiger.TigerPlayerController.GetMapGameData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a170
	struct FVector2D GetLeftStickAnalogValues(); // Function Tiger.TigerPlayerController.GetLeftStickAnalogValues // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a130
	struct FLinearColor GetHitmarkerColor(bool bInWasDowned, bool bInWasKilled, bool bInWasCriticalHit, bool bInHasExtraHealth, float InRangedDamageFalloffPercent); // Function Tiger.TigerPlayerController.GetHitmarkerColor // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1309f20
	struct UTigerDisciplineComponent* GetDisciplineComponenet(); // Function Tiger.TigerPlayerController.GetDisciplineComponenet // (Final|Native|Public|BlueprintCallable) // @ game+0x1309ef0
	struct FLinearColor GetDamageTextColor(bool bInWasDowned, bool bInWasKilled, bool bInWasCriticalHit, bool bInHasExtraHealth, float InRangedDamageFalloffPercent); // Function Tiger.TigerPlayerController.GetDamageTextColor // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1309ce0
	enum class ETigerWeaponSlot GetCurrentlyEquippedSlot(); // Function Tiger.TigerPlayerController.GetCurrentlyEquippedSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309cb0
	struct UTigerClientSeasonalRewardCollection* GetClientSeasonalRewardCollection(); // Function Tiger.TigerPlayerController.GetClientSeasonalRewardCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309c90
	struct UTigerClientChallengesCollection* GetClientChallengesCollection(); // Function Tiger.TigerPlayerController.GetClientChallengesCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309c70
	struct ATigerBloodVeinPawn* GetBloodVeinPawn(); // Function Tiger.TigerPlayerController.GetBloodVeinPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309c50
	struct FVector2D GetAnalogueCursorDelta(); // Function Tiger.TigerPlayerController.GetAnalogueCursorDelta // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309c10
	struct UTigerFindSessionAsync* GetActiveFindSessionInstance(); // Function Tiger.TigerPlayerController.GetActiveFindSessionInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309b30
	bool EquipWeaponForSlot(enum class ETigerWeaponSlot Slot, bool bInstantSwitch, bool bNotifyServer); // Function Tiger.TigerPlayerController.EquipWeaponForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x13099f0
	void EnableGhostMode(); // Function Tiger.TigerPlayerController.EnableGhostMode // (Final|Native|Public|BlueprintCallable) // @ game+0x13099d0
	bool DesiresAiming(); // Function Tiger.TigerPlayerController.DesiresAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13099a0
	void Debug_ShowCharacterCard(); // Function Tiger.TigerPlayerController.Debug_ShowCharacterCard // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Client_StopBlocking(); // Function Tiger.TigerPlayerController.Client_StopBlocking // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1309980
	void Client_ShowWinScreen(); // Function Tiger.TigerPlayerController.Client_ShowWinScreen // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1309960
	void Client_ShowDeathScreen(int8_t InPlayerPlacement, int8_t InNumGroupsAtStart, struct FString InInstigatorName, enum class ETigerKillerType InKillerType, bool bInReturnToElysiumOnClose); // Function Tiger.TigerPlayerController.Client_ShowDeathScreen // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13097a0
	void Client_SetPlayerSpawnLocation(struct FVector InSpawnLocation); // Function Tiger.TigerPlayerController.Client_SetPlayerSpawnLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x1309720
	void Client_SetMatchStats(struct FTigerMatchStats MatchStats); // Function Tiger.TigerPlayerController.Client_SetMatchStats // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x13095b0
	void Client_SetIsBenchmarkController(bool bInIsBenchmarkController); // Function Tiger.TigerPlayerController.Client_SetIsBenchmarkController // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1309520
	void Client_SetCameraRotation(float InYaw, float InPitch); // Function Tiger.TigerPlayerController.Client_SetCameraRotation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1309450
	void Client_SendMapSelectionInformation(struct TArray<struct FTigerClientSpawnLocationInfo> InSpawnInformation); // Function Tiger.TigerPlayerController.Client_SendMapSelectionInformation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13093b0
	void Client_ReceiveLootBoxContentUpdate(struct ATigerLootBox* LootBox, struct TArray<struct FTigerItemData> ReceivedItemList); // Function Tiger.TigerPlayerController.Client_ReceiveLootBoxContentUpdate // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13092c0
	void Client_PrintString(struct FString InMessage, float InScreenDuration, bool bInWriteToLog, struct FColor InColor, bool bInNewerOntop); // Function Tiger.TigerPlayerController.Client_PrintString // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x13090f0
	void Client_OnShowDamageFeedback(struct ATigerCharacter* InHitChar, struct UDamageType* InDamageTypeClass, struct FVector_NetQuantize InHitLocationOffset, int16_t InTotalDamageDealt, int16_t InHealthDamageDealt, float InNewHealth, bool bInHasExtraHealth, bool bInHasShield, bool bInWasCriticalHit, bool bInWasDowned, bool bInWasKilled, float InRangedDamageFallofPercent); // Function Tiger.TigerPlayerController.Client_OnShowDamageFeedback // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1308d40
	void Client_OnPlayerKicked(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerPlayerController.Client_OnPlayerKicked // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1308cc0
	void Client_OnPlayerDeath(struct FString PlayerName, struct FString InstigatorName, bool bIsPlayerInSameGroup); // Function Tiger.TigerPlayerController.Client_OnPlayerDeath // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1308b80
	void Client_OnEliminatedPlayer(struct FString InPlayerName, bool bInWasBloodHunted); // Function Tiger.TigerPlayerController.Client_OnEliminatedPlayer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1308a90
	void Client_OnDownedPlayer(struct ATigerPlayerState* InPlayerState, bool bInBloodHunted); // Function Tiger.TigerPlayerController.Client_OnDownedPlayer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13089c0
	void Client_InvalidateReadyToPlayStateAndRequestRecheck(); // Function Tiger.TigerPlayerController.Client_InvalidateReadyToPlayStateAndRequestRecheck // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13089a0
	void Client_HighlightItem(struct ATigerItemWorldRepresentation* Item); // Function Tiger.TigerPlayerController.Client_HighlightItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1308910
	void Client_HandleBenchmarkTestsStarted(struct FString InOutputFile); // Function Tiger.TigerPlayerController.Client_HandleBenchmarkTestsStarted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1308870
	void Client_HandleBenchmarkTestsFinished(); // Function Tiger.TigerPlayerController.Client_HandleBenchmarkTestsFinished // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1308850
	void Client_EquipWeaponFailed(enum class ETigerWeaponSlot WeaponSlot, char RequestId); // Function Tiger.TigerPlayerController.Client_EquipWeaponFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1308780
	void Client_DebugDrawShapes(struct TArray<struct FTigerNetworkedDebugShape> Shapes); // Function Tiger.TigerPlayerController.Client_DebugDrawShapes // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1308660
	void Client_DebugDrawShape(struct FTigerNetworkedDebugShape Shape); // Function Tiger.TigerPlayerController.Client_DebugDrawShape // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13085d0
	void Client_Debug_DrawServerProjectileSpawnLocation(struct FVector ProjectileSpawnLocation); // Function Tiger.TigerPlayerController.Client_Debug_DrawServerProjectileSpawnLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x1308700
	void Client_AbortReloadWeapon(); // Function Tiger.TigerPlayerController.Client_AbortReloadWeapon // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13085b0
	bool CheckShouldShowClimbPrompt(); // Function Tiger.TigerPlayerController.CheckShouldShowClimbPrompt // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1308560
	void Cheat_ToggleUIVisibility(); // Function Tiger.TigerPlayerController.Cheat_ToggleUIVisibility // (Final|Exec|Native|Public) // @ game+0xb45020
	void CancelFindSession(enum class ETigerTelemetryMatchmackingCancelReason InCancelReason); // Function Tiger.TigerPlayerController.CancelFindSession // (Final|Native|Public|BlueprintCallable) // @ game+0x13084e0
	void AttackRelease(); // Function Tiger.TigerPlayerController.AttackRelease // (Final|Native|Private|BlueprintCallable) // @ game+0x1308070
};

// Class Tiger.TigerPlayerDataService
// Size: 0x60 (Inherited: 0x28)
struct UTigerPlayerDataService : UObject {
	char pad_28[0x28]; // 0x28(0x28)
	struct UTigerRequestUtility* TigerRequestUtility; // 0x50(0x08)
	char pad_58[0x8]; // 0x58(0x08)
};

// Class Tiger.TigerMacroExperienceAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerMacroExperienceAsset : UDataAsset {
	struct TMap<enum class ETigerPlayerEvent, int32_t> EventMacroExperience; // 0x30(0x50)
};

// Class Tiger.TigerPlayerGrid
// Size: 0x268 (Inherited: 0x228)
struct ATigerPlayerGrid : AActor {
	struct TArray<struct FTigerPlayerGridCell> Cells; // 0x228(0x10)
	struct FVector2D GridSize; // 0x238(0x08)
	int32_t GridRows; // 0x240(0x04)
	int32_t GridColumns; // 0x244(0x04)
	int32_t CellDirectNeighborsToCheck; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct UBoxComponent* GridBoxComponent; // 0x250(0x08)
	bool bShowGrid; // 0x258(0x01)
	char pad_259[0xf]; // 0x259(0x0f)
};

// Class Tiger.TigerPlayerGroup
// Size: 0x98 (Inherited: 0x28)
struct UTigerPlayerGroup : UObject {
	char pad_28[0x30]; // 0x28(0x30)
	struct TArray<struct TWeakObjectPtr<struct ATigerPlayerState>> Members; // 0x58(0x10)
	char pad_68[0x10]; // 0x68(0x10)
	struct TArray<struct TWeakObjectPtr<struct ATigerPlayerState>> Invitations; // 0x78(0x10)
	struct UTigerPingCoordinator* PingCoordinator; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)

	struct TArray<struct ATigerPlayerState*> GetMembersAsRawPointers(); // Function Tiger.TigerPlayerGroup.GetMembersAsRawPointers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a5d0
};

// Class Tiger.TigerPlayerMarkerWidget
// Size: 0x2b0 (Inherited: 0x2b0)
struct UTigerPlayerMarkerWidget : UTigerMapMarkerWidget {
};

// Class Tiger.TigerPlayerMasqueradeComponent
// Size: 0x148 (Inherited: 0xb0)
struct UTigerPlayerMasqueradeComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBloodHuntStateChanged; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnBloodHuntStateUpdated; // 0xc0(0x10)
	struct TArray<struct UTigerMasqueradeConsequence*> PossibleMasqueradeConsequences; // 0xd0(0x10)
	struct TArray<struct UTigerMasqueradeConsequenceSyncInstance*> SyncedMasqueradeConsequenceInstances; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnMasqueradeConsequenceInstancedAdded; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnMasqueradeConsequenceInstancedRemoved; // 0x100(0x10)
	char pad_110[0x8]; // 0x110(0x08)
	struct TArray<struct UTigerMasqueradeConsequence*> ActiveConsequences; // 0x118(0x10)
	struct TArray<struct FTigerConsequenceData> ReplicatedConsequences; // 0x128(0x10)
	char pad_138[0x10]; // 0x138(0x10)

	void OnRep_ConsequenceData(); // Function Tiger.TigerPlayerMasqueradeComponent.OnRep_ConsequenceData // (Final|Native|Public) // @ game+0x131ad30
	void OnMasqueradePointsAdded__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerMasqueradeComponent.OnMasqueradePointsAdded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void Multicast_UpdateConsequences(struct TArray<struct FTigerConsequenceUpdateData> InUpdateData); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_UpdateConsequences // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x131a960
	void Multicast_RemoveConsequence(int32_t InConsequenceId); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_RemoveConsequence // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1247270
	void Multicast_AddConsequence(struct FTigerConsequenceData InMasqueradeConsequence); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_AddConsequence // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x131a8d0
	bool IsBloodHunted(); // Function Tiger.TigerPlayerMasqueradeComponent.IsBloodHunted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a820
	struct UTigerMasqueradeConsequenceSyncInstance* GetConsequenceInstance(struct UTigerMasqueradeConsequenceSyncInstance* InInstanceClass); // Function Tiger.TigerPlayerMasqueradeComponent.GetConsequenceInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a4e0
	void Client_UpdateConsequenceLatestPlayerAction(int32_t InConsequenceId, enum class ETigerAIPlayerAction InAction); // Function Tiger.TigerPlayerMasqueradeComponent.Client_UpdateConsequenceLatestPlayerAction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x131a3e0
	void AddMasqueradePointsCausedByNpcReacting(struct ATigerBaseNPC* InNpc, enum class ETigerAIPlayerAction InAction); // Function Tiger.TigerPlayerMasqueradeComponent.AddMasqueradePointsCausedByNpcReacting // (Final|Native|Public|BlueprintCallable) // @ game+0x131a1c0
};

// Class Tiger.TigerMasqueradeConsequenceSyncInstance
// Size: 0x58 (Inherited: 0x28)
struct UTigerMasqueradeConsequenceSyncInstance : UObject {
	bool bShouldBeActiveForAffectedPlayer; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct ATigerPlayerState* AffectedPlayerState; // 0x30(0x08)
	struct ATigerPlayerController* LocalPlayerController; // 0x38(0x08)
	char pad_40[0x18]; // 0x40(0x18)

	float GetExpectedTimeLeft(); // Function Tiger.TigerMasqueradeConsequenceSyncInstance.GetExpectedTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131a580
};

// Class Tiger.TigerMasqueradeConsequence
// Size: 0x60 (Inherited: 0x28)
struct UTigerMasqueradeConsequence : UObject {
	struct UTigerMasqueradeConsequenceSyncInstance* SyncInstanceClass; // 0x28(0x08)
	struct TArray<enum class ETigerAIPlayerAction> ActionsThatCanActivateConsequence; // 0x30(0x10)
	struct ATigerPlayer* PlayerOwner; // 0x40(0x08)
	struct FName ConsequenceName; // 0x48(0x08)
	float Duration; // 0x50(0x04)
	bool bShouldRefresh; // 0x54(0x01)
	char pad_55[0xb]; // 0x55(0x0b)
};

// Class Tiger.TigerMasqueradeActionMarker
// Size: 0x238 (Inherited: 0x228)
struct ATigerMasqueradeActionMarker : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	bool bOnlyVisibleInHeightenedSenses; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
};

// Class Tiger.TigerMasqueradeConsequenceActionWorldMaker
// Size: 0x68 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceActionWorldMaker : UTigerMasqueradeConsequence {
	struct ATigerMasqueradeActionMarker* MarkerClass; // 0x60(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceBloodHuntedSyncInstance
// Size: 0x80 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceBloodHuntedSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UUserWidget* MapMarkerClass; // 0x58(0x08)
	struct UTigerCompassMarkerWidget* CompassMarkerClass; // 0x60(0x08)
	struct UTexture2D* CompassMarkerTexture; // 0x68(0x08)
	struct FBloodHuntMarker Marker; // 0x70(0x10)
};

// Class Tiger.TigerMasqueradeConsequenceBloodHunted
// Size: 0x68 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceBloodHunted : UTigerMasqueradeConsequence {
	char pad_60[0x8]; // 0x60(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceCompassMarkerSyncInstance
// Size: 0x70 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceCompassMarkerSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UTigerCompassMarkerWidget* CompassMarkerClass; // 0x58(0x08)
	struct UTexture2D* CompassMarkerTexture; // 0x60(0x08)
	struct UTigerCompassMarkerWidget* CompassMarker; // 0x68(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceCompassMarker
// Size: 0x60 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceCompassMarker : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance
// Size: 0x60 (Inherited: 0x58)
struct UTigerPlayerMasqueradeConsequenceHsRevealSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	bool bOnlyVisibleInHeightenedsSenses; // 0x58(0x01)
	bool bAffectedPlayerIsWithinLocalHsArea; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)

	void OnLeaveHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance.OnLeaveHsArea // (Final|Native|Public) // @ game+0x131ab20
	void OnEnterHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance.OnEnterHsArea // (Final|Native|Public) // @ game+0x131aa00
};

// Class Tiger.TigerPlayerMasqueradeConsequenceHsReveal
// Size: 0x60 (Inherited: 0x60)
struct UTigerPlayerMasqueradeConsequenceHsReveal : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerMasqueradeConsequenceMapAreaMarkerSyncInstance
// Size: 0x70 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceMapAreaMarkerSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UTigerMasqueradeMarker* AreaMarkerClass; // 0x58(0x08)
	float AreaRadius; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct UTigerMasqueradeMarkerProxy* MapMarkerProxy; // 0x68(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceMapAreaMarker
// Size: 0x70 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceMapAreaMarker : UTigerMasqueradeConsequence {
	char pad_60[0x10]; // 0x60(0x10)
};

// Class Tiger.TigerMasqueradeConsequenceMapMarkerSyncInstance
// Size: 0x68 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceMapMarkerSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UUserWidget* MapMarkerClass; // 0x58(0x08)
	struct UTigerMapMarkerProxy* MapMarkerProxy; // 0x60(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceMapMarker
// Size: 0x60 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceMapMarker : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerMasqueradeConsequenceTrailSyncInstance
// Size: 0x60 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceTrailSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	bool bOnlyVisibleInHeightenedsSenses; // 0x58(0x01)
	bool bAffectedPlayerIsWithinLocalHsArea; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)

	void OnTrailDeactivated(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnTrailDeactivated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnTrailActivated(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnTrailActivated // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnLeaveHsArea_Native(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnLeaveHsArea_Native // (Final|Native|Public) // @ game+0x131abb0
	void OnLeaveHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnLeaveHsArea // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnEnterHsArea_Native(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnEnterHsArea_Native // (Final|Native|Public) // @ game+0x131aa90
	void OnEnterHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnEnterHsArea // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerMasqueradeConsequenceTrail
// Size: 0x60 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceTrail : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerPlayerMeshManager
// Size: 0x2c0 (Inherited: 0x1e0)
struct UTigerPlayerMeshManager : UTigerCharacterMeshManager {
	struct FTigerPlayerMeshMaterialData MaterialData[0xb]; // 0x1e0(0xb0)
	struct TArray<struct FTigerPlayerMeshMaterialData> StaticMeshMaterialData; // 0x290(0x10)
	struct TArray<struct FTigerPlayerMeshMaterialData> PoseableMeshMaterialData; // 0x2a0(0x10)
	struct UMaterialInterface* CurrentOverrideMaterial; // 0x2b0(0x08)
	char pad_2B8[0x8]; // 0x2b8(0x08)

	void ResetMaterials(); // Function Tiger.TigerPlayerMeshManager.ResetMaterials // (Final|Native|Public) // @ game+0x131af50
	void OverrideMaterial(struct UMaterialInterface* InMaterial, float InTimeOutSeconds); // Function Tiger.TigerPlayerMeshManager.OverrideMaterial // (Final|Native|Public) // @ game+0x131ae60
};

// Class Tiger.TigerPlayerServerLoginProcess
// Size: 0x88 (Inherited: 0x28)
struct UTigerPlayerServerLoginProcess : UObject {
	struct TMap<struct FString, struct UTigerPlayerBeingLoggedInToServer*> playersBeingLoggedInToServerByUniqueLoginId; // 0x28(0x50)
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)
};

// Class Tiger.TigerPlayerStart
// Size: 0x260 (Inherited: 0x258)
struct ATigerPlayerStart : APlayerStart {
	char GameTypeSpawnFlags; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)
};

// Class Tiger.TigerPoiMarkerProxy
// Size: 0x108 (Inherited: 0x68)
struct UTigerPoiMarkerProxy : UTigerMapMarkerProxy {
	struct FPointOfInterest PointOfInterest; // 0x68(0xa0)
};

// Class Tiger.TigerPointOfInterestMapMarkerWidget
// Size: 0x2c8 (Inherited: 0x2b0)
struct UTigerPointOfInterestMapMarkerWidget : UTigerMapMarkerWidget {
	char pad_2B0[0x18]; // 0x2b0(0x18)

	void SetToHighTierLootLocation(SoftClassProperty InHighTierLootGroup); // Function Tiger.TigerPointOfInterestMapMarkerWidget.SetToHighTierLootLocation // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnHighTierLootLocationsChanged(struct TArray<SoftClassProperty> InActiveGroups); // Function Tiger.TigerPointOfInterestMapMarkerWidget.OnHighTierLootLocationsChanged // (Final|Native|Protected|HasOutParms) // @ game+0x1320290
};

// Class Tiger.TigerPostMatchScreenUI
// Size: 0x2b0 (Inherited: 0x298)
struct UTigerPostMatchScreenUI : UTigerLoadingScreenUI {
	struct FMulticastInlineDelegate OnReadyToTravel; // 0x298(0x10)
	char pad_2A8[0x8]; // 0x2a8(0x08)

	void ReadyToTravel(); // Function Tiger.TigerPostMatchScreenUI.ReadyToTravel // (Final|Native|Public|BlueprintCallable) // @ game+0x1320860
	void OnReadyToTravelDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPostMatchScreenUI.OnReadyToTravelDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	bool GetIsReadyToTravel(); // Function Tiger.TigerPostMatchScreenUI.GetIsReadyToTravel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a9830
};

// Class Tiger.TigerPowerKit
// Size: 0x2b0 (Inherited: 0x30)
struct UTigerPowerKit : UDataAsset {
	enum class ETigerPowerKitType ArchetypeType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FText DISPLAYNAME; // 0x38(0x18)
	struct FText ArchetypeKeywordsText; // 0x50(0x18)
	struct FText FormattedDescription; // 0x68(0x18)
	struct FColor ArchetypeColor; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct TSoftObjectPtr<struct UTexture2D> ArchetypeSelectTexture; // 0x88(0x28)
	struct TSoftObjectPtr<struct UMaterial> ArchetypeHighlightMaterial; // 0xb0(0x28)
	struct TSoftObjectPtr<struct UTexture2D> ArchetypeBackgroundTexture; // 0xd8(0x28)
	struct TSoftObjectPtr<struct UTexture2D> ArchetypeIcon; // 0x100(0x28)
	struct UMediaSource* ArchetypeSelectCinematic; // 0x128(0x08)
	struct UTigerBloodTrackPreset* DefaultBloodTrack; // 0x130(0x08)
	struct TArray<struct UTigerBloodTrackPassiveConfig*> BloodTrackPassives; // 0x138(0x10)
	struct TArray<struct UTigerPassiveConfig*> Passives; // 0x148(0x10)
	struct FTigerCharacterStatModification Stats; // 0x158(0xb4)
	enum class ETigerDisciplinesEnum LeftDiscipline; // 0x20c(0x01)
	enum class ETigerDisciplinesEnum RightDiscipline; // 0x20d(0x01)
	char pad_20E[0x2]; // 0x20e(0x02)
	struct TSoftObjectPtr<struct UTigerCharacterPreset> DefaultCharacterPreset; // 0x210(0x28)
	struct TSoftObjectPtr<struct UTigerCharacterPreset> FirstTimeCharacterPreset; // 0x238(0x28)
	struct TSoftObjectPtr<struct UTigerCharacterPreset> BotOutfitPresets[0x2]; // 0x260(0x50)
};

// Class Tiger.TigerPreMatchPaperDollComponent
// Size: 0x150 (Inherited: 0xb0)
struct UTigerPreMatchPaperDollComponent : UActorComponent {
	struct TMap<struct FName, struct ATigerPaperDoll*> PaperDollByTagNames; // 0xb0(0x50)
	struct TMap<struct ATigerPaperDoll*, struct FTigerPaperDollHighlightComponents> PaperDollHighlightComponents; // 0x100(0x50)

	void EnablePaperDollHighlight(struct ATigerPaperDoll* InPaperDoll, bool bInEnable); // Function Tiger.TigerPreMatchPaperDollComponent.EnablePaperDollHighlight // (Final|Native|Public|BlueprintCallable) // @ game+0x131fb10
};

// Class Tiger.TigerPremiumCurrencyUiScreen
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerPremiumCurrencyUiScreen : UTigerWidget {
	char pad_280[0x60]; // 0x280(0x60)

	void PurchaseResult(enum class EShMidasResultCode InPurchaseResult); // Function Tiger.TigerPremiumCurrencyUiScreen.PurchaseResult // (Final|Native|Protected) // @ game+0x13207e0
	void OnPurchaseHandled(bool bInWasSuccesful, enum class EShMidasResultCode InPurchaseResult); // Function Tiger.TigerPremiumCurrencyUiScreen.OnPurchaseHandled // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnCurrencyPacksUpdated(); // Function Tiger.TigerPremiumCurrencyUiScreen.OnCurrencyPacksUpdated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	struct TArray<struct FTigerPremiumCurrencyPackData> GetCurrencyPacks(); // Function Tiger.TigerPremiumCurrencyUiScreen.GetCurrencyPacks // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131fe40
	void FillCurrencyPacks(struct TArray<struct FShMidasPremiumCurrencyPack> InPremiumCurrencyPacks); // Function Tiger.TigerPremiumCurrencyUiScreen.FillCurrencyPacks // (Final|Native|Protected|HasOutParms) // @ game+0x131fbe0
	void ConfirmPurchase(struct FTigerPremiumCurrencyPackData InCurrencyPackData); // Function Tiger.TigerPremiumCurrencyUiScreen.ConfirmPurchase // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x131f9d0
};

// Class Tiger.TigerPresenceService
// Size: 0x40 (Inherited: 0x28)
struct UTigerPresenceService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerPresenceSubsystem
// Size: 0xa8 (Inherited: 0x30)
struct UTigerPresenceSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnPlayerPresenceChange; // 0x30(0x10)
	struct FMulticastInlineDelegate OnPlayersPresenceChange; // 0x40(0x10)
	struct UTigerPresenceService* PresenceService; // 0x50(0x08)
	int32_t HeartbeatIntervalInSeconds; // 0x58(0x04)
	char pad_5C[0x4c]; // 0x5c(0x4c)

	void TigerOnPlayersPresenceChange__DelegateSignature(struct TArray<struct FTigerPlayerPresenceInfo> InPlayersPresenceInfo); // DelegateFunction Tiger.TigerPresenceSubsystem.TigerOnPlayersPresenceChange__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void TigerOnPlayerPresenceChange__DelegateSignature(struct FTigerPlayerPresenceInfo InPlayerPresenceInfo); // DelegateFunction Tiger.TigerPresenceSubsystem.TigerOnPlayerPresenceChange__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x16c0340
	void SetLocation(struct FString InLocation); // Function Tiger.TigerPresenceSubsystem.SetLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x1320a80
	void SetInterestedPlayers(struct TArray<struct FString> InInterestedPlayerIds); // Function Tiger.TigerPresenceSubsystem.SetInterestedPlayers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13209b0
	void Register(struct FString InLocation, struct TArray<struct FString> InInterestedPlayerIds); // Function Tiger.TigerPresenceSubsystem.Register // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1320880
	struct TArray<struct FTigerPlayerPresenceInfo> GetInterestedPlayers(); // Function Tiger.TigerPresenceSubsystem.GetInterestedPlayers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131ffb0
	void DeRegister(); // Function Tiger.TigerPresenceSubsystem.DeRegister // (Final|Native|Public|BlueprintCallable) // @ game+0x131fad0
};

// Class Tiger.TigerPreSpawnMapUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerPreSpawnMapUI : UTigerWidget {
};

// Class Tiger.TigerCharacterPreset
// Size: 0x2e0 (Inherited: 0x28)
struct UTigerCharacterPreset : UObject {
	struct FTigerPreviewerData PreviewerData; // 0x28(0x2b0)
	enum class ETigerGender BodyType; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)

	enum class ETigerGender GetBodyTypeFromHead(); // Function Tiger.TigerCharacterPreset.GetBodyTypeFromHead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131fe10
	struct FTigerCharacterAppearance GetAppearance(); // Function Tiger.TigerCharacterPreset.GetAppearance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131fce0
};

// Class Tiger.TigerPrimogenNPC
// Size: 0xb30 (Inherited: 0xb10)
struct ATigerPrimogenNPC : ATigerNPC {
	struct FSoftObjectPath CharacterPresetPath; // 0xb08(0x18)
	char pad_B28[0x8]; // 0xb28(0x08)

	void OnRep_CharacterPresetPath(); // Function Tiger.TigerPrimogenNPC.OnRep_CharacterPresetPath // (Final|Native|Protected) // @ game+0x1320360
};

// Class Tiger.TigerBodyPartProjectileDamageModifiersAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerBodyPartProjectileDamageModifiersAsset : UDataAsset {
	struct TMap<struct FName, enum class EBodyPart> BonesToBodyParts; // 0x30(0x50)
};

// Class Tiger.TigerProjectile
// Size: 0x2d0 (Inherited: 0x228)
struct ATigerProjectile : AActor {
	struct USphereComponent* CollisionComp; // 0x228(0x08)
	struct UProjectileMovementComponent* ProjectileMovement; // 0x230(0x08)
	struct UParticleSystemComponent* BulletTrail; // 0x238(0x08)
	struct UStaticMeshComponent* ProjectileMesh; // 0x240(0x08)
	struct UTigerRangedWeapon* RangedWeaponType; // 0x248(0x08)
	char pad_250[0x8]; // 0x250(0x08)
	enum class EHitAudio HitAudioEnum; // 0x258(0x01)
	bool bDoProjectileCollision; // 0x259(0x01)
	bool bIsKilled; // 0x25a(0x01)
	bool bWillBeReflected; // 0x25b(0x01)
	bool bIsReflected; // 0x25c(0x01)
	bool bWasHeadShot; // 0x25d(0x01)
	bool bIsPooled; // 0x25e(0x01)
	char pad_25F[0x1]; // 0x25f(0x01)
	struct UTigerProjectilePool* HomeProjectilePool; // 0x260(0x08)
	struct UNiagaraComponent* TraceNiagaraComponent; // 0x268(0x08)
	char pad_270[0x30]; // 0x270(0x30)
	struct TArray<struct FTigerRangedHitInfo> PiercedCharacters; // 0x2a0(0x10)
	struct TArray<struct ATigerCharacter*> HitCharacters; // 0x2b0(0x10)
	char pad_2C0[0x10]; // 0x2c0(0x10)

	void TriggerHitEffects(struct FHitResult Hit); // Function Tiger.TigerProjectile.TriggerHitEffects // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerProjectile.OverlappedActor // (Final|Native|Public|HasOutParms) // @ game+0x13205b0
	void OnReactivate(); // Function Tiger.TigerProjectile.OnReactivate // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void KillProjectile(); // Function Tiger.TigerProjectile.KillProjectile // (Final|Native|Public|BlueprintCallable) // @ game+0x1320270
	bool IsWithinRange(struct FVector Location); // Function Tiger.TigerProjectile.IsWithinRange // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13201d0
	void HitActor(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult Hit); // Function Tiger.TigerProjectile.HitActor // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x131fff0
	void HideTrail(); // Function Tiger.TigerProjectile.HideTrail // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void DeactivateProjectileTraceIfInactive(); // Function Tiger.TigerProjectile.DeactivateProjectileTraceIfInactive // (Final|Native|Protected) // @ game+0x131faf0
	bool CheckIsCharacterInHitResults(struct ATigerCharacter* InCharacter); // Function Tiger.TigerProjectile.CheckIsCharacterInHitResults // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131f930
};

// Class Tiger.TigerProjectilePool
// Size: 0x58 (Inherited: 0x28)
struct UTigerProjectilePool : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Tiger.TigerProjectilePoolingSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerProjectilePoolingSettings : USharkLocalDeveloperSettings {
	bool bUsingProjectilePooling; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerProjectionDashProjectile
// Size: 0x280 (Inherited: 0x228)
struct ATigerProjectionDashProjectile : AActor {
	float MovementSpeed; // 0x228(0x04)
	float Duration; // 0x22c(0x04)
	struct FVector TargetPosition; // 0x230(0x0c)
	struct FVector StartingPosition; // 0x23c(0x0c)
	char pad_248[0xc]; // 0x248(0x0c)
	struct FVector LastValidPosition; // 0x254(0x0c)
	char pad_260[0x8]; // 0x260(0x08)
	struct USphereComponent* SphereCollider; // 0x268(0x08)
	struct UTigerBuff* ThornsBuff; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)

	void OverlapCharacter(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerProjectionDashProjectile.OverlapCharacter // (Final|Native|Public|HasOutParms) // @ game+0x1320380
	void OnProjectileStopped(); // Function Tiger.TigerProjectionDashProjectile.OnProjectileStopped // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnProjectileDeath(); // Function Tiger.TigerProjectionDashProjectile.OnProjectileDeath // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Multicast_OnStopped(); // Function Tiger.TigerProjectionDashProjectile.Multicast_OnStopped // (Net|Native|Event|NetMulticast|Protected) // @ game+0x128cf30
	void Multicast_OnDeath(); // Function Tiger.TigerProjectionDashProjectile.Multicast_OnDeath // (Net|Native|Event|NetMulticast|Protected) // @ game+0xb8c8c0
};

// Class Tiger.TigerPromotionalUI
// Size: 0x300 (Inherited: 0x290)
struct UTigerPromotionalUI : UTigerMenuWidget {
	char pad_290[0x10]; // 0x290(0x10)
	bool bIsPreviewWidget; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	int32_t ZValue; // 0x2a4(0x04)
	struct TSoftObjectPtr<struct UTexture2D> FirstTimeWelcomeTexturePath; // 0x2a8(0x28)
	struct FText FirstTimeWelcomeTitleText; // 0x2d0(0x18)
	struct FText FirstTimeWelcomeDescriptionText; // 0x2e8(0x18)

	void RefreshConfig(); // Function Tiger.TigerPromotionalUI.RefreshConfig // (Final|Native|Protected|BlueprintCallable) // @ game+0xb45020
	void OverrideCulture(struct FString InCulture); // Function Tiger.TigerPromotionalUI.OverrideCulture // (Final|Native|Protected|BlueprintCallable) // @ game+0x1263e90
	void OnTitleScreenClosed(); // Function Tiger.TigerPromotionalUI.OnTitleScreenClosed // (Final|Native|Protected) // @ game+0x1327210
	void OnShowFirstTimeEntry(); // Function Tiger.TigerPromotionalUI.OnShowFirstTimeEntry // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnShowEntry(struct FTigerPromotionalPopupConfigEntry InEntry); // Function Tiger.TigerPromotionalUI.OnShowEntry // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnInitializeDone(bool bInSuccess); // Function Tiger.TigerPromotionalUI.OnInitializeDone // (Final|Native|Protected|BlueprintCallable) // @ game+0x1326e70
};

// Class Tiger.TigerPromptCollectionWidget
// Size: 0x330 (Inherited: 0x280)
struct UTigerPromptCollectionWidget : UTigerWidget {
	struct UTigerSimpleTextPrompt* MasqueradeBreachedPrompt; // 0x280(0x08)
	struct UTigerSimpleTextPrompt* MasqueradeBreachedByNpcKillPrompt; // 0x288(0x08)
	struct UTigerSimpleTextPrompt* MasqueradeBreachedByNpcFeedingPrompt; // 0x290(0x08)
	struct UTigerSimpleTextPrompt* MasqueradeRestoredPrompt; // 0x298(0x08)
	struct UTigerSimpleTextPrompt* IntroPrompt; // 0x2a0(0x08)
	struct UTigerSimpleTextPrompt* FirstGasPrompt; // 0x2a8(0x08)
	struct UTigerSimpleTextPrompt* SubsequentGasPrompt; // 0x2b0(0x08)
	struct UTigerSimpleTextPrompt* GasStartedMovingPrompt; // 0x2b8(0x08)
	struct UTigerSimpleTextPrompt* JudgeSpawnedPrompt; // 0x2c0(0x08)
	struct UTigerSimpleTextPrompt* JudgeSlainPrompt; // 0x2c8(0x08)
	struct UTigerSimpleTextPrompt* SupplyDropPrompt; // 0x2d0(0x08)
	struct UTigerSimpleTextPrompt* SuperHighPotentNearbyPrompt; // 0x2d8(0x08)
	struct UTigerSimpleTextPrompt* LevelUpPrompt; // 0x2e0(0x08)
	struct UTigerSimpleTextPrompt* GameModeInteractionPrompt; // 0x2e8(0x08)
	struct UTigerSimpleTextPrompt* EliminatedPlayerPrompt; // 0x2f0(0x08)
	struct UTigerSimpleTextPrompt* DownedPlayerPrompt; // 0x2f8(0x08)
	struct UTigerEnteringNewAreaPrompt* EnteringNewAreaPrompt; // 0x300(0x08)
	struct UTigerSimpleTextPrompt* ArtifactPickedUpPrompt; // 0x308(0x08)
	struct TArray<struct FTigerQueuedTextPrompt> TextPromptQueue; // 0x310(0x10)
	struct TArray<struct FTigerQueuedTextPromptPriorityEntry> Prompts; // 0x320(0x10)

	void EnqueueTextPrompt(struct UTigerSimpleTextPrompt* InTextPrompt); // Function Tiger.TigerPromptCollectionWidget.EnqueueTextPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x1325e10
};

// Class Tiger.TigerStaticMeshPropComponent
// Size: 0x4f0 (Inherited: 0x4e0)
struct UTigerStaticMeshPropComponent : UStaticMeshComponent {
	char pad_4E0[0x10]; // 0x4e0(0x10)
};

// Class Tiger.TigerSkeletalMeshPropComponent
// Size: 0xef0 (Inherited: 0xee0)
struct UTigerSkeletalMeshPropComponent : USkeletalMeshComponent {
	char pad_EE0[0x10]; // 0xee0(0x10)
};

// Class Tiger.TigerPropEffectsComponent
// Size: 0x510 (Inherited: 0x4f0)
struct UTigerPropEffectsComponent : UTigerStaticMeshPropComponent {
	struct UParticleSystem* Particles; // 0x4e8(0x08)
	struct FName AttachPoint; // 0x4f0(0x08)
	struct UParticleSystemComponent* ParticlesSystemComponent; // 0x4f8(0x08)
	bool bActivateEffectOnAttach; // 0x500(0x01)
	char pad_509[0x7]; // 0x509(0x07)
};

// Class Tiger.TigerPropCompInterface
// Size: 0x28 (Inherited: 0x28)
struct UTigerPropCompInterface : UInterface {

	void OnDeactiveEffect(); // Function Tiger.TigerPropCompInterface.OnDeactiveEffect // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnActivateEffect(); // Function Tiger.TigerPropCompInterface.OnActivateEffect // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void DeactiveEffect(); // Function Tiger.TigerPropCompInterface.DeactiveEffect // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1325df0
	void ActivateEffect(); // Function Tiger.TigerPropCompInterface.ActivateEffect // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x13259a0
};

// Class Tiger.TigerPropDummy
// Size: 0x4d0 (Inherited: 0x4c0)
struct ATigerPropDummy : ACharacter {
	struct UTigerNpcPropComponent* PropComponent; // 0x4b8(0x08)
	struct TArray<struct FTigerDummyPropAttachment> Attachments; // 0x4c0(0x10)
};

// Class Tiger.TigerPsoCacheUI
// Size: 0x2a0 (Inherited: 0x280)
struct UTigerPsoCacheUI : UTigerWidget {
	struct FMulticastInlineDelegate OnCachingDone; // 0x280(0x10)
	struct UTigerSharedMouseCursor* SharedMouseCursor; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)

	void TigerOnCachingDone__DelegateSignature(); // DelegateFunction Tiger.TigerPsoCacheUI.TigerOnCachingDone__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	bool ShouldCacheDx12PsosAtBoot(); // Function Tiger.TigerPsoCacheUI.ShouldCacheDx12PsosAtBoot // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1327800
	void OnProgressUpdated(float InPercentageCompleted); // Function Tiger.TigerPsoCacheUI.OnProgressUpdated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void CancelCaching(); // Function Tiger.TigerPsoCacheUI.CancelCaching // (Final|Native|Protected|BlueprintCallable) // @ game+0x13259c0
};

// Class Tiger.TigerQuestObjective
// Size: 0xa0 (Inherited: 0x28)
struct UTigerQuestObjective : UObject {
	struct FText Description; // 0x28(0x18)
	struct FText FlavourText; // 0x40(0x18)
	struct UTigerChallenge* Objective; // 0x58(0x08)
	bool bComplete; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct TArray<struct UTigerQuestObjective*> FollowOnObjectives; // 0x68(0x10)
	struct FGuid ID; // 0x78(0x10)
	struct UTigerQuest* ParentQuest; // 0x88(0x08)
	struct UTigerQuestObjective* ParentObjective; // 0x90(0x08)
	struct ATigerPlayerController* OwningPlayerController; // 0x98(0x08)

	void OnObjectiveCompleted(struct UTigerChallenge* InTigerChallenge); // Function Tiger.TigerQuestObjective.OnObjectiveCompleted // (Final|Native|Public) // @ game+0x1327020
};

// Class Tiger.TigerQuest
// Size: 0xf8 (Inherited: 0x28)
struct UTigerQuest : UObject {
	struct FMulticastInlineDelegate OnProgressChangedEvent; // 0x28(0x10)
	struct FMulticastInlineDelegate OnQuestCompletedEvent; // 0x38(0x10)
	struct FMulticastInlineDelegate OnQuestObjectiveCompletedEvent; // 0x48(0x10)
	struct FText QuestName; // 0x58(0x18)
	struct FText QuestSubheading; // 0x70(0x18)
	struct FText FlavourText; // 0x88(0x18)
	struct TArray<struct UTigerQuestObjective*> Objectives; // 0xa0(0x10)
	struct TArray<struct FTigerItemId> RewardIds; // 0xb0(0x10)
	struct UTigerGrimoireEntry* GrimoireEntryToUnlock; // 0xc0(0x08)
	struct FTigerQuestIdentifier QuestLookupIdentifier; // 0xc8(0x30)

	void OnQuestObjectiveCompletedEvent__DelegateSignature(struct UTigerQuest* Quest, struct UTigerQuestObjective* Objective); // DelegateFunction Tiger.TigerQuest.OnQuestObjectiveCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnQuestCompletedEvent__DelegateSignature(struct UTigerQuest* Quest); // DelegateFunction Tiger.TigerQuest.OnQuestCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnProgressChangedEvent__DelegateSignature(struct UTigerQuest* Quest); // DelegateFunction Tiger.TigerQuest.OnProgressChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnObjectiveCompleted(struct UTigerQuestObjective* InTigerObjective); // Function Tiger.TigerQuest.OnObjectiveCompleted // (Final|Native|Public) // @ game+0x1326f90
	struct FTigerItemId GetRarestRewardAsItemId(); // Function Tiger.TigerQuest.GetRarestRewardAsItemId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326470
	struct UTigerInventoryItemBase* GetRarestRewardAsInventoryItem(); // Function Tiger.TigerQuest.GetRarestRewardAsInventoryItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326440
	struct FTigerQuestIdentifier GetQuestIdentifier(); // Function Tiger.TigerQuest.GetQuestIdentifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326360
	struct TArray<struct UTigerQuestObjective*> GetOngoingObjectives(); // Function Tiger.TigerQuest.GetOngoingObjectives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13262e0
	struct TArray<struct UTigerQuestObjective*> GetIncompleteObjectives(); // Function Tiger.TigerQuest.GetIncompleteObjectives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13261d0
	struct TArray<struct UTigerQuestObjective*> GetCompleteObjectives(); // Function Tiger.TigerQuest.GetCompleteObjectives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1325f10
};

// Class Tiger.TigerQuestline
// Size: 0x90 (Inherited: 0x28)
struct UTigerQuestline : UObject {
	struct FText Title; // 0x28(0x18)
	struct TMap<struct FString, struct UTigerQuest*> Quests; // 0x40(0x50)
};

// Class Tiger.TigerQuestCollection
// Size: 0x80 (Inherited: 0x30)
struct UTigerQuestCollection : UDataAsset {
	struct TMap<struct FString, struct UTigerQuestline*> questLines; // 0x30(0x50)
};

// Class Tiger.TigerQuestSystem
// Size: 0x168 (Inherited: 0xb0)
struct UTigerQuestSystem : UActorComponent {
	char pad_B0[0xb8]; // 0xb0(0xb8)

	void Server_GatherQuestLocations(); // Function Tiger.TigerQuestSystem.Server_GatherQuestLocations // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x1247250
	void OnQuestObjectiveComplete(struct UTigerQuest* InQuest, struct UTigerQuestObjective* InCompleteObjective); // Function Tiger.TigerQuestSystem.OnQuestObjectiveComplete // (Final|Native|Protected) // @ game+0x1327140
	void OnQuestComplete(struct UTigerQuest* InCompleteQuest); // Function Tiger.TigerQuestSystem.OnQuestComplete // (Final|Native|Protected) // @ game+0x13270b0
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerQuestSystem.MatchStateChanged // (Final|Native|Private) // @ game+0x13266a0
	void Client_SetCachedQuestLocations(struct TArray<struct FTigerQuestItemLocationDetails> InCachedQuestMapLocations); // Function Tiger.TigerQuestSystem.Client_SetCachedQuestLocations // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1325c80
	void Client_OnQuestObjectiveComplete(struct FTigerQuestIdentifier InIdentifier); // Function Tiger.TigerQuestSystem.Client_OnQuestObjectiveComplete // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1325b30
	void Client_OnQuestComplete(struct FTigerQuestIdentifier InIdentifier); // Function Tiger.TigerQuestSystem.Client_OnQuestComplete // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x13259e0
};

// Class Tiger.TigerQueueForLogin
// Size: 0x88 (Inherited: 0x30)
struct UTigerQueueForLogin : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate ReadyForLogin; // 0x30(0x10)
	struct FMulticastInlineDelegate WaitTimeUpdated; // 0x40(0x10)
	struct FMulticastInlineDelegate Error; // 0x50(0x10)
	char pad_60[0x8]; // 0x60(0x08)
	struct UTigerLoginQueueService* LoginQueueService; // 0x68(0x08)
	char pad_70[0x18]; // 0x70(0x18)

	void QueueForLoginOutputPin__DelegateSignature(struct FTigerLoginQueueToken LoginToken, struct FTimespan EstimatedWaitTime, struct FString ErrorMessage); // DelegateFunction Tiger.TigerQueueForLogin.QueueForLoginOutputPin__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults) // @ game+0x16c0340
	struct UTigerQueueForLogin* QueueForLogin(struct UObject* InWorldContextObject); // Function Tiger.TigerQueueForLogin.QueueForLogin // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1327230
};

// Class Tiger.TigerRadarChart
// Size: 0x1d0 (Inherited: 0x108)
struct UTigerRadarChart : UWidget {
	struct FSlateBrush GraphImage; // 0x108(0x88)
	struct FColor FillColor; // 0x190(0x04)
	int32_t Points; // 0x194(0x04)
	float Radius; // 0x198(0x04)
	float Tilt; // 0x19c(0x04)
	struct FVector2D Offset; // 0x1a0(0x08)
	int32_t ValueMaximum; // 0x1a8(0x04)
	int32_t ValueMinimum; // 0x1ac(0x04)
	struct TArray<int32_t> Values; // 0x1b0(0x10)
	char pad_1C0[0x10]; // 0x1c0(0x10)

	void SetValue(int32_t InIndex, int32_t InValue); // Function Tiger.TigerRadarChart.SetValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1327730
	void SetAllValues(struct TArray<int32_t> InValues, int32_t InDefaultValue); // Function Tiger.TigerRadarChart.SetAllValues // (Final|Native|Public|BlueprintCallable) // @ game+0x1327600
	void NullifyAllValues(); // Function Tiger.TigerRadarChart.NullifyAllValues // (Final|Native|Public|BlueprintCallable) // @ game+0x1326e50
};

// Class Tiger.TigerRangedWeaponComponent
// Size: 0x2f0 (Inherited: 0xb0)
struct UTigerRangedWeaponComponent : UActorComponent {
	struct FMulticastInlineDelegate OnShowCrosshairAmmoState; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnReloadStart; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnReloadFinished; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnReloadAborted; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnBurstCompleted; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnLowAmmo; // 0x100(0x10)
	struct FMulticastInlineDelegate OnRangedWeaponEquipped; // 0x110(0x10)
	struct FMulticastInlineDelegate OnAimChanged; // 0x120(0x10)
	struct UTigerBodyPartProjectileDamageModifiersAsset* BodyPartDamageModifiersAsset; // 0x130(0x08)
	char pad_138[0x10]; // 0x138(0x10)
	struct ATigerPlayer* TigerPlayer; // 0x148(0x08)
	struct UDataTable* RangedWeaponsDatatable; // 0x150(0x08)
	struct UStaticMesh* ImpactHelperMesh; // 0x158(0x08)
	struct UAkAudioEvent* GotHitEvent; // 0x160(0x08)
	struct UAkAudioEvent* FireModeSwitchEvent; // 0x168(0x08)
	struct UTigerRangedWeapon* EquippedWeaponType; // 0x170(0x08)
	struct UAnimMontage* LastFireAnimationMontage; // 0x178(0x08)
	char pad_180[0x60]; // 0x180(0x60)
	struct FTimerHandle ReloadWeaponTimerHandle; // 0x1e0(0x08)
	char pad_1E8[0x2]; // 0x1e8(0x02)
	bool bIsFiring; // 0x1ea(0x01)
	bool bWantsToFire; // 0x1eb(0x01)
	bool bIsAiming; // 0x1ec(0x01)
	char pad_1ED[0x23]; // 0x1ed(0x23)
	struct UStaticMeshComponent* ImpactHelperMeshComp; // 0x210(0x08)
	char pad_218[0x2c]; // 0x218(0x2c)
	float CoolDownOutOfAmmoAudioEvent; // 0x244(0x04)
	char pad_248[0x28]; // 0x248(0x28)
	struct UTigerAICoordinator* AICoordinator; // 0x270(0x08)
	struct TMap<struct ATigerProjectile*, struct UTigerProjectilePool*> ProjectilePoolMap; // 0x278(0x50)
	char pad_2C8[0x28]; // 0x2c8(0x28)

	bool WeaponUsesScope(); // Function Tiger.TigerRangedWeaponComponent.WeaponUsesScope // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13278b0
	bool WeaponCanSwitchFireMode(); // Function Tiger.TigerRangedWeaponComponent.WeaponCanSwitchFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1327880
	bool WantsToFire(); // Function Tiger.TigerRangedWeaponComponent.WantsToFire // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1327860
	void TigerOnShowCrosshairAmmoState__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnShowCrosshairAmmoState__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnReloadStart__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnReloadStart__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnReloadFinished__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnReloadFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnReloadAborted__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnReloadAborted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnRangedWeaponEquipped__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnRangedWeaponEquipped__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnLowAmmo__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnLowAmmo__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnBurstCompleted__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnBurstCompleted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnAimChanged__DelegateSignature(bool bIsAiming); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnAimChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	bool ShouldUseAimingAnimation(); // Function Tiger.TigerRangedWeaponComponent.ShouldUseAimingAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1327830
	void Server_SwitchFireMode(); // Function Tiger.TigerRangedWeaponComponent.Server_SwitchFireMode // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x13275b0
	void Server_SetFireAudioState(enum class ETigerFireAudioState InAudioFireState); // Function Tiger.TigerRangedWeaponComponent.Server_SetFireAudioState // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1327530
	void Server_SetClientSideHitDetectionRanged(bool bEnableClientSideHits); // Function Tiger.TigerRangedWeaponComponent.Server_SetClientSideHitDetectionRanged // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1327470
	void Server_DebugClientHit(int32_t InProjectileId, struct FVector InMeshOffset, float InLastCorrectionTime, float InDeltaTime); // Function Tiger.TigerRangedWeaponComponent.Server_DebugClientHit // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x13272c0
	void OnMontageStartedDuringReload(struct UAnimMontage* Montage); // Function Tiger.TigerRangedWeaponComponent.OnMontageStartedDuringReload // (Final|Native|Protected) // @ game+0x1326f00
	void Multicast_UpdateReloadLoopsLeft(int8_t InReloadLoopsDelta); // Function Tiger.TigerRangedWeaponComponent.Multicast_UpdateReloadLoopsLeft // (Net|Native|Event|NetMulticast|Public) // @ game+0x1326dd0
	void Multicast_SetFireAudioState(enum class ETigerFireAudioState InAudioFireState); // Function Tiger.TigerRangedWeaponComponent.Multicast_SetFireAudioState // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1326d50
	void Multicast_SetClientSideHitDetectionRanged(bool bEnableClientSideHits); // Function Tiger.TigerRangedWeaponComponent.Multicast_SetClientSideHitDetectionRanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1326cc0
	void Multicast_PlayReloadAnimations(int8_t InReloadLoops, float InPlayRate); // Function Tiger.TigerRangedWeaponComponent.Multicast_PlayReloadAnimations // (Net|Native|Event|NetMulticast|Public) // @ game+0x1326bf0
	void Multicast_PlayPrimingAnimations(); // Function Tiger.TigerRangedWeaponComponent.Multicast_PlayPrimingAnimations // (Net|Native|Event|NetMulticast|Public) // @ game+0x12cd860
	void Multicast_OnWeaponFired(struct FVector SpawnLocation, struct FRotator SpawnRotation, float FireSpread, struct FTigerRangedRandomState FireRandomState); // Function Tiger.TigerRangedWeaponComponent.Multicast_OnWeaponFired // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x1326a90
	void Multicast_OnNpcWeaponFired(struct FVector InSpawnLocation, struct FRotator InSpawnRotation, struct FVector InTargetLocation, float InFireSpread, struct FTigerRangedRandomState InFireRandomState); // Function Tiger.TigerRangedWeaponComponent.Multicast_OnNpcWeaponFired // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x13268e0
	void Multicast_CreateOrUpdateAreaEffect(struct ATigerAreaEffect* InAreaEffectType, struct FVector InNewLocation, int32_t InProjectileId, bool bInAllowUpdate); // Function Tiger.TigerRangedWeaponComponent.Multicast_CreateOrUpdateAreaEffect // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x1326790
	void Multicast_AbortReloadAnimation(); // Function Tiger.TigerRangedWeaponComponent.Multicast_AbortReloadAnimation // (Net|Native|Event|NetMulticast|Public) // @ game+0x1326770
	bool IsLowOnLoadedAmmo(); // Function Tiger.TigerRangedWeaponComponent.IsLowOnLoadedAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326670
	bool IsInReload(); // Function Tiger.TigerRangedWeaponComponent.IsInReload // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326640
	bool IsInFireMode(enum class ETigerWeaponFireMode FireMode); // Function Tiger.TigerRangedWeaponComponent.IsInFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13265b0
	bool IsFiring(); // Function Tiger.TigerRangedWeaponComponent.IsFiring // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326590
	bool IsAiming(); // Function Tiger.TigerRangedWeaponComponent.IsAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326570
	bool HasEquippedOrWantedWeapon(); // Function Tiger.TigerRangedWeaponComponent.HasEquippedOrWantedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326540
	bool HasAmmo(); // Function Tiger.TigerRangedWeaponComponent.HasAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326510
	float GetWeaponDamageValue(); // Function Tiger.TigerRangedWeaponComponent.GetWeaponDamageValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13264e0
	float GetReloadDonePercentage(); // Function Tiger.TigerRangedWeaponComponent.GetReloadDonePercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13264b0
	int32_t GetMaxAmmo(); // Function Tiger.TigerRangedWeaponComponent.GetMaxAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13262b0
	int32_t GetLoadedAmmo(); // Function Tiger.TigerRangedWeaponComponent.GetLoadedAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326280
	int32_t GetInventoryAmmo(); // Function Tiger.TigerRangedWeaponComponent.GetInventoryAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326250
	struct UCameraShakeBase* GetHipFireCameraShake(); // Function Tiger.TigerRangedWeaponComponent.GetHipFireCameraShake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326190
	struct UForceFeedbackEffect* GetFireForceFeedback(); // Function Tiger.TigerRangedWeaponComponent.GetFireForceFeedback // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326160
	struct UTigerRangedWeapon* GetEquippedOrWantedWeapon(); // Function Tiger.TigerRangedWeaponComponent.GetEquippedOrWantedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326130
	float GetCurrentSpread(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentSpread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326100
	float GetCurrentReloadDuration(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentReloadDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13260d0
	struct ATigerProjectile* GetCurrentProjectileType(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentProjectileType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1326090
	struct FTigerFireSettings GetCurrentFireSettings(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentFireSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1325ff0
	enum class ETigerWeaponFireMode GetCurrentFireMode(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1325fc0
	float GetCurrentAimedFov(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentAimedFov // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1325f90
	float GetAimSpeedMultiplier(); // Function Tiger.TigerRangedWeaponComponent.GetAimSpeedMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1325ea0
	struct UCameraShakeBase* GetAimedFireCameraShake(); // Function Tiger.TigerRangedWeaponComponent.GetAimedFireCameraShake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1325ed0
	void Client_SwitchFireMode(int32_t NewFireModeIndex); // Function Tiger.TigerRangedWeaponComponent.Client_SwitchFireMode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1325d60
	void Client_DebugGetClientHit(int32_t InProjectileId); // Function Tiger.TigerRangedWeaponComponent.Client_DebugGetClientHit // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1247270
};

// Class Tiger.TigerRangedWeaponModModifier
// Size: 0x28 (Inherited: 0x28)
struct UTigerRangedWeaponModModifier : UObject {

	void OnModUnequipped(struct UTigerEquippedModModifierValues* Modifiers); // Function Tiger.TigerRangedWeaponModModifier.OnModUnequipped // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnModEquipped(struct UTigerEquippedModModifierValues* Modifiers); // Function Tiger.TigerRangedWeaponModModifier.OnModEquipped // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerRat
// Size: 0x310 (Inherited: 0x280)
struct ATigerRat : ATigerInteractiveObject {
	char pad_280[0x8]; // 0x280(0x08)
	struct FVector LocalHandOffset; // 0x288(0x0c)
	struct FRotator LocalHandRotation; // 0x294(0x0c)
	struct UAnimMontage* Montage; // 0x2a0(0x08)
	struct TWeakObjectPtr<struct ATigerPlayerController> CurrentInteractingPlayerController; // 0x2a8(0x08)
	float FeedTickTime; // 0x2b0(0x04)
	float FeedHealthAmount; // 0x2b4(0x04)
	float MoveSpeed; // 0x2b8(0x04)
	float RotationSpeed; // 0x2bc(0x04)
	float MaxWaitTime; // 0x2c0(0x04)
	float MinWaitTime; // 0x2c4(0x04)
	struct USkeletalMeshComponent* RatMesh; // 0x2c8(0x08)
	bool bShouldMove; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct UAkAudioEvent* PickUpSqueekEvent; // 0x2d8(0x08)
	char pad_2E0[0x28]; // 0x2e0(0x28)
	bool bIsEaten; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)

	void OnInteractEnd(); // Function Tiger.TigerRat.OnInteractEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x132c6b0
	bool IsEaten(); // Function Tiger.TigerRat.IsEaten // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x132c5f0
};

// Class Tiger.TigerRatSpawnpointActorSpawner
// Size: 0x200 (Inherited: 0x200)
struct UTigerRatSpawnpointActorSpawner : USceneComponent {
	struct ATigerRat* ActorToSpawn; // 0x1f8(0x08)
};

// Class Tiger.TigerRatSpawnpoint
// Size: 0x230 (Inherited: 0x228)
struct ATigerRatSpawnpoint : AActor {
	int32_t NumRatsToSpawn; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
};

// Class Tiger.TigerReactToHeightenedSense
// Size: 0x28 (Inherited: 0x28)
struct UTigerReactToHeightenedSense : UInterface {

	void OnLeaveHeightenedSenseArea(); // Function Tiger.TigerReactToHeightenedSense.OnLeaveHeightenedSenseArea // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnEnterHeightenedSenseAreaInitial(); // Function Tiger.TigerReactToHeightenedSense.OnEnterHeightenedSenseAreaInitial // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnEnterHeightenedSenseArea(); // Function Tiger.TigerReactToHeightenedSense.OnEnterHeightenedSenseArea // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerReflectable
// Size: 0x28 (Inherited: 0x28)
struct UTigerReflectable : UInterface {

	struct AActor* CopyAndReflect(struct ATigerCharacter* InNewOwner, struct FVector InSpawnLocation, struct FRotator InSpawnRotation); // Function Tiger.TigerReflectable.CopyAndReflect // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x132bf30
	void BlockReflect(struct ATigerCharacter* ReflectOwner); // Function Tiger.TigerReflectable.BlockReflect // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x132bde0
};

// Class Tiger.TigerReflector
// Size: 0x28 (Inherited: 0x28)
struct UTigerReflector : UInterface {
};

// Class Tiger.TigerRejuvenatingVoiceEffectActor
// Size: 0x238 (Inherited: 0x228)
struct ATigerRejuvenatingVoiceEffectActor : AActor {
	struct ATigerPlayer* Player; // 0x228(0x08)
	float HealAmount; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
};

// Class Tiger.TigerRemoteLocalizationSubSystem
// Size: 0x30 (Inherited: 0x30)
struct UTigerRemoteLocalizationSubSystem : UEngineSubsystem {
};

// Class Tiger.TigerRenderingSettings
// Size: 0x88 (Inherited: 0x38)
struct UTigerRenderingSettings : UDeveloperSettings {
	int32_t MaxSpotLightShadowCasters; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct TSoftObjectPtr<struct UMaterialInterface> LastLodMaterialMaster; // 0x40(0x28)
	struct TArray<struct FName> LastLodExtractionParameters; // 0x68(0x10)
	struct TArray<struct TSoftObjectPtr<struct UMaterialInterface>> MaterialsToExclude; // 0x78(0x10)
};

// Class Tiger.TigerReplicationGraph
// Size: 0x550 (Inherited: 0x4a0)
struct UTigerReplicationGraph : UReplicationGraph {
	struct UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x498(0x08)
	struct UTigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned* PlayerSpawnedGridNode; // 0x4a0(0x08)
	struct UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4a8(0x08)
	struct UTigerReplicationGraphNode_OwnerRelevant* OwnerRelevantNode; // 0x4b0(0x08)
	char pad_4C0[0x90]; // 0x4c0(0x90)
};

// Class Tiger.TigerReplicationGraphNode_AlwaysRelevant_ForConnection
// Size: 0x80 (Inherited: 0x50)
struct UTigerReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode {
	char pad_50[0x18]; // 0x50(0x18)
	struct AActor* LastViewer; // 0x68(0x08)
	struct AActor* LastViewTarget; // 0x70(0x08)
	char pad_78[0x8]; // 0x78(0x08)
};

// Class Tiger.TigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned
// Size: 0x230 (Inherited: 0x230)
struct UTigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned : UReplicationGraphNode_GridSpatialization2D {
};

// Class Tiger.TigerReplicationGraphNode_OwnerRelevant
// Size: 0x80 (Inherited: 0x50)
struct UTigerReplicationGraphNode_OwnerRelevant : UReplicationGraphNode {
	char pad_50[0x30]; // 0x50(0x30)
};

// Class Tiger.TigerRequestUtility
// Size: 0x38 (Inherited: 0x28)
struct UTigerRequestUtility : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Tiger.TigerResourceBarSegmentUI
// Size: 0x290 (Inherited: 0x280)
struct UTigerResourceBarSegmentUI : UTigerWidget {
	struct UMaterialInstanceDynamic* SegmentMaterial; // 0x280(0x08)
	float MinResource; // 0x288(0x04)
	float MaxResource; // 0x28c(0x04)
};

// Class Tiger.TigerResurrectAltar
// Size: 0x2d0 (Inherited: 0x280)
struct ATigerResurrectAltar : ATigerInteractiveObject {
	char pad_280[0x8]; // 0x280(0x08)
	struct ATigerPlayerController* ResurrectingPlayerController; // 0x288(0x08)
	float RespawnDelay; // 0x290(0x04)
	bool ShouldDisableAfterSingleUse; // 0x294(0x01)
	enum class ETigerResurrectHolyIncenseInteractionType HolyIncenseInteractionType; // 0x295(0x01)
	char pad_296[0x2]; // 0x296(0x02)
	float HolyIncensePositionCheckRate; // 0x298(0x04)
	float AltarDestroyDelay; // 0x29c(0x04)
	struct TArray<struct USceneComponent*> RespawnPoints; // 0x2a0(0x10)
	char pad_2B0[0x20]; // 0x2b0(0x20)

	void SetupHolyIncenseInteraction(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerResurrectAltar.SetupHolyIncenseInteraction // (Final|Native|Protected) // @ game+0x132cc20
	void OnWaveStoppedMoving(); // Function Tiger.TigerResurrectAltar.OnWaveStoppedMoving // (Final|Native|Protected) // @ game+0x132c7a0
	void OnWaveStartedMoving(); // Function Tiger.TigerResurrectAltar.OnWaveStartedMoving // (Final|Native|Protected) // @ game+0x132c780
	void OnWaveRevealed(); // Function Tiger.TigerResurrectAltar.OnWaveRevealed // (Final|Native|Protected) // @ game+0x132c760
	void OnResurrectInteractionFinished(); // Function Tiger.TigerResurrectAltar.OnResurrectInteractionFinished // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnResurrect(struct USceneComponent* InUsedSceneComponent, struct FVector InResurrectLocation, struct FRotator InResurrectRotation); // Function Tiger.TigerResurrectAltar.OnResurrect // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void OnAltarDeactivatedAfterUse(); // Function Tiger.TigerResurrectAltar.OnAltarDeactivatedAfterUse // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnAltarDeactivated(); // Function Tiger.TigerResurrectAltar.OnAltarDeactivated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Multicast_OnResurrect(int32_t InResurrectCount); // Function Tiger.TigerResurrectAltar.Multicast_OnResurrect // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x132c620
	struct FRotator GetRespawnRotationOffset(struct USceneComponent* InSceneComponent, int32_t InCurrenctResurrectIndex, int32_t InResurrectCount); // Function Tiger.TigerResurrectAltar.GetRespawnRotationOffset // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x132c330
	struct FVector GetRespawnLocationOffset(struct USceneComponent* InSceneComponent, int32_t InCurrenctResurrectIndex, int32_t InResurrectCount); // Function Tiger.TigerResurrectAltar.GetRespawnLocationOffset // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x132c200
	void DestroyAltar(); // Function Tiger.TigerResurrectAltar.DestroyAltar // (Final|Native|Protected) // @ game+0x132c060
	void CheckWavePosition(); // Function Tiger.TigerResurrectAltar.CheckWavePosition // (Final|Native|Protected) // @ game+0x132be70
};

// Class Tiger.TigerResurrectComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerResurrectComponent : UActorComponent {
	int32_t TokenCount; // 0xb0(0x04)
	char pad_B4[0x14]; // 0xb4(0x14)
	struct ATigerPlayer* MyPawnToResurrect; // 0xc8(0x08)

	void Server_ResurrectGroupMember(struct FVector InLocation, struct FRotator InRotator); // Function Tiger.TigerResurrectComponent.Server_ResurrectGroupMember // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults) // @ game+0x132c8c0
	void ResurrectGroupMember(struct FVector InRespawnLocation, struct FRotator InRespawnRotation); // Function Tiger.TigerResurrectComponent.ResurrectGroupMember // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x132c7e0
	int32_t GetTokenCount(); // Function Tiger.TigerResurrectComponent.GetTokenCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x132c500
};

// Class Tiger.TigerRevivingStatusUI
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerRevivingStatusUI : UTigerWidget {
	struct FText RegeneratingStatusText; // 0x280(0x18)
	struct FText DiablerizingStatusText; // 0x298(0x18)
	struct FText BeingRevivedStatusText; // 0x2b0(0x18)
	enum class ETigerPhysicalInteraction PhysicalInteractionStatus; // 0x2c8(0x01)
	bool bShouldUpdateTimer; // 0x2c9(0x01)
	char pad_2CA[0x2]; // 0x2ca(0x02)
	float TimeLeft; // 0x2cc(0x04)
	float PercentageLeft; // 0x2d0(0x04)
	char pad_2D4[0x8]; // 0x2d4(0x08)
	bool ShowPrompt; // 0x2dc(0x01)
	char pad_2DD[0x3]; // 0x2dd(0x03)

	void StatusChanged(); // Function Tiger.TigerRevivingStatusUI.StatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerRichTextBlock
// Size: 0x448 (Inherited: 0x128)
struct UTigerRichTextBlock : UTextLayoutWidget {
	struct FText Text; // 0x128(0x18)
	struct FDelegate TextDelegate; // 0x140(0x10)
	struct FSlateFontInfo Font; // 0x150(0x58)
	struct FLinearColor ColorAndOpacity; // 0x1a8(0x10)
	struct TArray<struct UTigerRichTextBlockDecorator*> Decorators; // 0x1b8(0x10)
	char pad_1C8[0x280]; // 0x1c8(0x280)

	void SetText(struct FText InText); // Function Tiger.TigerRichTextBlock.SetText // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x132cb50
	void SetOpacity(float InOpacity); // Function Tiger.TigerRichTextBlock.SetOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x132ca40
	void SetColorAndOpacity(struct FLinearColor InColorAndOpacity); // Function Tiger.TigerRichTextBlock.SetColorAndOpacity // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x132c9b0
	struct FText GetText(); // Function Tiger.TigerRichTextBlock.GetText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x132c460
};

// Class Tiger.TigerRichTextBlockIconDecorator
// Size: 0x50 (Inherited: 0x28)
struct UTigerRichTextBlockIconDecorator : URichTextBlockDecorator {
	bool bUsingGamePad; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct ATigerPlayerController* PlayerControllerRef; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
	struct UDataTable* IconImages; // 0x40(0x08)
	struct UTigerKeyTextureMapping* KeyTextureMapping; // 0x48(0x08)

	void OnUseGamepadChanged(bool InUsingGamepad); // Function Tiger.TigerRichTextBlockIconDecorator.OnUseGamepadChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x132c6d0
	void InitializeValues(struct ATigerPlayerController* InTigerController, struct UTigerStyledRichTextBlock* InOwningRichTextBlock); // Function Tiger.TigerRichTextBlockIconDecorator.InitializeValues // (Final|Native|Public|BlueprintCallable) // @ game+0x132c520
	struct FSlateBrush GetBrushForKeyInternal(struct FKey InKey); // Function Tiger.TigerRichTextBlockIconDecorator.GetBrushForKeyInternal // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	struct FSlateBrush GetBrushForAxisInternal(struct FName InName); // Function Tiger.TigerRichTextBlockIconDecorator.GetBrushForAxisInternal // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	struct FSlateBrush GetBrushForActionInternal(struct FName InName); // Function Tiger.TigerRichTextBlockIconDecorator.GetBrushForActionInternal // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerRichTextBlockDecorator
// Size: 0x30 (Inherited: 0x28)
struct UTigerRichTextBlockDecorator : UObject {
	bool bReveal; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t RevealedIndex; // 0x2c(0x04)
};

// Class Tiger.TigerRoofSystem
// Size: 0x238 (Inherited: 0x228)
struct ATigerRoofSystem : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	float Width; // 0x230(0x04)
	float Depth; // 0x234(0x04)

	void OnUpgrade(int32_t InVersion); // Function Tiger.TigerRoofSystem.OnUpgrade // (Native|Event|Protected|BlueprintEvent) // @ game+0x124bd80
};

// Class Tiger.TigerRoofSystemFreeTransformable
// Size: 0x248 (Inherited: 0x228)
struct ATigerRoofSystemFreeTransformable : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USplineComponent* SplineComponent; // 0x230(0x08)
	struct TArray<struct FTigerRoofSystemFreeTransformableCorner> Corners; // 0x238(0x10)

	void OnUpgrade(int32_t InVersion); // Function Tiger.TigerRoofSystemFreeTransformable.OnUpgrade // (Native|Event|Protected|BlueprintEvent) // @ game+0x124bd80
};

// Class Tiger.TigerSafeHavenVolume
// Size: 0x268 (Inherited: 0x260)
struct ATigerSafeHavenVolume : ATriggerVolume {
	struct ATigerHaven* AssignedHaven; // 0x260(0x08)
};

// Class Tiger.TigerSafeZoneSettings
// Size: 0x48 (Inherited: 0x38)
struct UTigerSafeZoneSettings : UDeveloperSettings {
	struct FVector2D SafeZoneRelativeScreenSpaceDimensions; // 0x38(0x08)
	float UIZoneAspectRatio; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerSafeZoneWidget
// Size: 0x138 (Inherited: 0x138)
struct UTigerSafeZoneWidget : USafeZone {
};

// Class Tiger.TigerSaveGame
// Size: 0x30 (Inherited: 0x28)
struct UTigerSaveGame : USaveGame {
	struct FTigerPersistentCharacterID LastUsedCharacterId; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Tiger.TigerItemPreviewAsset
// Size: 0x40 (Inherited: 0x30)
struct UTigerItemPreviewAsset : UDataAsset {
	struct TArray<struct FTigerItemPreviewData> ItemPreviews; // 0x30(0x10)
};

// Class Tiger.TigerSubLevelList
// Size: 0x40 (Inherited: 0x30)
struct UTigerSubLevelList : UDataAsset {
	struct TArray<struct FTigerSubLevelBackground> SubLevels; // 0x30(0x10)
};

// Class Tiger.TigerScreenshotMapGenerationSettings
// Size: 0x68 (Inherited: 0x38)
struct UTigerScreenshotMapGenerationSettings : UDeveloperSettings {
	float Width; // 0x38(0x04)
	int32_t Resolution; // 0x3c(0x04)
	struct FVector2D Start; // 0x40(0x08)
	struct FVector2D End; // 0x48(0x08)
	float Height; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct FTigerPostProcessSettingsSetup PostProcessSetup; // 0x58(0x10)
};

// Class Tiger.TigerScreenshotMapBuilder
// Size: 0x260 (Inherited: 0x228)
struct ATigerScreenshotMapBuilder : AActor {
	struct ATigerPlayerController* PlayerController; // 0x228(0x08)
	struct UCameraComponent* CameraComponent; // 0x230(0x08)
	char pad_238[0x28]; // 0x238(0x28)

	void TakeScreenshot(); // Function Tiger.TigerScreenshotMapBuilder.TakeScreenshot // (Final|Native|Private) // @ game+0x132f3d0
	void HandleScreenShotTaken(); // Function Tiger.TigerScreenshotMapBuilder.HandleScreenShotTaken // (Final|Native|Private) // @ game+0x132f050
};

// Class Tiger.TigerScreenTransition
// Size: 0x2c0 (Inherited: 0x280)
struct UTigerScreenTransition : UTigerWidget {
	struct UCurveFloat* ScreenTransitionCurveIn; // 0x280(0x08)
	struct UCurveFloat* ScreenTransitionCurveOut; // 0x288(0x08)
	struct FMulticastInlineDelegate OnTransitionInFinished; // 0x290(0x10)
	struct FMulticastInlineDelegate OnTransitionOutFinished; // 0x2a0(0x10)
	enum class EScreenTransitionState CurrentTransitionState; // 0x2b0(0x01)
	char pad_2B1[0xf]; // 0x2b1(0x0f)

	float GetCurrentTransitionProgress(); // Function Tiger.TigerScreenTransition.GetCurrentTransitionProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1332ea0
	void BeginTransition(); // Function Tiger.TigerScreenTransition.BeginTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x1332c60
};

// Class Tiger.TigerScriptedTexture
// Size: 0x2f8 (Inherited: 0x280)
struct UTigerScriptedTexture : UTigerWidget {
	struct UTextureRenderTarget2D* ScriptedTexture; // 0x280(0x08)
	char pad_288[0x70]; // 0x288(0x70)
};

// Class Tiger.TigerClientSeasonalRewardTier
// Size: 0x48 (Inherited: 0x28)
struct UTigerClientSeasonalRewardTier : UObject {
	struct TArray<struct FTigerItemId> FreeRewardIds; // 0x28(0x10)
	struct TArray<struct FTigerItemId> PremiumRewardIds; // 0x38(0x10)

	bool IsDoubleUISize(); // Function Tiger.TigerClientSeasonalRewardTier.IsDoubleUISize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1333160
};

// Class Tiger.TigerClientSeasonalRewardCollection
// Size: 0x40 (Inherited: 0x28)
struct UTigerClientSeasonalRewardCollection : UObject {
	struct TArray<struct UTigerClientSeasonalRewardTier*> Tiers; // 0x28(0x10)
	int32_t BattlePassPrice; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Tiger.TigerSeasonConfigAsset
// Size: 0x288 (Inherited: 0x30)
struct UTigerSeasonConfigAsset : UDataAsset {
	struct FTigerSeasonConfig Config; // 0x30(0x258)
};

// Class Tiger.TigerServerPushConnectionManager
// Size: 0xa8 (Inherited: 0xa8)
struct UTigerServerPushConnectionManager : UTigerPushConnectionManager {
};

// Class Tiger.TigerSessionSeeker
// Size: 0x198 (Inherited: 0x28)
struct UTigerSessionSeeker : UObject {
	struct FMulticastInlineDelegate OnSessionFound; // 0x28(0x10)
	struct FMulticastInlineDelegate OnCouldNotFindSession; // 0x38(0x10)
	struct FMulticastInlineDelegate OnJoiningSession; // 0x48(0x10)
	struct FMulticastInlineDelegate OnCouldNotJoinSession; // 0x58(0x10)
	struct UObject* WorldContextObject; // 0x68(0x08)
	struct UTigerGameInstance* GameInstance; // 0x70(0x08)
	struct ATigerPlayerController* PlayerController; // 0x78(0x08)
	struct FTigerBpFindSessionSelectedSession SelectedSession; // 0x80(0x110)
	enum class ETigerSessionSearchStatus Status; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)

	void SessionFound(struct FTigerBpFindSessionSelectedSession InSelectedSession); // Function Tiger.TigerSessionSeeker.SessionFound // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x13336f0
	void SeekBPImpl(); // Function Tiger.TigerSessionSeeker.SeekBPImpl // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Seek(); // Function Tiger.TigerSessionSeeker.Seek // (Final|Native|Public|BlueprintCallable) // @ game+0x13336d0
	void OnSessionFoundDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnSessionFoundDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnPartySessionAvailable(); // Function Tiger.TigerSessionSeeker.OnPartySessionAvailable // (Final|Native|Protected) // @ game+0x13336b0
	void OnLeftParty(struct FTigerParty InParty); // Function Tiger.TigerSessionSeeker.OnLeftParty // (Final|Native|Protected|HasOutParms) // @ game+0x13332c0
	void OnLeaderChanged(); // Function Tiger.TigerSessionSeeker.OnLeaderChanged // (Final|Native|Protected) // @ game+0x13332a0
	void OnJoiningSessionDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnJoiningSessionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnCreateGameSessionFailed(); // Function Tiger.TigerSessionSeeker.OnCreateGameSessionFailed // (Final|Native|Protected) // @ game+0x1332cc0
	void OnCouldNotJoinSessionDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnCouldNotJoinSessionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnCouldNotFindSessionDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnCouldNotFindSessionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void JoiningSession(); // Function Tiger.TigerSessionSeeker.JoiningSession // (Final|Native|Protected|BlueprintCallable) // @ game+0x13331b0
	void JoinBPImpl(); // Function Tiger.TigerSessionSeeker.JoinBPImpl // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Join(); // Function Tiger.TigerSessionSeeker.Join // (Final|Native|Public|BlueprintCallable) // @ game+0x1333190
	void Init(struct UObject* InWorldContextObject, struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerSessionSeeker.Init // (Final|Native|Protected|BlueprintCallable) // @ game+0x1332f60
	struct UTigerSessionSeeker* CreateSessionSeeker(struct UObject* InWorldContextObject, struct UTigerSessionSeeker* InSessionSeekerClass, struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerSessionSeeker.CreateSessionSeeker // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1332d00
	void CouldNotJoinSession(); // Function Tiger.TigerSessionSeeker.CouldNotJoinSession // (Final|Native|Protected|BlueprintCallable) // @ game+0x1332ce0
	void CouldNotFindSession(); // Function Tiger.TigerSessionSeeker.CouldNotFindSession // (Final|Native|Protected|BlueprintCallable) // @ game+0x1332cc0
};

// Class Tiger.TigerSessionService
// Size: 0x40 (Inherited: 0x28)
struct UTigerSessionService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerSessionSettings
// Size: 0x50 (Inherited: 0x38)
struct UTigerSessionSettings : UDeveloperSettings {
	bool bFindOnlyLocalSessions; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	int32_t GroupSize; // 0x3c(0x04)
	bool bEnableFakeMatchmakingDelayInElysium; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	int32_t FakeMatchmakingDelayJoinWindowSeconds; // 0x44(0x04)
	bool bEnableCloudSessions; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Tiger.TigerShacklesMine
// Size: 0x260 (Inherited: 0x228)
struct ATigerShacklesMine : AActor {
	struct UTigerBuff* ThornsBuff; // 0x228(0x08)
	struct UTigerBuff* ShacklesBuff; // 0x230(0x08)
	struct USceneComponent* Root; // 0x238(0x08)
	struct USceneComponent* IndicatorAnchor; // 0x240(0x08)
	char pad_248[0x18]; // 0x248(0x18)

	void OnShackleMineTriggered(); // Function Tiger.TigerShacklesMine.OnShackleMineTriggered // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnOverlapBegin(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerShacklesMine.OnOverlapBegin // (Final|Native|Private) // @ game+0x13333b0
};

// Class Tiger.TigerSharedMouseCursor
// Size: 0x38 (Inherited: 0x28)
struct UTigerSharedMouseCursor : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Tiger.TigerSharedVendorUI
// Size: 0x2e8 (Inherited: 0x280)
struct UTigerSharedVendorUI : UTigerWidget {
	struct FMulticastInlineDelegate OnShortcutHeaderClicked; // 0x280(0x10)
	struct FMulticastInlineDelegate OnMainHeaderClicked; // 0x290(0x10)
	struct TWeakObjectPtr<struct ATigerPaperDoll> VendorPaperDoll; // 0x2a0(0x08)
	struct ATigerPaperDoll* PaperDollClass; // 0x2a8(0x08)
	char pad_2B0[0x8]; // 0x2b0(0x08)
	struct FText VendorName; // 0x2b8(0x18)
	struct FText VendorPurpose; // 0x2d0(0x18)

	void TabMenuRightGamepad(); // Function Tiger.TigerSharedVendorUI.TabMenuRightGamepad // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void TabMenuLeftGamepad(); // Function Tiger.TigerSharedVendorUI.TabMenuLeftGamepad // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void SwitchToDialogueWindow(); // Function Tiger.TigerSharedVendorUI.SwitchToDialogueWindow // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void SwitchToBlockingDialogueWindow(); // Function Tiger.TigerSharedVendorUI.SwitchToBlockingDialogueWindow // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void SpawnPaperDoll(); // Function Tiger.TigerSharedVendorUI.SpawnPaperDoll // (Final|Native|Public|BlueprintCallable) // @ game+0x1333930
	void OnHeaderTabClicked__DelegateSignature(); // DelegateFunction Tiger.TigerSharedVendorUI.OnHeaderTabClicked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
};

// Class Tiger.TigerSharkDeathTriggerVolume
// Size: 0x298 (Inherited: 0x260)
struct ATigerSharkDeathTriggerVolume : ATriggerVolume {
	struct AActor* Shark; // 0x260(0x08)
	struct UAkAudioEvent* SharkEatingAudioEvent; // 0x268(0x08)
	struct UAkAudioEvent* WaterSplashAudioEvent; // 0x270(0x08)
	struct UAkAudioEvent* DeathScreamAudioEvent; // 0x278(0x08)
	struct FRotator SharkRotation; // 0x280(0x0c)
	struct FVector SharkSpawnLocationOffset; // 0x28c(0x0c)

	void OnBeginOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerSharkDeathTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x13331d0
	void HandleSharkVictim(struct ATigerCharacter* InVictim); // Function Tiger.TigerSharkDeathTriggerVolume.HandleSharkVictim // (Final|Native|Private) // @ game+0x1332ed0
};

// Class Tiger.TigerSharknetAgent
// Size: 0x128 (Inherited: 0x50)
struct UTigerSharknetAgent : UTigerDsBackendAgent {
	struct FString DsVersion; // 0x50(0x10)
	char pad_60[0xa8]; // 0x60(0xa8)
	float MaxRegisterRetryDelaySeconds; // 0x108(0x04)
	char pad_10C[0x1c]; // 0x10c(0x1c)
};

// Class Tiger.TigerShockwaveWall
// Size: 0x2c0 (Inherited: 0x228)
struct ATigerShockwaveWall : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct UBoxComponent* EffectBoxComponent; // 0x230(0x08)
	struct FTigerShockwaveWallData ShockwaveData; // 0x238(0x60)
	struct FVector TargetLocation; // 0x298(0x0c)
	struct TWeakObjectPtr<struct ATigerPlayer> TigerInstigator; // 0x2a4(0x08)
	float CurrentLifetime; // 0x2ac(0x04)
	int32_t PowerLevel; // 0x2b0(0x04)
	char pad_2B4[0xc]; // 0x2b4(0x0c)

	struct FVector UpdateEffectCollisionBoxExtents(); // Function Tiger.TigerShockwaveWall.UpdateEffectCollisionBoxExtents // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1333950
	void OnShockwaveWallDestroyed(enum class EShockwaveWallDestroyReason InDestroyReason); // Function Tiger.TigerShockwaveWall.OnShockwaveWallDestroyed // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnOverlapBeginEffect(struct UPrimitiveComponent* InOverlappedComp, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult InSweepResult); // Function Tiger.TigerShockwaveWall.OnOverlapBeginEffect // (Final|Native|Protected|HasOutParms) // @ game+0x1333480
	void OnCharacterHit(struct ATigerCharacter* InCharacterHit); // Function Tiger.TigerShockwaveWall.OnCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Multicast_OnCharacterHit(struct ATigerCharacter* InCharacterHit); // Function Tiger.TigerShockwaveWall.Multicast_OnCharacterHit // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12a57b0
	void InitShockwaveData(struct FTigerShockwaveWallData OutShockwaveData); // Function Tiger.TigerShockwaveWall.InitShockwaveData // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1333030
	float DetermineDamageOnEnemy(struct ATigerCharacter* InEnemyCharacter); // Function Tiger.TigerShockwaveWall.DetermineDamageOnEnemy // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1332e00
	float CalculateSpeed(); // Function Tiger.TigerShockwaveWall.CalculateSpeed // (Native|Event|Protected|BlueprintEvent) // @ game+0x1332c80
	struct FVector CalculateKnockbackVector(struct ATigerCharacter* InHitEnemyCharacter); // Function Tiger.TigerShockwaveWall.CalculateKnockbackVector // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerSHPBCoordinator
// Size: 0x120 (Inherited: 0xb0)
struct UTigerSHPBCoordinator : UActorComponent {
	struct UTigerNPCAsset* SHPBNPCAsset; // 0xb0(0x08)
	struct ATigerSHPBMarker* SHPBWorldMarker; // 0xb8(0x08)
	struct FName WaypointKeyName; // 0xc0(0x08)
	struct FName WaypointIndexKeyName; // 0xc8(0x08)
	bool bIsEnabled; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct TArray<struct ATigerNPC*> ActiveSHPB; // 0xd8(0x10)
	struct FTigerSHPBSettings Settings; // 0xe8(0x1c)
	char pad_104[0x4]; // 0x104(0x04)
	struct ATigerNPCInstantSpawner* SHPBSpawner; // 0x108(0x08)
	struct ATigerMatchGameMode* MatchGameMode; // 0x110(0x08)
	struct ATigerMatchGameState* MatchGameState; // 0x118(0x08)

	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerSHPBCoordinator.MatchStateChanged // (Final|Native|Private) // @ game+0x1337b30
};

// Class Tiger.TigerWorldMarker
// Size: 0x248 (Inherited: 0x228)
struct ATigerWorldMarker : AActor {
	struct UUserWidget* MarkerClass; // 0x228(0x08)
	bool bAutoCreateMapMarker; // 0x230(0x01)
	bool bWaitForMapData; // 0x231(0x01)
	char pad_232[0x6]; // 0x232(0x06)
	struct UTigerMapMarkerProxy* MapMarkerProxy; // 0x238(0x08)
	struct USceneComponent* MarkerRoot; // 0x240(0x08)

	bool TryToScheduleCreation(); // Function Tiger.TigerWorldMarker.TryToScheduleCreation // (Native|Event|Protected|BlueprintEvent) // @ game+0x1371e70
	void OnPlayerControllerBeginPlay(); // Function Tiger.TigerWorldMarker.OnPlayerControllerBeginPlay // (Final|Native|Protected) // @ game+0x1371c30
	bool HasMapMarker(); // Function Tiger.TigerWorldMarker.HasMapMarker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1371760
	void CreateMapMarker(); // Function Tiger.TigerWorldMarker.CreateMapMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x1371200
	bool CanBeCreated(); // Function Tiger.TigerWorldMarker.CanBeCreated // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1371130
};

// Class Tiger.TigerSHPBMarker
// Size: 0x2b0 (Inherited: 0x248)
struct ATigerSHPBMarker : ATigerWorldMarker {
	struct ATigerNPC* FollowingNPC; // 0x248(0x08)
	struct FVector NPCLocation; // 0x250(0x0c)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct TSet<struct TWeakObjectPtr<struct AActor>> PerceivedBy; // 0x260(0x50)

	void OnRep_NPCLocation(); // Function Tiger.TigerSHPBMarker.OnRep_NPCLocation // (Final|Native|Private) // @ game+0x1337cb0
};

// Class Tiger.TigerGeneratedStaticMeshActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerGeneratedStaticMeshActor : AActor {
	struct UStaticMeshComponent* MeshComponent; // 0x228(0x08)
};

// Class Tiger.TigerSidewalkSpline
// Size: 0x250 (Inherited: 0x240)
struct ATigerSidewalkSpline : ATigerRebuildableActor {
	struct TArray<struct UPrimitiveComponent*> OrderedComponentsToMerge; // 0x240(0x10)
};

// Class Tiger.TigerSignificanceManager
// Size: 0x140 (Inherited: 0x120)
struct UTigerSignificanceManager : USignificanceManager {
	char pad_120[0x20]; // 0x120(0x20)
};

// Class Tiger.TigerSignificanceSettings
// Size: 0xb8 (Inherited: 0x38)
struct UTigerSignificanceSettings : UDeveloperSettings {
	struct FTigerSignificanceBudget Budgets[0x2]; // 0x38(0x80)
};

// Class Tiger.TigerSingleChildActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerSingleChildActor : AActor {
	struct AActor* ChildActor; // 0x228(0x08)

	void SetChildActorClass(struct AActor* ChildActorClass); // Function Tiger.TigerSingleChildActor.SetChildActorClass // (Final|Native|Public|BlueprintCallable) // @ game+0x1337e20
};

// Class Tiger.TigerSingleItemSpawner
// Size: 0x260 (Inherited: 0x258)
struct ATigerSingleItemSpawner : ATigerLootSpawner {
	enum class ETigerTelemetryItemSourceID TelemetryIDSource; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)

	struct FTransform GetSecondaryItemTransform(); // Function Tiger.TigerSingleItemSpawner.GetSecondaryItemTransform // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x1337960
	struct FTransform GetPrimaryItemTransform(); // Function Tiger.TigerSingleItemSpawner.GetPrimaryItemTransform // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x1337960
};

// Class Tiger.TigerSocialSubscreenUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerSocialSubscreenUI : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void Open(); // Function Tiger.TigerSocialSubscreenUI.Open // (Native|Public|BlueprintCallable) // @ game+0x12d2210
	void OnOpen(); // Function Tiger.TigerSocialSubscreenUI.OnOpen // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnClose(); // Function Tiger.TigerSocialSubscreenUI.OnClose // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsOpen(); // Function Tiger.TigerSocialSubscreenUI.IsOpen // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d1ea0
	void Close(); // Function Tiger.TigerSocialSubscreenUI.Close // (Native|Public|BlueprintCallable) // @ game+0x12c9fd0
};

// Class Tiger.TigerSocialElysiumUI
// Size: 0x288 (Inherited: 0x288)
struct UTigerSocialElysiumUI : UTigerSocialSubscreenUI {

	struct TArray<struct FTigerPlayerStateFriendPair> GetSortedPlayerList(); // Function Tiger.TigerSocialElysiumUI.GetSortedPlayerList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13379f0
};

// Class Tiger.TigerSocialFriendInviteListUI
// Size: 0x2a8 (Inherited: 0x280)
struct UTigerSocialFriendInviteListUI : UTigerWidget {
	char pad_280[0x28]; // 0x280(0x28)

	void StopMonitoring(); // Function Tiger.TigerSocialFriendInviteListUI.StopMonitoring // (Final|Native|Public|BlueprintCallable) // @ game+0x1337fd0
	void PopulateListAndMonitorChanges(); // Function Tiger.TigerSocialFriendInviteListUI.PopulateListAndMonitorChanges // (Final|Native|Public|BlueprintCallable) // @ game+0x1337d60
	void OnPopulateInvites(struct TArray<struct UTigerFriendInvite*> InFriendInvites); // Function Tiger.TigerSocialFriendInviteListUI.OnPopulateInvites // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnInviteRemoved(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerSocialFriendInviteListUI.OnInviteRemoved // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnInviteReceived(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerSocialFriendInviteListUI.OnInviteReceived // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnFriendAdded(struct UTigerFriend* InNewFriend); // Function Tiger.TigerSocialFriendInviteListUI.OnFriendAdded // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerSocialFriendsUI
// Size: 0x2a8 (Inherited: 0x288)
struct UTigerSocialFriendsUI : UTigerSocialSubscreenUI {
	char pad_288[0x20]; // 0x288(0x20)

	void OnFriendsLoaded(); // Function Tiger.TigerSocialFriendsUI.OnFriendsLoaded // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFriendServiceStatusChanged(enum class ETigerOnlineServiceStatus InServiceStatus); // Function Tiger.TigerSocialFriendsUI.OnFriendServiceStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFriendRemoved(struct UTigerFriend* InLostFriend); // Function Tiger.TigerSocialFriendsUI.OnFriendRemoved // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnFriendAdded(struct UTigerFriend* InNewFriend); // Function Tiger.TigerSocialFriendsUI.OnFriendAdded // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerSocialInboxUI
// Size: 0x290 (Inherited: 0x288)
struct UTigerSocialInboxUI : UTigerSocialSubscreenUI {
	char pad_288[0x8]; // 0x288(0x08)

	void OnFriendServiceStatusChanged(enum class ETigerOnlineServiceStatus InServiceStatus); // Function Tiger.TigerSocialInboxUI.OnFriendServiceStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerSocialPartyInviteListUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerSocialPartyInviteListUI : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void StopMonitoring(); // Function Tiger.TigerSocialPartyInviteListUI.StopMonitoring // (Final|Native|Public|BlueprintCallable) // @ game+0x1337ff0
	void OnInviteRemoved(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerSocialPartyInviteListUI.OnInviteRemoved // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnInviteReceived(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerSocialPartyInviteListUI.OnInviteReceived // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void MonitorInvites(); // Function Tiger.TigerSocialPartyInviteListUI.MonitorInvites // (Final|Native|Public|BlueprintCallable) // @ game+0x1337c00
};

// Class Tiger.TigerSocialUI
// Size: 0x3b8 (Inherited: 0x3b0)
struct UTigerSocialUI : UTigerSceneBackgroundUI {
	struct UTigerSocialSubscreenUI* CurrentSubscreen; // 0x3b0(0x08)

	void OpenSubscreen(struct UTigerSocialSubscreenUI* InSubscreen); // Function Tiger.TigerSocialUI.OpenSubscreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1337cd0
	void OnSubscreenOpen(struct UTigerSocialSubscreenUI* InSubscreen); // Function Tiger.TigerSocialUI.OnSubscreenOpen // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void CloseCurrentSubscreen(); // Function Tiger.TigerSocialUI.CloseCurrentSubscreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1337920
};

// Class Tiger.TigerSpawnMechanic
// Size: 0x28 (Inherited: 0x28)
struct UTigerSpawnMechanic : UObject {
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleBase
// Size: 0x50 (Inherited: 0x28)
struct UTigerSpawnMechanicBattleRoyaleBase : UTigerSpawnMechanic {
	struct ATigerMatchGameMode* GameMode; // 0x28(0x08)
	struct TArray<struct AActor*> AllPlayerStarts; // 0x30(0x10)
	struct TArray<struct AActor*> UnusedPlayerStarts; // 0x40(0x10)
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleMapSelection
// Size: 0x80 (Inherited: 0x50)
struct UTigerSpawnMechanicBattleRoyaleMapSelection : UTigerSpawnMechanicBattleRoyaleBase {
	struct TArray<struct FTigerDesiredSpawnLocation> DesiredSpawnLocations; // 0x50(0x10)
	char pad_60[0x20]; // 0x60(0x20)

	void OnPreMatchStateChanged(struct FTigerPreMatchStateInfo InNewInfo); // Function Tiger.TigerSpawnMechanicBattleRoyaleMapSelection.OnPreMatchStateChanged // (Final|Native|Public) // @ game+0x1337c20
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleRandomStart
// Size: 0x118 (Inherited: 0x50)
struct UTigerSpawnMechanicBattleRoyaleRandomStart : UTigerSpawnMechanicBattleRoyaleBase {
	struct ATigerWorldMarker* TestSpawnPointsMapMarkerClass; // 0x50(0x08)
	struct TArray<struct FVector2D> GroupSpawnLocations; // 0x58(0x10)
	char pad_68[0x50]; // 0x68(0x50)
	struct TMap<struct ATigerPlayerState*, struct FTigerGroupId> FakeGroupIds; // 0xb8(0x50)
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x108(0x08)
	float MinimumDistanceBetweenGroups; // 0x110(0x04)
	float DistanceBetweenGroupsFalloffLength; // 0x114(0x04)
};

// Class Tiger.TigerSpawnMechanicBloodVein
// Size: 0x30 (Inherited: 0x28)
struct UTigerSpawnMechanicBloodVein : UTigerSpawnMechanic {
	struct ATigerBloodVein* StartBloodVein; // 0x28(0x08)
};

// Class Tiger.TigerSpawnMechanicPlayInEditor
// Size: 0x30 (Inherited: 0x28)
struct UTigerSpawnMechanicPlayInEditor : UTigerSpawnMechanic {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Tiger.TigerSpawnMechanicRandomPlayerStart
// Size: 0x50 (Inherited: 0x28)
struct UTigerSpawnMechanicRandomPlayerStart : UTigerSpawnMechanic {
	struct ATigerGameMode* GameMode; // 0x28(0x08)
	struct TArray<struct AActor*> AllPlayerStarts; // 0x30(0x10)
	struct TArray<struct AActor*> UnusedPlayerStarts; // 0x40(0x10)
};

// Class Tiger.TigerSpawnMechanicTutorial
// Size: 0x50 (Inherited: 0x50)
struct UTigerSpawnMechanicTutorial : UTigerSpawnMechanicRandomPlayerStart {
};

// Class Tiger.TigerSpawnPointSelectionUi
// Size: 0x330 (Inherited: 0x290)
struct UTigerSpawnPointSelectionUi : UTigerMenuWidget {
	struct FVector2D CurrentCanvasSize; // 0x290(0x08)
	int32_t PreGameStateEndTime; // 0x298(0x04)
	enum class ETigerPreMatchState CurrentPreMatchState; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	struct TArray<struct FTigerClientSpawnLocationInfo> CurrentSpawnSelectionInfo; // 0x2a0(0x10)
	struct TMap<int32_t, struct UTigerWidget*> GroupSpawnLocationWidgets; // 0x2b0(0x50)
	struct UWidget* CanvasSizeWidget; // 0x300(0x08)
	char pad_308[0x14]; // 0x308(0x14)
	bool bAllowOutOfBoundsSelection; // 0x31c(0x01)
	char pad_31D[0x3]; // 0x31d(0x03)
	struct TArray<struct UTigerWidget*> EnemySpawnLocationWidgets; // 0x320(0x10)

	void UpdateWidgetLocation(struct UTigerWidget* InWidget, struct FVector InLocation); // Function Tiger.TigerSpawnPointSelectionUi.UpdateWidgetLocation // (Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void SetPreMatchState(struct FTigerPreMatchStateInfo InPreMatchState); // Function Tiger.TigerSpawnPointSelectionUi.SetPreMatchState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	bool RequestNewSpawnLocation(struct FVector InDesiredSpawnLocation); // Function Tiger.TigerSpawnPointSelectionUi.RequestNewSpawnLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1337d80
	void OnNewSpawnAssignedFromServerToLocalPlayer(struct FVector2D InNewLocation); // Function Tiger.TigerSpawnPointSelectionUi.OnNewSpawnAssignedFromServerToLocalPlayer // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	bool IsLocationOutOfBounds(struct FVector InLocation); // Function Tiger.TigerSpawnPointSelectionUi.IsLocationOutOfBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1337a90
	int32_t GetRemainingStateTime(); // Function Tiger.TigerSpawnPointSelectionUi.GetRemainingStateTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13379c0
	struct UTigerWidget* CreateGroupMarkerWidget(struct FTigerClientSpawnLocationInfo InSpawnLocationInfo); // Function Tiger.TigerSpawnPointSelectionUi.CreateGroupMarkerWidget // (Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	struct UTigerWidget* CreateEnemyMarkerWidget(); // Function Tiger.TigerSpawnPointSelectionUi.CreateEnemyMarkerWidget // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerSpectateCameraBehavior
// Size: 0x178 (Inherited: 0x128)
struct UTigerSpectateCameraBehavior : UTigerActiveCameraBehavior {
	float FollowCameraDelay; // 0x128(0x04)
	float CameraFollowSpeedMultiplier; // 0x12c(0x04)
	float ConstantAddedCameraFollowSpeed; // 0x130(0x04)
	float NewFollowPointOffsetMultiplier; // 0x134(0x04)
	struct ATigerSpectatorPawn* SpectatorPawn; // 0x138(0x08)
	char pad_140[0x38]; // 0x140(0x38)
};

// Class Tiger.TigerSpectatorPawn
// Size: 0x308 (Inherited: 0x2b0)
struct ATigerSpectatorPawn : ASpectatorPawn {
	struct UTigerSpringArmComponent* SpringArm; // 0x2b0(0x08)
	struct FMulticastInlineDelegate OnSpectateeChanged; // 0x2b8(0x10)
	struct FMulticastInlineDelegate OnEnoughStreamingDoneToSpectate; // 0x2c8(0x10)
	struct ATigerPlayerState* CurrentSpectatee; // 0x2d8(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> CurrentSpectateePlayer; // 0x2e0(0x08)
	bool bIsWaitingForStreaming; // 0x2e8(0x01)
	char pad_2E9[0x3]; // 0x2e9(0x03)
	float LastSpectateeSwitchTime; // 0x2ec(0x04)
	float MaxLoadingScreenTime; // 0x2f0(0x04)
	char pad_2F4[0x14]; // 0x2f4(0x14)

	void Server_SpectateAdjacentGroupMember(enum class ETigerSelectNewSpectatorDirection InDirection); // Function Tiger.TigerSpectatorPawn.Server_SpectateAdjacentGroupMember // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x133b940
	void OnStreamingCellLoaded(struct UTigerWorldCompositionCellComponent* InCell); // Function Tiger.TigerSpectatorPawn.OnStreamingCellLoaded // (Final|Native|Protected) // @ game+0x133b890
	void OnSpectateeChanged__DelegateSignature(struct ATigerPlayerState* InSpectateePlayerState); // DelegateFunction Tiger.TigerSpectatorPawn.OnSpectateeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnRep_CurrentSpectatee(); // Function Tiger.TigerSpectatorPawn.OnRep_CurrentSpectatee // (Final|Native|Public) // @ game+0x133b870
	void OnEnoughStreamingDoneToSpectate__DelegateSignature(); // DelegateFunction Tiger.TigerSpectatorPawn.OnEnoughStreamingDoneToSpectate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	struct ATigerPlayer* GetCurrentSpectatedPlayer(); // Function Tiger.TigerSpectatorPawn.GetCurrentSpectatedPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x133b810
};

// Class Tiger.TigerSplatmapSettings
// Size: 0xa0 (Inherited: 0x38)
struct UTigerSplatmapSettings : USharkLocalDeveloperSettings {
	bool bRenderSplatmap; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TSoftObjectPtr<struct UTexture2D> DefaultStamp; // 0x40(0x28)
	float TimeBetweenAutoExportInSeconds; // 0x68(0x04)
	bool bUseCtrlToDraw; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct TSoftObjectPtr<struct UMaterialInterface> DrawMaterialMaster; // 0x70(0x28)
	struct FName DrawMaterialTextureParamName; // 0x98(0x08)
};

// Class Tiger.TigerSplatmapPaintingSettings
// Size: 0x48 (Inherited: 0x28)
struct UTigerSplatmapPaintingSettings : UObject {
	struct TWeakObjectPtr<struct UTexture2D> Stamp; // 0x28(0x08)
	struct TArray<bool> Channels; // 0x30(0x10)
	float Opacity; // 0x40(0x04)
	float StampWorldSize; // 0x44(0x04)
};

// Class Tiger.TigerSplatmapGenerationSettings
// Size: 0x48 (Inherited: 0x28)
struct UTigerSplatmapGenerationSettings : UObject {
	float CellBounds; // 0x28(0x04)
	struct FIntPoint CellCount; // 0x2c(0x08)
	struct FIntPoint CellTextureDimensions; // 0x34(0x08)
	struct FVector CenterLocation; // 0x3c(0x0c)
};

// Class Tiger.TigerSplatmap
// Size: 0x290 (Inherited: 0x228)
struct ATigerSplatmap : AActor {
	struct UMaterialParameterCollection* SplatmapParameterCollection; // 0x228(0x08)
	struct UTextureRenderTarget2D* SplatTextureRenderTarget; // 0x230(0x08)
	struct UMaterial* SplatmapCellReadMaterial; // 0x238(0x08)
	struct UMaterialInstanceDynamic* SplatmapCellReadMaterialInstance; // 0x240(0x08)
	float BoundsSize; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct UTigerSplatmapGenerationSettings* CurrentGenerationSettings; // 0x250(0x08)
	struct TArray<struct TWeakObjectPtr<struct ATigerSplatmapCell>> SplatmapCells; // 0x258(0x10)
	struct USceneComponent* Root; // 0x268(0x08)
	struct AActor* CellOwner; // 0x270(0x08)
	float TickInterval; // 0x278(0x04)
	float MinRerenderDistance; // 0x27c(0x04)
	char pad_280[0x10]; // 0x280(0x10)
};

// Class Tiger.TigerSplatmapCell
// Size: 0x240 (Inherited: 0x228)
struct ATigerSplatmapCell : AActor {
	struct UTexture2D* TextureResource; // 0x228(0x08)
	struct UMaterialInterface* DrawMaterial; // 0x230(0x08)
	float BoundsSize; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
};

// Class Tiger.TigerSpotLight
// Size: 0x240 (Inherited: 0x238)
struct ATigerSpotLight : ALight {
	struct UTigerSpotLightComponent* SpotLightComponent; // 0x238(0x08)
};

// Class Tiger.TigerSpotLightComponent
// Size: 0x370 (Inherited: 0x370)
struct UTigerSpotLightComponent : USpotLightComponent {
};

// Class Tiger.TigerSpringArmComponent
// Size: 0x370 (Inherited: 0x280)
struct UTigerSpringArmComponent : USpringArmComponent {
	char pad_280[0x40]; // 0x280(0x40)
	float HideCharacterBelowLength; // 0x2c0(0x04)
	float SpringArmShortenSpeed; // 0x2c4(0x04)
	float SpringArmLengthenSpeed; // 0x2c8(0x04)
	float StepUpOffsetLerpSpeed; // 0x2cc(0x04)
	char pad_2D0[0x70]; // 0x2d0(0x70)
	struct TArray<struct TWeakObjectPtr<struct UStaticMeshComponent>> CurrentNearObjectFadeToggledObjects; // 0x340(0x10)
	char pad_350[0x20]; // 0x350(0x20)

	void SetCameraComponentPelvisOffset(struct FVector InOffset); // Function Tiger.TigerSpringArmComponent.SetCameraComponentPelvisOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x133b9f0
	void ResetAttachment(); // Function Tiger.TigerSpringArmComponent.ResetAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x133b920
	void AttachToOtherComponent(struct USceneComponent* InAnotherComponent); // Function Tiger.TigerSpringArmComponent.AttachToOtherComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x133b680
};

// Class Tiger.TigerSprintConfig
// Size: 0x118 (Inherited: 0x28)
struct UTigerSprintConfig : UObject {
	float MinimumForwardInput; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	float SprintDelay; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct UTigerCharacterMovementComponent* MoveComp; // 0x38(0x08)
	char pad_40[0xc]; // 0x40(0x0c)
	float LedgeGrabReductionMultiplier; // 0x4c(0x04)
	float MeleeAttackReductionMultiplier[0x8]; // 0x50(0x20)
	float DisciplineUseReductionMultiplier[0x20]; // 0x70(0x80)
	struct TArray<float> DodgeReductionMultiplier; // 0xf0(0x10)
	float JumpReductionMultiplier; // 0x100(0x04)
	float DoubleJumpReductionMultiplier; // 0x104(0x04)
	float SprintBuildUpDecayDuration; // 0x108(0x04)
	float SprintBuildUpDecayDelay; // 0x10c(0x04)
	struct UCurveFloat* SprintBuildUpCurve; // 0x110(0x08)

	void OnSprintDelayCompleted(struct ATigerPlayer* InPlayer); // Function Tiger.TigerSprintConfig.OnSprintDelayCompleted // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerStaggerComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerStaggerComponent : UActorComponent {
	struct UAnimMontage* CurrentStaggerAnimation; // 0xb0(0x08)
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Tiger.TigerStaticMeshUserData
// Size: 0x30 (Inherited: 0x28)
struct UTigerStaticMeshUserData : UAssetUserData {
	enum class ETigerStaticMeshType StaticMeshType; // 0x28(0x01)
	bool bIsClimbable; // 0x29(0x01)
	bool bIsWallJumpable; // 0x2a(0x01)
	bool bFadeWhenNearToCamera; // 0x2b(0x01)
	bool bForceHorizontalVelocityOnFallingImpact; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// Class Tiger.TigerPiercingPhysicsAssetUserData
// Size: 0x38 (Inherited: 0x28)
struct UTigerPiercingPhysicsAssetUserData : UAssetUserData {
	float Mass; // 0x28(0x04)
	float ForceAmount; // 0x2c(0x04)
	float AnglePitchLimit; // 0x30(0x04)
	float AngleRollLimit; // 0x34(0x04)
};

// Class Tiger.StaticPiercingPhysics
// Size: 0x38 (Inherited: 0x28)
struct UStaticPiercingPhysics : UObject {
	struct TArray<struct FStaticPhysicsPiercingData> SimulatedPhysicsStaticPiercings; // 0x28(0x10)
};

// Class Tiger.TigerStatisticsGatherer
// Size: 0x288 (Inherited: 0x228)
struct ATigerStatisticsGatherer : AActor {
	struct TMap<struct FString, float> AnimationSequences; // 0x228(0x50)
	float ProcessingCullDistance; // 0x278(0x04)
	int32_t MaxComponentProcessingCountPerFrame; // 0x27c(0x04)
	bool bVisualizeProcessedComponents; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
};

// Class Tiger.TigerStatsSubsystem
// Size: 0x100 (Inherited: 0x30)
struct UTigerStatsSubsystem : UGameInstanceSubsystem {
	char pad_30[0xd0]; // 0x30(0xd0)
};

// Class Tiger.TigerStore
// Size: 0x238 (Inherited: 0x228)
struct ATigerStore : AActor {
	struct UTigerBlueprintLootLocationComponent* LootConfiguration; // 0x228(0x08)
	bool bHasAlarmedTriggered; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
};

// Class Tiger.TigerStoreEntryWidget
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerStoreEntryWidget : UTigerWidget {
	struct FTigerMetaStoreEntry RepresentedStoreEntry; // 0x280(0x50)

	bool HasValidStoreEntry(); // Function Tiger.TigerStoreEntryWidget.HasValidStoreEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x133b840
	void BuyStoreEntry(struct FDelegate InOnBuyResponse, int32_t InQuantity); // Function Tiger.TigerStoreEntryWidget.BuyStoreEntry // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x133b710
};

// Class Tiger.TigerStoreService
// Size: 0x40 (Inherited: 0x28)
struct UTigerStoreService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerStreamingBenchmarkTraversalStrategy
// Size: 0x70 (Inherited: 0x28)
struct UTigerStreamingBenchmarkTraversalStrategy : UObject {
	char pad_28[0x48]; // 0x28(0x48)
};

// Class Tiger.TigerStreamingBenchmarkTeleportStrategy
// Size: 0x70 (Inherited: 0x70)
struct UTigerStreamingBenchmarkTeleportStrategy : UTigerStreamingBenchmarkTraversalStrategy {
};

// Class Tiger.TigerStreamingBenchmarkFlyingStrategy
// Size: 0x90 (Inherited: 0x70)
struct UTigerStreamingBenchmarkFlyingStrategy : UTigerStreamingBenchmarkTraversalStrategy {
	char pad_70[0x20]; // 0x70(0x20)
};

// Class Tiger.TigerStyledRichTextBlock
// Size: 0x688 (Inherited: 0x678)
struct UTigerStyledRichTextBlock : URichTextBlock {
	struct FDataTableRowHandle TextStyleRow; // 0x678(0x10)

	void SetWrapTextAt(float InWrapTextAt); // Function Tiger.TigerStyledRichTextBlock.SetWrapTextAt // (Final|Native|Public|BlueprintCallable) // @ game+0x13454a0
	void SetTextStyleSetButKeepTextStyle(struct UDataTable* InNewTextStyleSet); // Function Tiger.TigerStyledRichTextBlock.SetTextStyleSetButKeepTextStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x1345410
	void SetTextStyle(struct FDataTableRowHandle InTextStyle); // Function Tiger.TigerStyledRichTextBlock.SetTextStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x1345370
	void SetDefaultUIColor(enum class ETigerUIColor InTigerUIColor, enum class ETigerColourSpace InTigerColourSpace); // Function Tiger.TigerStyledRichTextBlock.SetDefaultUIColor // (Final|Native|Public|BlueprintCallable) // @ game+0x13452a0
	void SetDefaultShadowUIColorAndOpacity(enum class ETigerUIColor InTigerUIColor, enum class ETigerColourSpace InTigerColourSpace, float InOpacity); // Function Tiger.TigerStyledRichTextBlock.SetDefaultShadowUIColorAndOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x1345190
	void SetDefaultShadowUIColor(enum class ETigerUIColor InTigerUIColor, enum class ETigerColourSpace InTigerColourSpace); // Function Tiger.TigerStyledRichTextBlock.SetDefaultShadowUIColor // (Final|Native|Public|BlueprintCallable) // @ game+0x13450c0
	void SetDefaultOutline(struct FFontOutlineSettings InOutlineSettings); // Function Tiger.TigerStyledRichTextBlock.SetDefaultOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x1345010
	void RefreshSlateTextBlock(); // Function Tiger.TigerStyledRichTextBlock.RefreshSlateTextBlock // (Final|Native|Public|BlueprintCallable) // @ game+0x1344f30
	void ClearDefaultStyleOverrides(); // Function Tiger.TigerStyledRichTextBlock.ClearDefaultStyleOverrides // (Final|Native|Public|BlueprintCallable) // @ game+0x1344b90
};

// Class Tiger.TigerStyledRichTextBlockDecorator
// Size: 0x28 (Inherited: 0x28)
struct UTigerStyledRichTextBlockDecorator : URichTextBlockDecorator {
};

// Class Tiger.TigerSupplyDrop
// Size: 0x350 (Inherited: 0x2f0)
struct ATigerSupplyDrop : ATigerLootBox {
	struct UBoxComponent* BoxRoot; // 0x2f0(0x08)
	char pad_2F8[0x8]; // 0x2f8(0x08)
	struct FTransform FinalTransform; // 0x300(0x30)
	struct UTigerItemLootTable* LootTable; // 0x330(0x08)
	int32_t MinNumItems; // 0x338(0x04)
	int32_t MaxNumItems; // 0x33c(0x04)
	float MaxFallSpeed; // 0x340(0x04)
	char pad_344[0xc]; // 0x344(0x0c)

	void OnRep_FinalTransform(); // Function Tiger.TigerSupplyDrop.OnRep_FinalTransform // (Final|Native|Private) // @ game+0x1344ef0
	void HideParachute(); // Function Tiger.TigerSupplyDrop.HideParachute // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerSupplyDropHelicopter
// Size: 0x228 (Inherited: 0x228)
struct ATigerSupplyDropHelicopter : AActor {
};

// Class Tiger.TigerTalentAsset
// Size: 0x130 (Inherited: 0x30)
struct UTigerTalentAsset : UDataAsset {
	enum class ETigerTalentType TalentType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FText DISPLAYNAME; // 0x38(0x18)
	struct UTexture2D* TalentIcon; // 0x50(0x08)
	struct FTigerCharacterStatModification StatModifications; // 0x58(0xb4)
	int32_t TalentTier; // 0x10c(0x04)
	char UnlocksAtInGameLevel; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)
	struct FText Description; // 0x118(0x18)
};

// Class Tiger.TigerTalentTierClanLevelRequirementsAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerTalentTierClanLevelRequirementsAsset : UDataAsset {
	struct TMap<int32_t, int32_t> TalentTierClanLevelRequirement; // 0x30(0x50)
};

// Class Tiger.TigerTalentComponent
// Size: 0x198 (Inherited: 0xb0)
struct UTigerTalentComponent : UActorComponent {
	struct UDataTable* TalentListTable; // 0xb0(0x08)
	struct UTigerTalentTierClanLevelRequirementsAsset* TalentTierRequirements; // 0xb8(0x08)
	struct TArray<struct UTigerTalentAsset*> Talents; // 0xc0(0x10)
	struct TArray<struct UTigerTalentAsset*> UnlockedTalents; // 0xd0(0x10)
	char pad_E0[0xb8]; // 0xe0(0xb8)

	void UpdateSelectedTalentsFromTrainer(struct TArray<int32_t> NewTalents); // Function Tiger.TigerTalentComponent.UpdateSelectedTalentsFromTrainer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1345520
	void Server_UpdateSelectedTalentsFromTrainer(struct TArray<int32_t> NewTalents); // Function Tiger.TigerTalentComponent.Server_UpdateSelectedTalentsFromTrainer // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1344f50
	struct TArray<struct UTigerTalentAsset*> GetTalentsUnlockedAtLevel(int32_t Level); // Function Tiger.TigerTalentComponent.GetTalentsUnlockedAtLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1344d20
	struct TArray<struct UTigerTalentAsset*> GetTalents(); // Function Tiger.TigerTalentComponent.GetTalents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1344cf0
	void Client_SetPlayerTalentsByIDs(struct TArray<int32_t> InTalents); // Function Tiger.TigerTalentComponent.Client_SetPlayerTalentsByIDs // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1344c50
	void Client_SetPlayerTalents(struct TArray<struct UTigerTalentAsset*> InTalents); // Function Tiger.TigerTalentComponent.Client_SetPlayerTalents // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1344bb0
};

// Class Tiger.TigerTalentDisplayMenu
// Size: 0x2c8 (Inherited: 0x2b8)
struct UTigerTalentDisplayMenu : UTigerIngameSubmenuWidget {
	struct TArray<struct UTigerTalentAsset*> CurrentTalentAssets; // 0x2b8(0x10)

	void PopulateTalentDisplayMenu(); // Function Tiger.TigerTalentDisplayMenu.PopulateTalentDisplayMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1344f10
	void OnPopulateTalentDisplayMenu(); // Function Tiger.TigerTalentDisplayMenu.OnPopulateTalentDisplayMenu // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerTeamViewUI
// Size: 0x2b8 (Inherited: 0x280)
struct UTigerTeamViewUI : UTigerWidget {
	struct TArray<struct ATigerPlayerState*> OtherGroupMembers; // 0x280(0x10)
	struct UTigerPreMatchPaperDollComponent* PreMatchPaperDollComp; // 0x290(0x08)
	struct FString PreHighlightTag; // 0x298(0x10)
	struct TArray<struct FName> GroupMemberPaperDollTags; // 0x2a8(0x10)

	void OnGroupMemberAdded(char InMemberId, struct ATigerPlayerState* InPlayerState, bool bInIsLeftSide, struct ATigerPaperDoll* InPaperDoll); // Function Tiger.TigerTeamViewUI.OnGroupMemberAdded // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void HandleGroupMembersChanged(struct UTigerGroupStateComponent* InGroupStateComponent, struct TArray<struct ATigerPlayerState*> InPreviousMembers); // Function Tiger.TigerTeamViewUI.HandleGroupMembersChanged // (Final|Native|Protected|HasOutParms) // @ game+0x1344e00
};

// Class Tiger.TigerTelemetryDataDefinitions
// Size: 0x48 (Inherited: 0x28)
struct UTigerTelemetryDataDefinitions : UObject {
	enum class ETigerPowerKitType ArchetypeDefinitions; // 0x28(0x01)
	enum class ETigerClan ClanDefinitions; // 0x29(0x01)
	enum class ETigerTelemetryDamageCauser DamageSourceIdentifiers; // 0x2a(0x01)
	enum class ETigerTelemetryExpSource ExperienceSources; // 0x2b(0x01)
	enum class ETigerTelemetryDamageType DamageTypes; // 0x2c(0x01)
	enum class ETigerDisciplinesEnum Disciplines; // 0x2d(0x01)
	enum class ETigerTelemetryMatchmackingCancelReason MatchmakingCancelReasons; // 0x2e(0x01)
	enum class ETigerTelemetryCauseOfPingRemoval CauseOfPingRemoval; // 0x2f(0x01)
	enum class ETigerTelemetryDeviceType DeviceTypes; // 0x30(0x01)
	enum class ETigerTelemetryPlatformType PlatformTypes; // 0x31(0x01)
	enum class ETigerTelemetryMapIds MapIds; // 0x32(0x01)
	enum class ETigerTelemetryRankedMode RankedModes; // 0x33(0x01)
	enum class ETigerTelemetryGameplayMode GameplayModes; // 0x34(0x01)
	enum class ETigerTelemetryChallengeType ChallengeTypes; // 0x35(0x01)
	enum class ETigerTelemetryItemSourceID TelemetrySourceID; // 0x36(0x01)
	enum class ETigerTelemetryBattlepassType BattlepassTypes; // 0x37(0x01)
	enum class ETigerTelemetryHardCurrencyRecieveMethod HardCurrencyReceiveMethod; // 0x38(0x01)
	enum class ETigerTelemetryNetworkType NetworkTypes; // 0x39(0x01)
	enum class ETigerTelemetryNetworkIpType NetworkIPType; // 0x3a(0x01)
	enum class ETigerTelemetryAceRebirthType RebirthType; // 0x3b(0x01)
	enum class ETigerTelemetryMetaItemSourceType MetaItemSourceType; // 0x3c(0x04)
	enum class ETigerTelemetryAceDeathType DeathType; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Tiger.TigerTelemetryEventHandler
// Size: 0x550 (Inherited: 0x28)
struct UTigerTelemetryEventHandler : UObject {
	struct USharkTelemetry* SharkTelemetry; // 0x28(0x08)
	struct UTigerGameInstance* GameInstance; // 0x30(0x08)
	char pad_38[0x518]; // 0x38(0x518)

	void CacheTransactionalData(struct FTigerPersistentPlayerTransactionalData InTransactionalData); // Function Tiger.TigerTelemetryEventHandler.CacheTransactionalData // (Final|Native|Public|HasOutParms) // @ game+0x1344a40
};

// Class Tiger.TigerTelemetryIDInterface
// Size: 0x28 (Inherited: 0x28)
struct UTigerTelemetryIDInterface : UInterface {
};

// Class Tiger.TigerTextWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerTextWidget : UTigerWidget {

	struct UTextBlock* GetText(); // Function Tiger.TigerTextWidget.GetText // (Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
};

// Class Tiger.TigerThrallMapData
// Size: 0x38 (Inherited: 0x30)
struct UTigerThrallMapData : UDataAsset {
	struct UTexture2D* Map; // 0x30(0x08)
};

// Class Tiger.TigerThrallMapUI
// Size: 0x3c0 (Inherited: 0x3b0)
struct UTigerThrallMapUI : UTigerSceneBackgroundUI {
	struct FName SubLevelName; // 0x3b0(0x08)
	struct FName SubLevelCamName; // 0x3b8(0x08)
};

// Class Tiger.TigerThrallMenu
// Size: 0x3d0 (Inherited: 0x3b0)
struct UTigerThrallMenu : UTigerSceneBackgroundUI {
	struct TArray<struct UTigerLocalThrallData*> ThrallSlots; // 0x3b0(0x10)
	struct UTigerLocalThrallData* CurrentThrall; // 0x3c0(0x08)
	enum class ETigerThrallMenu ThrallMenuIndex; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)

	bool IsCurrentSlotEmpty(); // Function Tiger.TigerThrallMenu.IsCurrentSlotEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134b8c0
	void InitialiseOnOpen(struct ATigerPlayerController* InController); // Function Tiger.TigerThrallMenu.InitialiseOnOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x134b830
	void IncrementIndex(); // Function Tiger.TigerThrallMenu.IncrementIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x134b810
	int32_t GetSlotIndex(); // Function Tiger.TigerThrallMenu.GetSlotIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134b600
	void DecrementIndex(); // Function Tiger.TigerThrallMenu.DecrementIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x134b250
};

// Class Tiger.TigerThrallMissionDetailsUi
// Size: 0x2d0 (Inherited: 0x260)
struct UTigerThrallMissionDetailsUi : UUserWidget {
	struct FText MissionName; // 0x260(0x18)
	struct FText MissionObjective; // 0x278(0x18)
	struct FText MissionStatRequirements; // 0x290(0x18)
	int32_t MissionRewardXp; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct FText MissionRewardItems; // 0x2b0(0x18)
	int32_t MissionTurnsLeft; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)

	void LoadMissionDetails(int32_t InMissionUId); // Function Tiger.TigerThrallMissionDetailsUi.LoadMissionDetails // (Final|Native|Public|BlueprintCallable) // @ game+0x1263e00
};

// Class Tiger.TigerThrallMissionMapMarkerData
// Size: 0x48 (Inherited: 0x30)
struct UTigerThrallMissionMapMarkerData : UDataAsset {
	struct FTigerThrallMissionMapMarker MissionMarker; // 0x30(0x18)
};

// Class Tiger.TigerThrallMission
// Size: 0xb8 (Inherited: 0x30)
struct UTigerThrallMission : UDataAsset {
	int32_t MissionId; // 0x30(0x04)
	struct FName MissionName; // 0x34(0x08)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FTigerThrallMissionObjective MissionObjective; // 0x40(0x38)
	struct UTigerThrallMissionMapMarkerData* MissionMarkers; // 0x78(0x08)
	struct FThrallMissionRequirements MissionStatRequirements; // 0x80(0x18)
	struct FTigerThrallMissionReward MissionRewards; // 0x98(0x18)
	int32_t MissionLength; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Tiger.TigerThrallSystem
// Size: 0x130 (Inherited: 0xb0)
struct UTigerThrallSystem : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
	struct TArray<struct UTigerLocalThrallData*> PlayerThralls; // 0xc8(0x10)
	char pad_D8[0x8]; // 0xd8(0x08)
	struct TMap<int32_t, struct UTigerLocalThrallMissionData*> LocalActiveMissions; // 0xe0(0x50)

	void UpdateMissionTurns(int32_t InMissionId, int32_t InIncreaseTurns); // Function Tiger.TigerThrallSystem.UpdateMissionTurns // (Final|Native|Public|BlueprintCallable) // @ game+0x134be30
	void SetMissionStatus(int32_t InMissionId, bool bActive); // Function Tiger.TigerThrallSystem.SetMissionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x134bb10
	bool RemoveThrallFromMission(int32_t InMissionId, enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.RemoveThrallFromMission // (Final|Native|Public|BlueprintCallable) // @ game+0x134ba40
	bool RemoveThrallBySlot(char InSlotIndex); // Function Tiger.TigerThrallSystem.RemoveThrallBySlot // (Final|Native|Public|BlueprintCallable) // @ game+0x134b9b0
	void OnMissionComplete__DelegateSignature(struct UTigerLocalThrallMissionData* LocalMissionData); // DelegateFunction Tiger.TigerThrallSystem.OnMissionComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	bool HasThrall(enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.HasThrall // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134b780
	bool HasMissionId(int32_t InMissionId); // Function Tiger.TigerThrallSystem.HasMissionId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134b6e0
	int32_t GetSharedXP(); // Function Tiger.TigerThrallSystem.GetSharedXP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134b5e0
	struct UTigerThrallMission* GetRandomMission(); // Function Tiger.TigerThrallSystem.GetRandomMission // (Final|Native|Public|BlueprintCallable) // @ game+0x134b5b0
	struct UTigerLocalThrallData* GetMutableThrallBySlot(int32_t InSlotIndex); // Function Tiger.TigerThrallSystem.GetMutableThrallBySlot // (Final|Native|Public|BlueprintCallable) // @ game+0x134b510
	struct UTigerLocalThrallData* GetMutableThrallById(enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.GetMutableThrallById // (Final|Native|Public|BlueprintCallable) // @ game+0x134b480
	struct UTigerThrallMission* GetMissionForId(int32_t InId); // Function Tiger.TigerThrallSystem.GetMissionForId // (Final|Native|Public|BlueprintCallable) // @ game+0x134b3e0
	struct TArray<struct UTigerLocalThrallData*> GetAllThralls(); // Function Tiger.TigerThrallSystem.GetAllThralls // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134b2f0
	struct TArray<struct UTigerThrallMission*> GetAllMissions(); // Function Tiger.TigerThrallSystem.GetAllMissions // (Final|Native|Public|BlueprintCallable) // @ game+0x134b270
	bool AssignThrallToMission(int32_t InMissionId, enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.AssignThrallToMission // (Final|Native|Public|BlueprintCallable) // @ game+0x134b050
};

// Class Tiger.TigerThrallSystemSettings
// Size: 0xd8 (Inherited: 0x38)
struct UTigerThrallSystemSettings : UDeveloperSettings {
	struct TSoftObjectPtr<struct UDataTable> AbilitiesTable; // 0x38(0x28)
	struct TSoftObjectPtr<struct UDataTable> BaseThrallsTable; // 0x60(0x28)
	struct TSoftObjectPtr<struct UDataTable> StatModifiersTable; // 0x88(0x28)
	struct TSoftObjectPtr<struct UDataTable> ThrallMissionsTable; // 0xb0(0x28)

	struct UDataTable* GetThrallMissionsTable(); // Function Tiger.TigerThrallSystemSettings.GetThrallMissionsTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x134b680
	struct UDataTable* GetThrallAbilitiesTable(); // Function Tiger.TigerThrallSystemSettings.GetThrallAbilitiesTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x134b650
	struct UDataTable* GetStatModifiersTable(); // Function Tiger.TigerThrallSystemSettings.GetStatModifiersTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x134b620
	struct UDataTable* GetBaseThrallsTable(); // Function Tiger.TigerThrallSystemSettings.GetBaseThrallsTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x134b380
};

// Class Tiger.TigerThrallTable
// Size: 0x2b8 (Inherited: 0x280)
struct ATigerThrallTable : ATigerInteractiveObject {
	struct UTigerThrallMapUI* TigerThrallMapUI; // 0x280(0x08)
	bool bIsThrallMapUIOpened; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct UCameraComponent* Camera; // 0x290(0x08)
	float TimeToTransition; // 0x298(0x04)
	float CameraExponent; // 0x29c(0x04)
	struct UStaticMeshComponent* TableMesh; // 0x2a0(0x08)
	struct ATigerPlayer* InteractingPlayer; // 0x2a8(0x08)
	char pad_2B0[0x8]; // 0x2b0(0x08)

	void SwitchToTableCamera(bool bIsInstant, struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.SwitchToTableCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x134bd60
	void SwitchToPlayerCamera(bool bIsInstant, struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.SwitchToPlayerCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x134bc90
	void StopInteracting(struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.StopInteracting // (Final|Native|Public|BlueprintCallable) // @ game+0x134bc00
	void StartCameraTransition(); // Function Tiger.TigerThrallTable.StartCameraTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x134bbe0
	void OpenUI(struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.OpenUI // (Final|Native|Public|BlueprintCallable) // @ game+0x134b920
	bool IsThrallMapOpen(); // Function Tiger.TigerThrallTable.IsThrallMapOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134b8f0
	struct ATigerPlayerController* GetTigerController(); // Function Tiger.TigerThrallTable.GetTigerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134b6b0
};

// Class Tiger.TigerThrowingAxe
// Size: 0x248 (Inherited: 0x228)
struct ATigerThrowingAxe : AActor {
	char pad_228[0x1c]; // 0x228(0x1c)
	bool bHasBeenReflected; // 0x244(0x01)
	char pad_245[0x3]; // 0x245(0x03)

	float GetDamageMultiplier(); // Function Tiger.TigerThrowingAxe.GetDamageMultiplier // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x134b3b0
	struct AActor* CopyAndReflect(struct ATigerCharacter* InNewOwner, struct FVector InSpawnLocation, struct FRotator InSpawnRotation); // Function Tiger.TigerThrowingAxe.CopyAndReflect // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x134b120
};

// Class Tiger.TigerThumbnailCameraComponent
// Size: 0x210 (Inherited: 0x200)
struct UTigerThumbnailCameraComponent : USceneComponent {
	struct FString CameraTag; // 0x1f8(0x10)
};

// Class Tiger.TigerThumbnailActor
// Size: 0x288 (Inherited: 0x228)
struct ATigerThumbnailActor : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USceneComponent* ViewOrientation; // 0x230(0x08)
	int32_t IconWidth; // 0x238(0x04)
	int32_t IconHeight; // 0x23c(0x04)
	bool bIsRealtime; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	float FOV; // 0x244(0x04)
	struct TSoftObjectPtr<struct UTextureCube> Cubemap; // 0x248(0x28)
	float CubemapIntensity; // 0x270(0x04)
	bool bShouldGenerateImage; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	struct TArray<struct FSoftClassPath> ItemPaths; // 0x278(0x10)

	void Generate(struct UTigerInventoryItemBase* InItem); // Function Tiger.TigerThumbnailActor.Generate // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerTitleErrorUI
// Size: 0x290 (Inherited: 0x280)
struct UTigerTitleErrorUI : UTigerWidget {
	struct UTigerOnlineError* OnlineError; // 0x280(0x08)
	bool bIsOpen; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)

	void Open(); // Function Tiger.TigerTitleErrorUI.Open // (Final|Native|Public|BlueprintCallable) // @ game+0x13515c0
	void OnOpen(); // Function Tiger.TigerTitleErrorUI.OnOpen // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnClose(); // Function Tiger.TigerTitleErrorUI.OnClose // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Close(); // Function Tiger.TigerTitleErrorUI.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x1351140
};

// Class Tiger.TigerTitleListAsset
// Size: 0x40 (Inherited: 0x30)
struct UTigerTitleListAsset : UDataAsset {
	struct TArray<struct FText> TitlesByLevel; // 0x30(0x10)

	struct FText GetTitleFromPlayer(struct ATigerPlayerState* Player); // Function Tiger.TigerTitleListAsset.GetTitleFromPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1351420
};

// Class Tiger.TigerTooltipKeyPromptWidget
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerTooltipKeyPromptWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnPromptPressed; // 0x280(0x10)
	struct FMulticastInlineDelegate OnPromptHeld; // 0x290(0x10)
	char pad_2A0[0x20]; // 0x2a0(0x20)
	bool bHasHoldAction; // 0x2c0(0x01)
	char pad_2C1[0x1f]; // 0x2c1(0x1f)

	void SetPromptText(struct FText PromptText); // Function Tiger.TigerTooltipKeyPromptWidget.SetPromptText // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void SetHoldProgress(float HoldProgress); // Function Tiger.TigerTooltipKeyPromptWidget.SetHoldProgress // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void PromptPressed(); // Function Tiger.TigerTooltipKeyPromptWidget.PromptPressed // (Final|Native|Private) // @ game+0x1351600
	void PromptHeld(); // Function Tiger.TigerTooltipKeyPromptWidget.PromptHeld // (Final|Native|Private) // @ game+0x13515e0
};

// Class Tiger.TigerTooltipUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerTooltipUI : UTigerWidget {

	struct UTigerTooltipKeyPromptWidget* AddKeyPrompt(struct FText PromptText, bool bHasHoldAction); // Function Tiger.TigerTooltipUI.AddKeyPrompt // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void AddDropItemPrompt(struct UTigerItemAsset* ItemToDrop); // Function Tiger.TigerTooltipUI.AddDropItemPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x1350a20
};

// Class Tiger.TigerTransferFromMatchGameMode
// Size: 0x2e0 (Inherited: 0x2c8)
struct ATigerTransferFromMatchGameMode : AGameModeBase {
	char pad_2C8[0x18]; // 0x2c8(0x18)

	void HideMouseCursor(); // Function Tiger.TigerTransferFromMatchGameMode.HideMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0xb45020
};

// Class Tiger.TigerTransitionWidget
// Size: 0x298 (Inherited: 0x260)
struct UTigerTransitionWidget : UUserWidget {
	float AnimationDelay; // 0x260(0x04)
	float AnimationSpeed; // 0x264(0x04)
	struct FMulticastInlineDelegate OnTransitionStarted; // 0x268(0x10)
	struct FMulticastInlineDelegate OnTransitionFinished; // 0x278(0x10)
	float Progress; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UMaterialInstanceDynamic* EffectMaterialInstance; // 0x290(0x08)

	void UpdateProgress(float InProgress); // Function Tiger.TigerTransitionWidget.UpdateProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x1351910
	void SetEffectMaterialInstance(struct UMaterialInstanceDynamic* InMaterialInstance); // Function Tiger.TigerTransitionWidget.SetEffectMaterialInstance // (Final|Native|Protected|BlueprintCallable) // @ game+0x1351740
	void SetAnimationSpeed(float InAnimationSpeed); // Function Tiger.TigerTransitionWidget.SetAnimationSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x13516c0
	void SetAnimationDelay(float InAnimationDelay); // Function Tiger.TigerTransitionWidget.SetAnimationDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x1351640
	void RestartAnimation(); // Function Tiger.TigerTransitionWidget.RestartAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1351620
	void EnableRendering(); // Function Tiger.TigerTransitionWidget.EnableRendering // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void DisableRendering(); // Function Tiger.TigerTransitionWidget.DisableRendering // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerTrap
// Size: 0x320 (Inherited: 0x228)
struct ATigerTrap : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct FMulticastInlineDelegate OnTriggered; // 0x230(0x10)
	struct USceneComponent* Root; // 0x240(0x08)
	struct UStaticMeshComponent* TrapMesh; // 0x248(0x08)
	struct UBoxComponent* ShootingVolume; // 0x250(0x08)
	struct USphereComponent* TriggerVolume; // 0x258(0x08)
	struct USphereComponent* ExplosionVolume; // 0x260(0x08)
	struct USphereComponent* GasVolume; // 0x268(0x08)
	struct UParticleSystemComponent* ArmedParticle; // 0x270(0x08)
	struct UParticleSystemComponent* AreaParticle; // 0x278(0x08)
	struct UParticleSystemComponent* ExplosionParticle; // 0x280(0x08)
	struct UParticleSystemComponent* GasParticle; // 0x288(0x08)
	struct UTigerTrapsConfig* Config; // 0x290(0x08)
	struct UTigerTrapsConfig* RawConfig; // 0x298(0x08)
	struct UTigerBuff* GasBuff; // 0x2a0(0x08)
	struct UDecalComponent* Decal; // 0x2a8(0x08)
	struct FTigerPersistentPlayerID OwnerPersistentId; // 0x2b0(0x10)
	char pad_2C0[0xc]; // 0x2c0(0x0c)
	int32_t PowerLevel; // 0x2cc(0x04)
	bool bIsPlaced; // 0x2d0(0x01)
	bool bIsArmed; // 0x2d1(0x01)
	char pad_2D2[0x1]; // 0x2d2(0x01)
	bool bTriggered; // 0x2d3(0x01)
	char pad_2D4[0x14]; // 0x2d4(0x14)
	struct FVector ForwardDirection; // 0x2e8(0x0c)
	struct FVector Velocity; // 0x2f4(0x0c)
	char pad_300[0x10]; // 0x300(0x10)
	struct UMaterialInstanceDynamic* TrapMaterialInstance; // 0x310(0x08)
	char pad_318[0x8]; // 0x318(0x08)

	bool ShouldTrapSeeCharacterAsFriendly(struct ATigerCharacter* InCharacter); // Function Tiger.TigerTrap.ShouldTrapSeeCharacterAsFriendly // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1351870
	bool ShouldPlayerSeeTrapAsFriendly(struct ATigerPlayer* InPlayer); // Function Tiger.TigerTrap.ShouldPlayerSeeTrapAsFriendly // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13517d0
	void OnTriggeredTrap(); // Function Tiger.TigerTrap.OnTriggeredTrap // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnPlacedTrap(); // Function Tiger.TigerTrap.OnPlacedTrap // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnActivatedTrap(); // Function Tiger.TigerTrap.OnActivatedTrap // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void Multicast_TriggerTrap(); // Function Tiger.TigerTrap.Multicast_TriggerTrap // (Net|NetReliableNative|Event|NetMulticast|Protected|NetValidate) // @ game+0x1351570
	void Multicast_ActivateTrap(); // Function Tiger.TigerTrap.Multicast_ActivateTrap // (Net|NetReliableNative|Event|NetMulticast|Protected|NetValidate) // @ game+0x1351520
	bool IsTriggered(); // Function Tiger.TigerTrap.IsTriggered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1351500
	bool IsPlaced(); // Function Tiger.TigerTrap.IsPlaced // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13514e0
	bool IsArmed(); // Function Tiger.TigerTrap.IsArmed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13514c0
	void EndOverlappedTrigger(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerTrap.EndOverlappedTrigger // (Final|Native|Private) // @ game+0x13512c0
	void EndOverlappedGas(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerTrap.EndOverlappedGas // (Final|Native|Private) // @ game+0x1351160
	void BeginOverlappedTrigger(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerTrap.BeginOverlappedTrigger // (Final|Native|Private|HasOutParms) // @ game+0x1350f10
	void BeginOverlappedProjectile(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerTrap.BeginOverlappedProjectile // (Final|Native|Private|HasOutParms) // @ game+0x1350ce0
	void BeginOverlappedGas(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Tiger.TigerTrap.BeginOverlappedGas // (Final|Native|Private|HasOutParms) // @ game+0x1350ab0
};

// Class Tiger.TigerTraversalBaseFiniteState
// Size: 0x40 (Inherited: 0x28)
struct UTigerTraversalBaseFiniteState : UObject {
	struct UTigerCharacterMovementComponent* TigerCharacterMovementComponent; // 0x28(0x08)
	struct UTigerTraversalStateConfigBase* BaseConfig; // 0x30(0x08)
	struct UTigerTraversalFiniteStateMachine* OwningStateMachine; // 0x38(0x08)
};

// Class Tiger.TigerTraversalAirDashState
// Size: 0x50 (Inherited: 0x40)
struct UTigerTraversalAirDashState : UTigerTraversalBaseFiniteState {
	char pad_40[0x10]; // 0x40(0x10)
};

// Class Tiger.TigerTraversalClimbState
// Size: 0x128 (Inherited: 0x40)
struct UTigerTraversalClimbState : UTigerTraversalBaseFiniteState {
	char pad_40[0x8]; // 0x40(0x08)
	struct UTigerTraversalStateClimbingConfig* ClimbingConfig; // 0x48(0x08)
	char pad_50[0xd8]; // 0x50(0xd8)
};

// Class Tiger.TigerTraversalCrouchState
// Size: 0x48 (Inherited: 0x40)
struct UTigerTraversalCrouchState : UTigerTraversalBaseFiniteState {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerTraversalDownedState
// Size: 0x40 (Inherited: 0x40)
struct UTigerTraversalDownedState : UTigerTraversalBaseFiniteState {
};

// Class Tiger.TigerTraversalFallState
// Size: 0x40 (Inherited: 0x40)
struct UTigerTraversalFallState : UTigerTraversalBaseFiniteState {
};

// Class Tiger.TigerTraversalFiniteStateMachine
// Size: 0x1d0 (Inherited: 0xb0)
struct UTigerTraversalFiniteStateMachine : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct UTigerCharacterMovementComponent* TigerCharacterMovement; // 0xb8(0x08)
	struct UTigerTraversalBaseFiniteState* ActiveState; // 0xc0(0x08)
	struct UTigerTraversalBaseFiniteState* TraversalList[0xf]; // 0xc8(0x78)
	struct UTigerTraversalStateConfigBase* Configs[0xf]; // 0x140(0x78)
	struct FMulticastInlineDelegate OnTraversalStateChanged; // 0x1b8(0x10)
	char pad_1C8[0x8]; // 0x1c8(0x08)
};

// Class Tiger.TigerTraversalForcedMoveState
// Size: 0x40 (Inherited: 0x40)
struct UTigerTraversalForcedMoveState : UTigerTraversalBaseFiniteState {
};

// Class Tiger.TigerTraversalJumpState
// Size: 0x58 (Inherited: 0x40)
struct UTigerTraversalJumpState : UTigerTraversalBaseFiniteState {
	struct UTigerTraversalStateJumpConfig* JumpConfig; // 0x40(0x08)
	char pad_48[0x10]; // 0x48(0x10)
};

// Class Tiger.TigerTraversalLedgeGrabState
// Size: 0x78 (Inherited: 0x40)
struct UTigerTraversalLedgeGrabState : UTigerTraversalBaseFiniteState {
	struct UTigerTraversalStateLedgeGrabConfig* LedgeGrabConfig; // 0x40(0x08)
	char pad_48[0x30]; // 0x48(0x30)
};

// Class Tiger.TigerTraversalLowVaultState
// Size: 0x60 (Inherited: 0x40)
struct UTigerTraversalLowVaultState : UTigerTraversalBaseFiniteState {
	char pad_40[0x8]; // 0x40(0x08)
	struct UAnimMontage* ActiveLowVaultMontage; // 0x48(0x08)
	char pad_50[0x10]; // 0x50(0x10)
};

// Class Tiger.TigerTraversalSlideJumpState
// Size: 0x50 (Inherited: 0x40)
struct UTigerTraversalSlideJumpState : UTigerTraversalBaseFiniteState {
	char pad_40[0x10]; // 0x40(0x10)
};

// Class Tiger.TigerTraversalSlideState
// Size: 0x78 (Inherited: 0x40)
struct UTigerTraversalSlideState : UTigerTraversalBaseFiniteState {
	char pad_40[0x38]; // 0x40(0x38)
};

// Class Tiger.TigerTraversalStateConfigBase
// Size: 0x50 (Inherited: 0x28)
struct UTigerTraversalStateConfigBase : UObject {
	bool bStateIsDisabled; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TArray<enum class ETigerTraversalState> PossibleOutTransitions; // 0x30(0x10)
	struct UTigerTraversalBaseFiniteState* TraversalState; // 0x40(0x08)
	float TimeOutSeconds; // 0x48(0x04)
	enum class ETigerTraversalState TimeOutInto; // 0x4c(0x01)
	bool bJumpCooldownAllowedToTick; // 0x4d(0x01)
	bool bJumpDiminishingReturnsCountdownCanTick; // 0x4e(0x01)
	char pad_4F[0x1]; // 0x4f(0x01)
};

// Class Tiger.TigerTraversaleStateForcedMoveConfig
// Size: 0x50 (Inherited: 0x50)
struct UTigerTraversaleStateForcedMoveConfig : UTigerTraversalStateConfigBase {
};

// Class Tiger.TigerTraversalStateClimbingConfig
// Size: 0xe8 (Inherited: 0x50)
struct UTigerTraversalStateClimbingConfig : UTigerTraversalStateConfigBase {
	struct FName CameraClimbingSocketName; // 0x50(0x08)
	struct FName ClimbingSpeedAnimationCurveName; // 0x58(0x08)
	struct FName ClimbingBlendSpaceName; // 0x60(0x08)
	struct FName ClimbStartBlendSpaceName; // 0x68(0x08)
	float ClimbingCameraInterpSpeed; // 0x70(0x04)
	float ClimbingCameraInterpDelay; // 0x74(0x04)
	float ClimbableOffset; // 0x78(0x04)
	float ClimbableExtraSearchDepth; // 0x7c(0x04)
	float StartingClimbDepth; // 0x80(0x04)
	float ClimbHorizontalAdjustmentSpeed; // 0x84(0x04)
	float ClimbLowHorizontalAdjustmentSpeed; // 0x88(0x04)
	float IndoorClimbRadiusScale; // 0x8c(0x04)
	float IndoorClimbVerticalOffset; // 0x90(0x04)
	float IndoorClimbBackwardOffset; // 0x94(0x04)
	float IndoorClimbIndoorUpsideDownDeadzoneHalfAngle; // 0x98(0x04)
	float DistanceToCheckForClimbingOverhangs; // 0x9c(0x04)
	float MaximumOverhangAdjustmentLength; // 0xa0(0x04)
	float ClimbingOverHangCheckSweepRadius; // 0xa4(0x04)
	float MinimumOverHangLeadUpBufferPercentage; // 0xa8(0x04)
	float ClimbingInputZCutOff; // 0xac(0x04)
	float MinimumUpwardClimbAngle; // 0xb0(0x04)
	float MaximumSidewaysClimbDeviation; // 0xb4(0x04)
	float ClimbingOverHangZCutOff; // 0xb8(0x04)
	float StartClimbInAirAllowedAngleDifference; // 0xbc(0x04)
	float StartClimbOnGroundAllowedAngleDifference; // 0xc0(0x04)
	float StartClimbInAirAllowedAngleDifferenceGamepad; // 0xc4(0x04)
	float StartClimbOnGroundAllowedAngleDifferenceGamepad; // 0xc8(0x04)
	float ClimbCooldown; // 0xcc(0x04)
	float IndoorClimbingCooldown; // 0xd0(0x04)
	float VerticalClimbSpeed; // 0xd4(0x04)
	float HorizontalClimbSpeed; // 0xd8(0x04)
	float MaximumAllowedAngleDifferenceBetweenClimbTargets; // 0xdc(0x04)
	bool bShouldReadClimbSpeedFromAnimationCurve; // 0xe0(0x01)
	bool bResetIndoorClimbCooldownWhenOutside; // 0xe1(0x01)
	bool bResetIndoorClimbCooldownOnLanding; // 0xe2(0x01)
	bool bShouldAvoidOverhangsDuringClimb; // 0xe3(0x01)
	bool bOnlyStartClimbIfLookingAtWall; // 0xe4(0x01)
	bool bUseSocketForNonLinearCameraWhenClimbing; // 0xe5(0x01)
	bool bShouldInterpClimbingCamera; // 0xe6(0x01)
	char pad_E7[0x1]; // 0xe7(0x01)
};

// Class Tiger.TigerTraversalStateJumpConfig
// Size: 0x78 (Inherited: 0x50)
struct UTigerTraversalStateJumpConfig : UTigerTraversalStateConfigBase {
	int32_t MaxJumpIndexForDiminishingReturnsCurve; // 0x50(0x04)
	float TimeToReduceDiminishingReturnsCount; // 0x54(0x04)
	float JumpForgivenessDistance; // 0x58(0x04)
	float InitialJumpZVelocity; // 0x5c(0x04)
	float PostJumpClimbInteractionDelay; // 0x60(0x04)
	float JumpCoolDownTime; // 0x64(0x04)
	bool bCancelJumpOnHeadImpact; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UCurveFloat* DiminishingReturnsCurve; // 0x70(0x08)
};

// Class Tiger.TigerTraversalStateAirDashConfig
// Size: 0x68 (Inherited: 0x50)
struct UTigerTraversalStateAirDashConfig : UTigerTraversalStateConfigBase {
	bool bResetOnWallJump; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float JumpVerticalVelocity; // 0x54(0x04)
	float PostJumpClimbInteractionDelay; // 0x58(0x04)
	float JumpCoolDownTime; // 0x5c(0x04)
	bool bPreventFallingSlide; // 0x60(0x01)
	bool bResetAimGlideOnDoubleJump; // 0x61(0x01)
	char pad_62[0x6]; // 0x62(0x06)
};

// Class Tiger.TigerTraversalStateLedgeGrabConfig
// Size: 0xc0 (Inherited: 0x50)
struct UTigerTraversalStateLedgeGrabConfig : UTigerTraversalStateConfigBase {
	struct FName LedgeGrabAnimationName; // 0x50(0x08)
	struct FName FallbackLedgeGrabAnimationName; // 0x58(0x08)
	struct FVector LedgeGrabUpperBodyVolumeExtent; // 0x60(0x0c)
	struct FVector LedgeGrabClearanceCheckExtent; // 0x6c(0x0c)
	struct FVector LedgeGrabUpperBodyVolumeCheckPosition; // 0x78(0x0c)
	float AnimationBlendoutStartDelay; // 0x84(0x04)
	float LedgeGrabAnimationTriggerMaxDistance; // 0x88(0x04)
	float MaximumLedgeWallHeight; // 0x8c(0x04)
	float MaximumLedgeOverHangDepth; // 0x90(0x04)
	float LedgeGrabUpperBodyVolumeForwardOffset; // 0x94(0x04)
	float LedgeGrabMaximumCameraAngleDifference; // 0x98(0x04)
	float LedgeGrabForwardSearchDepth; // 0x9c(0x04)
	float LedgeGrabPositionSweepRadius; // 0xa0(0x04)
	float LedgeGrabPositionHorizontalEdgeOffset; // 0xa4(0x04)
	float LedgeGrabPositionVerticalOffset; // 0xa8(0x04)
	float StartingRotationSpeedForBringingCharacterBackToCameraFacing; // 0xac(0x04)
	float RotationSpeedGainPerSecond; // 0xb0(0x04)
	float MaxTimeToFixCharacterRotation; // 0xb4(0x04)
	bool bShouldAdjustLedgeGrabAnimationPlayRate; // 0xb8(0x01)
	bool bShouldUseExitLedgeGrabRotationInterpolation; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)
};

// Class Tiger.TigerTraversalStateSlidingConfig
// Size: 0xd0 (Inherited: 0x50)
struct UTigerTraversalStateSlidingConfig : UTigerTraversalStateConfigBase {
	float SlideGravityMultiplier; // 0x50(0x04)
	float SlideTerminalSpeed; // 0x54(0x04)
	float BrakingDecelerationSliding; // 0x58(0x04)
	float BrakingDecelerationSlidingStop; // 0x5c(0x04)
	float RequiredVelocityForSlideStart; // 0x60(0x04)
	float RequiredFallingVelocityForSlideStart; // 0x64(0x04)
	float HorizontalSpeedForFallingSlide; // 0x68(0x04)
	float ThresholdVelocityForSlideStop; // 0x6c(0x04)
	float SlideVelocityBoostMultiplier; // 0x70(0x04)
	float SlideFallingHorizontalBoostMultiplier; // 0x74(0x04)
	float SlideFallingVerticalBoostMultiplier; // 0x78(0x04)
	float SlideAirGraceTime; // 0x7c(0x04)
	float SlideBoostDecayRecoverySpeed; // 0x80(0x04)
	float SlideControllerRotationTime; // 0x84(0x04)
	float SlidingWallCollisionCutOffHalfAngle; // 0x88(0x04)
	float SlidingWallCollisionSweepRadius; // 0x8c(0x04)
	float SlidingWallCollisionZecondaryCheckZOffset; // 0x90(0x04)
	float SlideTimeBeforeJumpIsAllowed; // 0x94(0x04)
	float TimeOfForcedSliding; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UCurveFloat* SlideBoostDecayCurve; // 0xa0(0x08)
	struct UCurveFloat* SlideGravityCurve; // 0xa8(0x08)
	struct UCurveFloat* HorizontalSpeedForFallingSlideCurve; // 0xb0(0x08)
	struct UCurveFloat* DownwardsAngleDifferenceMultiplierCurve; // 0xb8(0x08)
	struct UCurveFloat* DecelerationCurve; // 0xc0(0x08)
	bool bUseSlideAlongSurfaceLogic; // 0xc8(0x01)
	bool bPrintVariablesOnFallSlide; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
};

// Class Tiger.TigerTraversalStateSlideJumpConfig
// Size: 0x78 (Inherited: 0x50)
struct UTigerTraversalStateSlideJumpConfig : UTigerTraversalStateConfigBase {
	float JumpCoolDownTime; // 0x50(0x04)
	float PostJumpClimbInteractionDelay; // 0x54(0x04)
	float SlideHorizontalDirectionInfluenceThreshold; // 0x58(0x04)
	float SlideJumpDecayRecoverySpeed; // 0x5c(0x04)
	struct UCurveFloat* JumpZVelocityOverSlideSpeed; // 0x60(0x08)
	struct UCurveFloat* SlideJumpHorizontalMultiplierOverVelocity; // 0x68(0x08)
	struct UCurveFloat* SlideJumpDecayCurve; // 0x70(0x08)
};

// Class Tiger.TigerTraversalStateWallJumpConfig
// Size: 0xe0 (Inherited: 0x50)
struct UTigerTraversalStateWallJumpConfig : UTigerTraversalStateConfigBase {
	struct FTigerWallJumpBlendBundle DefaultWallJumpBlendBundle; // 0x50(0x10)
	struct FTigerWallJumpBlendBundle WallJumpBlendBundleFromClimb; // 0x60(0x10)
	struct FVector WallJumpColliderOffset; // 0x70(0x0c)
	float PostJumpClimbInteractionDelay; // 0x7c(0x04)
	float JumpCoolDownTime; // 0x80(0x04)
	float WallJumpSphereColliderRadius; // 0x84(0x04)
	float SecondaryWallSweepRadius; // 0x88(0x04)
	float MaximumHorizontalJumpVelocity; // 0x8c(0x04)
	float MinimumHorizontalJumpVelocity; // 0x90(0x04)
	float WallJumpZVelocity; // 0x94(0x04)
	float WallJumpInputDirectionCutOffAngle; // 0x98(0x04)
	float MaxWallJumpStateDuration; // 0x9c(0x04)
	float WallJumpRequiredHalfAngleFromWallWhenHoldingForward; // 0xa0(0x04)
	float WallJumpDeadzoneHalfAngle; // 0xa4(0x04)
	float WallJumpMaxAllowedHalfAngleBeforeClamping; // 0xa8(0x04)
	bool bShouldCapNumberOfWallJumpsFromSimilarWalls; // 0xac(0x01)
	char pad_AD[0x3]; // 0xad(0x03)
	float ConsecutiveWallJumpNormalLikenessThreshold; // 0xb0(0x04)
	float WallJumpDelayTime; // 0xb4(0x04)
	float WallJumpDownwardSpeedGainInSeconds; // 0xb8(0x04)
	float WallJumpSlideSpeedScale; // 0xbc(0x04)
	float WallJumpMinimumWallSlideSpeed; // 0xc0(0x04)
	float WallJumpMaximumWallSlideSpeed; // 0xc4(0x04)
	float WallJumpForwardHalfAngleAnimationCutOff; // 0xc8(0x04)
	enum class ETigerWallJumpInputOption WallJumpInputOption; // 0xcc(0x01)
	char MaximumNumberOfWallJumpsFromSimilarWall; // 0xcd(0x01)
	char NumberOfWallJumpsToRestoreOnDoubleJump; // 0xce(0x01)
	bool bShouldApplyDownwardForceDuringWallJumpDelay; // 0xcf(0x01)
	bool AdjustWallJumpSlideSpeedOnInputAngle; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct UCurveFloat* WallJumpDelaySpeedCurve; // 0xd8(0x08)
};

// Class Tiger.TigerTraversalStateWallGrindConfig
// Size: 0xb0 (Inherited: 0x50)
struct UTigerTraversalStateWallGrindConfig : UTigerTraversalStateConfigBase {
	struct FVector ColliderOffset; // 0x50(0x0c)
	float SphereColliderRadius; // 0x5c(0x04)
	float WallGrindCancelInputHalfAngle; // 0x60(0x04)
	float WallGrindCancelInputDelayTime; // 0x64(0x04)
	float WallGrindVelocityRemapDeadZone; // 0x68(0x04)
	float WallGrindMaxHorizontalSpeed; // 0x6c(0x04)
	float WallGrindBufferDistance; // 0x70(0x04)
	float WallGrindBufferAdjustmentSpeed; // 0x74(0x04)
	float RequiredSuccessfulSimulationTime; // 0x78(0x04)
	float MinRequiredAngleBetweenStartingNormalAndPathDir; // 0x7c(0x04)
	float WallGrindPossibleStartAngleThreshold; // 0x80(0x04)
	float WallGrindSimulationSharpAngleThreshold; // 0x84(0x04)
	int8_t NumberofSimulationChecksPerSecond; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
	struct UCurveFloat* WallGrindFallVelocitySpeedUp; // 0x90(0x08)
	struct UCurveFloat* WallGrindFallVelocitySlowDown; // 0x98(0x08)
	struct UCurveFloat* WallGrindStartingHorizontalSpeedMultipler; // 0xa0(0x08)
	bool bOnlyAdjustFallSpeedWhenFallingTooFast; // 0xa8(0x01)
	bool bShouldBlockWallGrindingWhenHoldingCancelInput; // 0xa9(0x01)
	bool bShouldClampHorizontalSpeed; // 0xaa(0x01)
	bool bWallGrindShouldBufferDistanceToWall; // 0xab(0x01)
	bool bValidateWallgrindByCheckingPathAverageToWall; // 0xac(0x01)
	bool bDrawOutWallNormalsUsedInAWallGrind; // 0xad(0x01)
	char pad_AE[0x2]; // 0xae(0x02)
};

// Class Tiger.TigerTraversalStateDownedConfig
// Size: 0x58 (Inherited: 0x50)
struct UTigerTraversalStateDownedConfig : UTigerTraversalStateConfigBase {
	float DownedMaxSpeed; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Tiger.TigerTraversalStateLowVaultConfig
// Size: 0x88 (Inherited: 0x50)
struct UTigerTraversalStateLowVaultConfig : UTigerTraversalStateConfigBase {
	struct FName LowVaultAnimationName; // 0x50(0x08)
	struct FVector LowVaultLowerBodyVolumeExtent; // 0x58(0x0c)
	struct FVector LowVaultCheckOffset; // 0x64(0x0c)
	float LowVaultMaximumCameraAngleDifference; // 0x70(0x04)
	float AnimationBlendoutStartDelay; // 0x74(0x04)
	float LowVaultPositionVerticalOffset; // 0x78(0x04)
	float HorizontalEndPositionOffset; // 0x7c(0x04)
	bool bShouldAdjustLowVaultAnimationPlayRate; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class Tiger.TigerTraversalStateWallHangConfig
// Size: 0x68 (Inherited: 0x50)
struct UTigerTraversalStateWallHangConfig : UTigerTraversalStateConfigBase {
	float OffsetDistanceForFutureWallHangPosition; // 0x50(0x04)
	bool bShouldBlockWallHangIfLikelyToSlideOff; // 0x54(0x01)
	bool bShouldAllowPlayerToSlideoffHorizontallyDuringDeceleration; // 0x55(0x01)
	char pad_56[0x2]; // 0x56(0x02)
	struct UCurveFloat* VerticalVelocitySlowDownRate; // 0x58(0x08)
	struct UCurveFloat* HorizontalVelocitySlowDownRate; // 0x60(0x08)
};

// Class Tiger.TigerTraversalWalkState
// Size: 0x48 (Inherited: 0x40)
struct UTigerTraversalWalkState : UTigerTraversalBaseFiniteState {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerTraversalWallGrindState
// Size: 0x140 (Inherited: 0x40)
struct UTigerTraversalWallGrindState : UTigerTraversalBaseFiniteState {
	char pad_40[0xf8]; // 0x40(0xf8)
	struct UTigerTraversalStateWallGrindConfig* WallGrindConfig; // 0x138(0x08)

	void UpdateEffect(struct FName InAssociatedBoneName, struct FHitResult InHitResult, struct ATigerCharacter* InTigerCharacter); // Function Tiger.TigerTraversalWallGrindState.UpdateEffect // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void StopEffect(struct FName InAssociatedBoneName, struct ATigerCharacter* InTigerCharacter); // Function Tiger.TigerTraversalWallGrindState.StopEffect // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void StartEffect(struct FName InAssociatedBoneName, struct FHitResult InHitResult, struct ATigerCharacter* InTigerCharacter); // Function Tiger.TigerTraversalWallGrindState.StartEffect // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerTraversalWallHangState
// Size: 0x58 (Inherited: 0x40)
struct UTigerTraversalWallHangState : UTigerTraversalBaseFiniteState {
	char pad_40[0x18]; // 0x40(0x18)
};

// Class Tiger.TigerTraversalWallJumpState
// Size: 0x128 (Inherited: 0x40)
struct UTigerTraversalWallJumpState : UTigerTraversalBaseFiniteState {
	char pad_40[0xe8]; // 0x40(0xe8)
};

// Class Tiger.TigerTutorialGameMode
// Size: 0x7d0 (Inherited: 0x4b8)
struct ATigerTutorialGameMode : ATigerGameMode {
	struct FMulticastInlineDelegate OnTutorialStart; // 0x4b8(0x10)
	struct FMulticastInlineDelegate OnTutorialBeat01Complete; // 0x4c8(0x10)
	struct FMulticastInlineDelegate OnTutorialBeat02Complete; // 0x4d8(0x10)
	struct FMulticastInlineDelegate OnTutorialBeat03Complete; // 0x4e8(0x10)
	bool bHasTutorialStarted; // 0x4f8(0x01)
	char pad_4F9[0x7]; // 0x4f9(0x07)
	struct FTigerPreviewerData PlayerAppearance; // 0x500(0x2b0)
	struct UTigerPowerKit* TutorialPlayerArchetype; // 0x7b0(0x08)
	struct UTigerBloodTrackPreset* TutorialBloodTrackPreset; // 0x7b8(0x08)
	struct UAkAudioEvent* CurrentDialogueEvent; // 0x7c0(0x08)
	struct ATigerItemWorldRepresentation* Beat03Consumable; // 0x7c8(0x08)

	void UnlockPlayer(); // Function Tiger.TigerTutorialGameMode.UnlockPlayer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void StartMatch(); // Function Tiger.TigerTutorialGameMode.StartMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x1357a90
	void ShowContextualHelp_BlueprintImplementation(SoftClassProperty InContextualHelp); // Function Tiger.TigerTutorialGameMode.ShowContextualHelp_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void ShowContextualHelp(SoftClassProperty InContextualHelp); // Function Tiger.TigerTutorialGameMode.ShowContextualHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x1357620
	void SetTutorialHasStarted(bool bInTutorialHasStarted); // Function Tiger.TigerTutorialGameMode.SetTutorialHasStarted // (Final|Native|Public|BlueprintCallable) // @ game+0x1357500
	void RemoveSubtitles(struct UAkAudioEvent* InDialogueEvent); // Function Tiger.TigerTutorialGameMode.RemoveSubtitles // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void RemovePing(); // Function Tiger.TigerTutorialGameMode.RemovePing // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	struct UAkAudioEvent* PlayVoiceOver_BlueprintImplementation(struct TSoftObjectPtr<struct UAkAudioEvent> InDialogueEvent, struct FText InSubtitles, struct FDelegate InPostEventCallback); // Function Tiger.TigerTutorialGameMode.PlayVoiceOver_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	struct UAkAudioEvent* PlayVoiceOver(struct TSoftObjectPtr<struct UAkAudioEvent> InDialogueEvent, struct FText InSubtitles, struct FDelegate InPostEventCallback); // Function Tiger.TigerTutorialGameMode.PlayVoiceOver // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13571c0
	void Ping_BlueprintImplementation(struct FVector InWorldLocation, SoftClassProperty InPingClass, struct AActor* InContextualActor, struct FVector InLocalOffset); // Function Tiger.TigerTutorialGameMode.Ping_BlueprintImplementation // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16c0340
	void Ping(struct FVector InWorldLocation, SoftClassProperty InPingClass, struct AActor* InContextualActor, struct FVector InLocalOffset); // Function Tiger.TigerTutorialGameMode.Ping // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1356e90
	void LockPlayer(); // Function Tiger.TigerTutorialGameMode.LockPlayer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void HideUI(); // Function Tiger.TigerTutorialGameMode.HideUI // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void HideContextualHelp_BlueprintImplementation(SoftClassProperty InContextualHelp); // Function Tiger.TigerTutorialGameMode.HideContextualHelp_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void HideContextualHelp(SoftClassProperty InContextualHelp); // Function Tiger.TigerTutorialGameMode.HideContextualHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x1356590
	struct UAkAudioEvent* GetCurrentDialogueEvent(); // Function Tiger.TigerTutorialGameMode.GetCurrentDialogueEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1355650
	void CompleteObjective_BlueprintImplementation(struct FName InObjectiveIdentifier); // Function Tiger.TigerTutorialGameMode.CompleteObjective_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void CompleteObjective(struct FName InObjectiveIdentifier); // Function Tiger.TigerTutorialGameMode.CompleteObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x1354f00
	void AddNewObjective_BlueprintImplementation(struct FName InObjectiveIdentifier, struct FText InObjectiveText, struct FName InActionToEmbed, struct FName InGamepadOverrideActionToEmbed, bool InHasAdditionalKeyboardInput, struct FKey InAdditionalKeyboardInput, bool InHasAdditionalGamepadInput, struct FKey InAdditionalGamepadInput, bool InOverrideImage, struct FName InImageToOverride, bool InPersistantObjective, struct FName InGamepadImageToOverride); // Function Tiger.TigerTutorialGameMode.AddNewObjective_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void AddNewObjective(struct FName InObjectiveIdentifier, struct FText InObjectiveText, struct FName InActionToEmbed, struct FName InGamepadOverrideActionToEmbed, bool InHasAdditionalKeyboardInput, struct FKey InAdditionalKeyboardInput, bool InHasAdditionalGamepadInput, struct FKey InAdditionalGamepadInput, bool InOverrideImage, struct FName InImageToOverride, bool InPersistantObjective, struct FName InGamepadImageToOverride); // Function Tiger.TigerTutorialGameMode.AddNewObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x1354980
};

// Class Tiger.TigerTutorialGameState
// Size: 0x320 (Inherited: 0x320)
struct ATigerTutorialGameState : ATigerGameState {
};

// Class Tiger.TigerTutorialTrainerAsset
// Size: 0x60 (Inherited: 0x30)
struct UTigerTutorialTrainerAsset : UDataAsset {
	struct AAIController* Controller; // 0x30(0x08)
	struct ATigerTutorialTrainer* NPC; // 0x38(0x08)
	struct TArray<struct FTigerPreviewerData> VisualData; // 0x40(0x10)
	struct UTigerWeapon* WeaponClass; // 0x50(0x08)
	bool bShouldBeFriendlyWithPlayer; // 0x58(0x01)
	bool bShouldReviveInsteadOfDiablerize; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
};

// Class Tiger.TigerTutorialNpcSpawner
// Size: 0x230 (Inherited: 0x228)
struct ATigerTutorialNpcSpawner : AActor {
	struct UTigerTutorialTrainerAsset* DataAsset; // 0x228(0x08)

	struct ATigerTutorialTrainer* SpawnNpc(); // Function Tiger.TigerTutorialNpcSpawner.SpawnNpc // (Final|Native|Public|BlueprintCallable) // @ game+0x1357930
	struct TArray<struct ATigerTutorialTrainer*> SpawnGroupOfNpcs(int32_t NumberToSpawn); // Function Tiger.TigerTutorialNpcSpawner.SpawnGroupOfNpcs // (Final|Native|Public|BlueprintCallable) // @ game+0x1357850
};

// Class Tiger.TigerTutorialTrainer
// Size: 0x8e0 (Inherited: 0x780)
struct ATigerTutorialTrainer : ATigerCharacter {
	char pad_780[0x28]; // 0x780(0x28)
	struct FMulticastInlineDelegate OnReviveEnded; // 0x7a8(0x10)
	struct FMulticastInlineDelegate OnTutorialTrainerDowned; // 0x7b8(0x10)
	struct FMulticastInlineDelegate OnTutorialTrainerDiablerized; // 0x7c8(0x10)
	struct FTutorialTrainerDiablerizeData DiablerizeData; // 0x7d8(0x20)
	struct FTutorialTrainerReviveData ReviveData; // 0x7f8(0x18)
	float HealthOnEnteringDownedState; // 0x810(0x04)
	float DiablerizeOffsetDistance; // 0x814(0x04)
	float MaxDownedTime; // 0x818(0x04)
	float RemainingDownedTime; // 0x81c(0x04)
	bool bShouldBeFriendlyWithPlayer; // 0x820(0x01)
	bool bCanBeDiablerized; // 0x821(0x01)
	bool bWantsToShoot; // 0x822(0x01)
	bool bIsDowned; // 0x823(0x01)
	bool bIsInvulnerableWhenDowned; // 0x824(0x01)
	char pad_825[0x3]; // 0x825(0x03)
	struct ATigerCharacter* CurrentlyAimedAtCharacter; // 0x828(0x08)
	struct UTigerNPCVisualAsset* VisualAsset; // 0x830(0x08)
	struct UTigerNPCFacePoseMap* HeadMeshsPoseAssetsClass; // 0x838(0x08)
	struct UTigerPhysicalInteractionAnimationAsset* DiablerizeAnimationSetAsset; // 0x840(0x08)
	float TimeInEnterState; // 0x848(0x04)
	float TimeInDrainState; // 0x84c(0x04)
	float TimeInLeaveState; // 0x850(0x04)
	struct FName DownedMontageNames[0x4]; // 0x854(0x20)
	struct FName StaticEntryToDownedMontageName; // 0x874(0x08)
	struct FName InterruptSectionName; // 0x87c(0x08)
	struct FName EndSectionName; // 0x884(0x08)
	struct FName DodgeOnGroundBlendSpaceName; // 0x88c(0x08)
	struct FName DodgeInAirBlendSpaceName; // 0x894(0x08)
	struct FName DiablerizeAnimationName; // 0x89c(0x08)
	struct FName GetDiablerizedAnimationName; // 0x8a4(0x08)
	struct FName ExitDownedStateAnimationName; // 0x8ac(0x08)
	char pad_8B4[0xc]; // 0x8b4(0x0c)
	struct UAnimMontage* CurrentTrainerDiablerizeMontage; // 0x8c0(0x08)
	struct UAnimMontage* CurrentPlayerDiablerizeMontage; // 0x8c8(0x08)
	char pad_8D0[0x10]; // 0x8d0(0x10)

	void TutorialTrainerReviveFinished__DelegateSignature(bool bDidCompleteRevive, bool bWasInterruptedByPlayer); // DelegateFunction Tiger.TigerTutorialTrainer.TutorialTrainerReviveFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TutorialTrainerDowned__DelegateSignature(); // DelegateFunction Tiger.TigerTutorialTrainer.TutorialTrainerDowned__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TutorialTrainerDiablerized__DelegateSignature(); // DelegateFunction Tiger.TigerTutorialTrainer.TutorialTrainerDiablerized__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void StopShooting(bool bShouldStopAiming); // Function Tiger.TigerTutorialTrainer.StopShooting // (Final|Native|Protected|BlueprintCallable) // @ game+0x1357ba0
	void StopBlocking(); // Function Tiger.TigerTutorialTrainer.StopBlocking // (Final|Native|Protected|BlueprintCallable) // @ game+0x1357b80
	void StopAiming(); // Function Tiger.TigerTutorialTrainer.StopAiming // (Final|Native|Protected|BlueprintCallable) // @ game+0x1357b60
	void StartShooting(struct ATigerCharacter* ShootingTargetActor); // Function Tiger.TigerTutorialTrainer.StartShooting // (Final|Native|Protected|BlueprintCallable) // @ game+0x1357ad0
	void StartMeleeAttack(); // Function Tiger.TigerTutorialTrainer.StartMeleeAttack // (Final|Native|Protected|BlueprintCallable) // @ game+0x1357ab0
	void StartHeavyMeleeAttack(float ChargeUpTime); // Function Tiger.TigerTutorialTrainer.StartHeavyMeleeAttack // (Final|Native|Protected|BlueprintCallable) // @ game+0x1357a10
	void StartBlocking(); // Function Tiger.TigerTutorialTrainer.StartBlocking // (Final|Native|Protected|BlueprintCallable) // @ game+0x13579f0
	void StartAimingAt(struct ATigerCharacter* ShootingTargetActor); // Function Tiger.TigerTutorialTrainer.StartAimingAt // (Final|Native|Protected|BlueprintCallable) // @ game+0x1357960
	void ShootOnce(struct ATigerCharacter* ShootingTargetActor); // Function Tiger.TigerTutorialTrainer.ShootOnce // (Final|Native|Protected|BlueprintCallable) // @ game+0x1357590
	void ReloadWeapon(); // Function Tiger.TigerTutorialTrainer.ReloadWeapon // (Final|Native|Protected|BlueprintCallable) // @ game+0x13574e0
	void OnExitDownedState(); // Function Tiger.TigerTutorialTrainer.OnExitDownedState // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDowned(); // Function Tiger.TigerTutorialTrainer.OnDowned // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDiablerizeStopped(); // Function Tiger.TigerTutorialTrainer.OnDiablerizeStopped // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDiablerizeStarted(); // Function Tiger.TigerTutorialTrainer.OnDiablerizeStarted // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void OnDiablerizedSuccessfullyFinished(); // Function Tiger.TigerTutorialTrainer.OnDiablerizedSuccessfullyFinished // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsAiming(); // Function Tiger.TigerTutorialTrainer.IsAiming // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13566a0
	float GetReviveOrDiablerizeProgress(); // Function Tiger.TigerTutorialTrainer.GetReviveOrDiablerizeProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1356280
	float GetDiablerizeTimeInSeconds(); // Function Tiger.TigerTutorialTrainer.GetDiablerizeTimeInSeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1355670
};

// Class Tiger.TigerTypeAndRarityData
// Size: 0x260 (Inherited: 0x30)
struct UTigerTypeAndRarityData : UDataAsset {
	struct TMap<enum class ETigerInventoryItemType, struct FText> ItemTypeNames; // 0x30(0x50)
	struct TMap<enum class ETigerInventoryItemType, struct FText> ShortItemTypeNames; // 0x80(0x50)
	struct TMap<enum class ETigerWeaponAmmoType, struct FText> AmmoTypeNames; // 0xd0(0x50)
	struct TMap<enum class ETigerWeaponType, struct FText> ShortWeaponTypeNames; // 0x120(0x50)
	struct TMap<enum class ETigerLootCategory, struct FText> LootCategoryNames; // 0x170(0x50)
	struct TMap<enum class ETigerItemRarity, struct FText> ItemRarityNames; // 0x1c0(0x50)
	struct TMap<enum class ETigerItemRarity, enum class ETigerUIColor> ItemRarityColors; // 0x210(0x50)
};

// Class Tiger.TigerUIBlueprintFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTigerUIBlueprintFunctionLibrary : UBlueprintFunctionLibrary {

	void Update3dWidgetTransform(struct AActor* Character, struct USceneComponent* Widget, struct FVector SocketLocation, struct FVector Offset); // Function Tiger.TigerUIBlueprintFunctionLibrary.Update3dWidgetTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1357c30
	void ShowGameModeNotification(struct ATigerPlayerController* Player, struct FText Message); // Function Tiger.TigerUIBlueprintFunctionLibrary.ShowGameModeNotification // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1357730
	bool ProjectWorldToScreenBidirectional(struct APlayerController* InPlayerController, struct FVector InWorldLocation, struct FVector2D OutScreenPosition); // Function Tiger.TigerUIBlueprintFunctionLibrary.ProjectWorldToScreenBidirectional // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13573c0
	void PlayOrReverseAnimation(struct UUserWidget* Widget, struct UWidgetAnimation* WidgetAnimation, enum class EUMGSequencePlayMode PlayMode, float PlayBackSpeed); // Function Tiger.TigerUIBlueprintFunctionLibrary.PlayOrReverseAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1357070
	void MapWorldLocationToUIRectangle(struct ATigerPlayerController* InPlayerController, struct FVector InLocation, struct FBox2D InMargins, struct FVector2D OutScreenPosition, float OutRotationAngleDegrees, bool bIsOnScreen); // Function Tiger.TigerUIBlueprintFunctionLibrary.MapWorldLocationToUIRectangle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1356c60
	void MapWorldLocationToUICircle(struct ATigerPlayer* Player, struct FVector InLocation, float EdgePercent, float CircleRadius, struct FVector2D OutScreenPosition, float OutRotationAngleDegrees, bool bIsOnScreen); // Function Tiger.TigerUIBlueprintFunctionLibrary.MapWorldLocationToUICircle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1356a20
	bool IsItemPartOfPlayerCard(struct FTigerPersistentPlayerCardData InCard, SoftClassProperty InItemPath); // Function Tiger.TigerUIBlueprintFunctionLibrary.IsItemPartOfPlayerCard // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x13568f0
	bool IsItemPartOfAppearance(struct FTigerCharacterAppearance InAppearance, SoftClassProperty InItemPath); // Function Tiger.TigerUIBlueprintFunctionLibrary.IsItemPartOfAppearance // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x13567a0
	bool IsDisciplineClanAbility(struct ATigerPlayer* Player, enum class ETigerDisciplinesEnum Type); // Function Tiger.TigerUIBlueprintFunctionLibrary.IsDisciplineClanAbility // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13566d0
	float GetUIAngle(struct ATigerPlayer* Player, struct FVector LocationToGetAngleFrom); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetUIAngle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13564c0
	struct TArray<struct FStatChangeDescription> GetStatChanges(struct FTigerCharacterStatModification StatModification); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetStatChanges // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13562b0
	struct FRotator GetRelativeCameraDirectionToActorRotation(struct AActor* Actor); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetRelativeCameraDirectionToActorRotation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13561e0
	void GetLineLineIntersectionPoint(struct FVector LineAStart, struct FVector LineAEnd, struct FVector LineBStart, struct FVector LineBEnd, bool bDoesIntersect, struct FVector IntersectionPoint); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetLineLineIntersectionPoint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1355fb0
	struct TArray<struct FInputAxisKeyMapping> GetKeysForAxis(struct ATigerPlayerController* Controller, struct FName Axis); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetKeysForAxis // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1355de0
	struct TArray<struct FInputActionKeyMapping> GetKeysForAction(struct ATigerPlayerController* Controller, struct FName Action); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetKeysForAction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1355c10
	enum class ETigerInventoryItemType GetInventoryItemTypeFromWeaponType(enum class ETigerEquippedWeaponType WeaponType); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetInventoryItemTypeFromWeaponType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1355b90
	struct FName GetFNameFromKey(struct FKey Key); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetFNameFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1355ac0
	float GetExpandableAreaRolloutAnimationSeconds(struct UExpandableArea* InExpandableArea); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetExpandableAreaRolloutAnimationSeconds // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1355a30
	struct FText GetDisplayTextFromKey(struct FKey Key); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisplayTextFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1355910
	struct UMediaSource* GetDisciplinePreviewMediaSource(struct UTigerDisciplineConfigs* InConfigsClass, enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisciplinePreviewMediaSource // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1355840
	struct UTexture2D* GetDisciplineIcon(struct UTigerDisciplineConfigs* ConfigsClass, enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisciplineIcon // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1355770
	struct UTigerDisciplineConfigBase* GetDisciplineConfigFromType(struct ATigerPlayer* Player, enum class ETigerDisciplinesEnum Type); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisciplineConfigFromType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13556a0
	struct FVector2D GetBorderLocationFromAngle(float Angle, float DistanceFromBorder); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetBorderLocationFromAngle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1355570
	void GetBorderLocationAndAngleFromWorld(struct ATigerPlayerController* InPlayerController, struct FVector InWorldLocation, float InBorderDistance, struct FVector2D OutScreenPosition, float OutAngle); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetBorderLocationAndAngleFromWorld // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13553a0
	void GamepadUpdateScrollbox(struct ATigerPlayerController* InPlayerController, struct UScrollBox* InScrollbox, float ScrollTime, float InDeltaTime, float InMinScrollSpeed, float InMaxScrollSpeed, float InMaxScrollTime); // Function Tiger.TigerUIBlueprintFunctionLibrary.GamepadUpdateScrollbox // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1355180
	void GamepadMoveMouseToWidget(struct ATigerPlayerController* InPlayerController, struct TArray<struct UWidget*> InWidgetList, int32_t InHoverIndex, int32_t InDirection, struct UScrollBox* InScrollbox, bool OutMouseMoved); // Function Tiger.TigerUIBlueprintFunctionLibrary.GamepadMoveMouseToWidget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1354f90
	float CalculateTopdownAngleBetweenPlayerAndTarget(struct ATigerPlayer* InPlayer, struct FVector InLocationToGetAngleFrom); // Function Tiger.TigerUIBlueprintFunctionLibrary.CalculateTopdownAngleBetweenPlayerAndTarget // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1354e30
};

// Class Tiger.TigerUIEnemyHealthBar
// Size: 0x280 (Inherited: 0x280)
struct UTigerUIEnemyHealthBar : UTigerWidget {

	enum class ETigerDamageNumberAmount GetDamageNumberAmountSetting(); // Function Tiger.TigerUIEnemyHealthBar.GetDamageNumberAmountSetting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x135f300
	void AddHealAmount(int32_t InHealAmount); // Function Tiger.TigerUIEnemyHealthBar.AddHealAmount // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerUiNewNotificationNode
// Size: 0x68 (Inherited: 0x28)
struct UTigerUiNewNotificationNode : UObject {
	struct UTigerUiNewNotificationNode* ParentNode; // 0x28(0x08)
	struct TArray<struct UTigerUiNewNotificationNode*> ChildNodes; // 0x30(0x10)
	struct UTigerUiNewNotificationHandler* NewNotificationHandler; // 0x40(0x08)
	bool bHasNewEntry; // 0x48(0x01)
	bool bIsDirty; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)
	struct TArray<uint64_t> NewIds; // 0x50(0x10)
	bool bShouldPersistBetweenSessions; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
};

// Class Tiger.TigerUiNewNotificationHandler
// Size: 0xd0 (Inherited: 0x30)
struct UTigerUiNewNotificationHandler : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnNewItemStatus; // 0x30(0x10)
	struct TMap<enum class ETigerNewNotificationMenuOptions, struct UTigerUiNewNotificationNode*> NodeMap; // 0x40(0x50)
	char pad_90[0x40]; // 0x90(0x40)

	void OnNewItemStatus__DelegateSignature(); // DelegateFunction Tiger.TigerUiNewNotificationHandler.OnNewItemStatus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void OnGroupInvite(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerUiNewNotificationHandler.OnGroupInvite // (Final|Native|Public) // @ game+0x1361710
	void OnFriendInvite(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerUiNewNotificationHandler.OnFriendInvite // (Final|Native|Public) // @ game+0x1361680
	void MarkWeeklyChallengeAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkWeeklyChallengeAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1361580
	void MarkItemAsViewed(struct FTigerItemId InTigerItemId); // Function Tiger.TigerUiNewNotificationHandler.MarkItemAsViewed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13614f0
	void MarkGrimoireEntryAsViewed(uint32_t InId); // Function Tiger.TigerUiNewNotificationHandler.MarkGrimoireEntryAsViewed // (Final|Native|Public) // @ game+0x1361460
	void MarkFriendInviteEntryViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkFriendInviteEntryViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1361440
	void MarkDailyChallengeAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkDailyChallengeAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1361420
	void MarkBattlepassAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkBattlepassAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1361400
	void MarkArchetypeViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkArchetypeViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x13613e0
	void MarkAllGroupInviteEntriesViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkAllGroupInviteEntriesViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x13613c0
	bool IsItemUnviewed(struct FTigerItemId InTigerItemId); // Function Tiger.TigerUiNewNotificationHandler.IsItemUnviewed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1360970
	bool CalculateNewNotificationActive(enum class ETigerNewNotificationMenuOptions InType); // Function Tiger.TigerUiNewNotificationHandler.CalculateNewNotificationActive // (Final|Native|Public|BlueprintCallable) // @ game+0x135d7d0
	void AddNewWeeklyChallenges(); // Function Tiger.TigerUiNewNotificationHandler.AddNewWeeklyChallenges // (Final|Native|Private) // @ game+0x135ca00
	void AddNewGroupInviteEntry(); // Function Tiger.TigerUiNewNotificationHandler.AddNewGroupInviteEntry // (Final|Native|Public) // @ game+0x135c9e0
	void AddNewGrimoireEntry(uint32_t InId); // Function Tiger.TigerUiNewNotificationHandler.AddNewGrimoireEntry // (Final|Native|Public) // @ game+0x135c950
	void AddNewFriendInviteEntry(); // Function Tiger.TigerUiNewNotificationHandler.AddNewFriendInviteEntry // (Final|Native|Public) // @ game+0x135c930
	void AddNewDailyChallenges(); // Function Tiger.TigerUiNewNotificationHandler.AddNewDailyChallenges // (Final|Native|Private) // @ game+0x135c910
	void AddNewBattlepassOrBattlepassLevel(); // Function Tiger.TigerUiNewNotificationHandler.AddNewBattlepassOrBattlepassLevel // (Final|Native|Public) // @ game+0x135c8f0
	void AddNewArchetype(); // Function Tiger.TigerUiNewNotificationHandler.AddNewArchetype // (Final|Native|Public) // @ game+0x135c8d0
};

// Class Tiger.TigerUISettings
// Size: 0x70 (Inherited: 0x38)
struct UTigerUISettings : USharkLocalDeveloperSettings {
	struct FDataTableRowHandle DefaultTextStyle; // 0x38(0x10)
	struct TSoftObjectPtr<struct UDataTable> DefaultTextStyleSet; // 0x48(0x28)
};

// Class Tiger.TigerUser
// Size: 0x48 (Inherited: 0x28)
struct UTigerUser : UObject {
	struct FString DISPLAYNAME; // 0x28(0x10)
	struct FTigerPersistentPlayerID ID; // 0x38(0x10)

	struct UTigerUser* MakeUserFromLocalPlayer(struct UObject* InWorldContextObject); // Function Tiger.TigerUser.MakeUserFromLocalPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1361330
	struct FTigerPersistentPlayerID GetPersistentPlayerID(); // Function Tiger.TigerUser.GetPersistentPlayerID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x135fb90
	struct FString GetDisplayName(); // Function Tiger.TigerUser.GetDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x135f330
};

// Class Tiger.TigerUserInputBinding
// Size: 0x250 (Inherited: 0x28)
struct UTigerUserInputBinding : UObject {
	struct FMulticastInlineDelegate OnPresetChanged; // 0x28(0x10)
	struct FMulticastInlineDelegate OnSettingChangedFromPreset; // 0x38(0x10)
	struct FMulticastInlineDelegate OnInputBindingChanged; // 0x48(0x10)
	struct FMulticastInlineDelegate OnAxisInputBindingChanged; // 0x58(0x10)
	char pad_68[0x70]; // 0x68(0x70)
	struct FTigerInputBindings UserInputs; // 0xd8(0x40)
	struct FTigerInputBindings DefaultInputs; // 0x118(0x40)
	struct TArray<struct FInputActionKeyMapping> DebugMappings; // 0x158(0x10)
	struct TArray<struct UTigerWeaponCycleStyle*> WeaponCycleStyles; // 0x168(0x10)
	struct TArray<struct UTigerWeaponCycleStyle*> WeaponCycleStylesGamepad; // 0x178(0x10)
	struct FString BoundConsoleCommand; // 0x188(0x10)
	struct UCurveFloat* SensitivityCurve; // 0x198(0x08)
	struct UCurveFloat* SensitivityCurveGamepad; // 0x1a0(0x08)
	struct FTigerInputSettings InputSettings; // 0x1a8(0x3c)
	struct FTigerInputSettings DefaultInputSettings; // 0x1e4(0x3c)
	struct UTigerCustomizableKeybindsDataAsset* CustomizableKeybindsDataAsset; // 0x220(0x08)
	struct UTigerInputPresetDataAsset* InputPresetData; // 0x228(0x08)
	struct FName UsedInputPreset; // 0x230(0x08)
	struct FName NameOfCustomPreset; // 0x238(0x08)
	struct UTigerWeaponCycleStyle* DefaultWeaponCycleStyle; // 0x240(0x08)
	bool bIsSwitchingPreset; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)

	void SwitchWeaponCycleStyle(struct FText InWeaponCycleStyle, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.SwitchWeaponCycleStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x1363d70
	void SwitchInputPreset(struct FName InInputPresetToUse); // Function Tiger.TigerUserInputBinding.SwitchInputPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x1363ce0
	void ScopedSensitivityChanged(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.ScopedSensitivityChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x1362b60
	void ResetSettings(); // Function Tiger.TigerUserInputBinding.ResetSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1362b40
	void ResetKeybinds(); // Function Tiger.TigerUserInputBinding.ResetKeybinds // (Final|Native|Public|BlueprintCallable) // @ game+0x1362aa0
	void RebindKey(int32_t ActionMappingIndex, struct FInputActionKeyMapping NewBinding, bool bInSwapKeysOnConflict); // Function Tiger.TigerUserInputBinding.RebindKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13624e0
	void RebindAxisKey(int32_t ActionMappingIndex, struct FInputAxisKeyMapping InNewBinding, bool bInSwapKeysOnConflict); // Function Tiger.TigerUserInputBinding.RebindAxisKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1362320
	void MasterSensitivityChanged(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.MasterSensitivityChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x13615a0
	void LoadInputDefaults(); // Function Tiger.TigerUserInputBinding.LoadInputDefaults // (Final|Native|Public|BlueprintCallable) // @ game+0x1361160
	void InvertYAxisChanged(bool bInInverted, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.InvertYAxisChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x1360510
	void HoldForInventoryChanged(bool bInShouldHold); // Function Tiger.TigerUserInputBinding.HoldForInventoryChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x1360360
	void HoldForHeightenedSensesChanged(bool bInShouldHold); // Function Tiger.TigerUserInputBinding.HoldForHeightenedSensesChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x13602d0
	struct UTigerWeaponCycleStyle* GetUsedWeaponCycleStyle(bool bInForGamepad); // Function Tiger.TigerUserInputBinding.GetUsedWeaponCycleStyle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1360240
	void DirectionalSensitivityChanged(float InHorizontalSensitivity, float InVerticalSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.DirectionalSensitivityChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x135e040
	void AutoSprintChanged(bool bInAutoSprint); // Function Tiger.TigerUserInputBinding.AutoSprintChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x135d740
	void AimingSensitivityChanged(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.AimingSensitivityChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x135ce20
};

// Class Tiger.TigerInputPresetDataAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerInputPresetDataAsset : UDataAsset {
	struct TMap<struct FName, struct FTigerInputPresetData> InputPresets; // 0x30(0x50)

	struct TArray<struct FName> GetInputPresetsArray(); // Function Tiger.TigerInputPresetDataAsset.GetInputPresetsArray // (Final|Native|Public|BlueprintCallable) // @ game+0x135f560
};

// Class Tiger.TigerCustomizableKeybindsDataAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerCustomizableKeybindsDataAsset : UDataAsset {
	struct TMap<struct FName, struct FTigerCustomizableKeybindData> KeybindData; // 0x30(0x50)
	struct TMap<struct FName, struct FTigerCustomizableAxisKeybindData> AxisKeybindData; // 0x80(0x50)
};

// Class Tiger.TigerWeaponCycleStyle
// Size: 0x48 (Inherited: 0x28)
struct UTigerWeaponCycleStyle : UObject {
	int32_t WeaponSlotsToCycle; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FText UiName; // 0x30(0x18)

	int32_t WrapSlotValue(int32_t InSlotAsInt); // Function Tiger.TigerWeaponCycleStyle.WrapSlotValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13656d0
	bool IsValidWeaponSlotToCycle(enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerWeaponCycleStyle.IsValidWeaponSlotToCycle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1360b80
	enum class ETigerWeaponSlot IntToSlot(int32_t InSlotAsInt); // Function Tiger.TigerWeaponCycleStyle.IntToSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1360470
	enum class ETigerWeaponSlot DetermineNextWeaponSlot(struct ATigerPlayerController* InPlayerController, enum class ETigerWeaponCycleDirection InDirection); // Function Tiger.TigerWeaponCycleStyle.DetermineNextWeaponSlot // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerUtilityBFL : UBlueprintFunctionLibrary {

	struct FVector VRandCone(struct FVector InDir, float InConeHalfAngleRad, struct FTigerRangedRandomState InOutRandomState); // Function Tiger.TigerUtilityBFL.VRandCone // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1365590
	void UpdateTelemetryIDBundle(struct FTigerTelemetryIDBundle InBundle); // Function Tiger.TigerUtilityBFL.UpdateTelemetryIDBundle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1365510
	struct FLinearColor UnpackLinearColorFromFloat(float InPackedColor); // Function Tiger.TigerUtilityBFL.UnpackLinearColorFromFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1365480
	float TimeSince(float Time, struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.TimeSince // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13653b0
	void TigerDebugDrawSphere(struct UObject* InWorldContextObject, struct FVector InCenter, float InRadius, int32_t InSegments, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawSphere // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13650f0
	void TigerDebugDrawRotation(struct UObject* InWorldContextObject, struct FRotator InRotation, struct FVector InPosition, float InLength, float InLifeTime); // Function Tiger.TigerUtilityBFL.TigerDebugDrawRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1364f30
	void TigerDebugDrawLine(struct UObject* InWorldContextObject, struct FVector InLineStart, struct FVector InLineEnd, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawLine // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1364cb0
	void TigerDebugDrawCapsule(struct UObject* InWorldContextObject, struct FVector InCenter, float InRadius, float InHalfHeight, struct FRotator InRotation, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawCapsule // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13649b0
	void TigerDebugDrawBox(struct UObject* WorldContextObject, struct FVector InCenter, struct FVector InExtent, struct FRotator InRotation, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawBox // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13646d0
	float TigerApplyPointDamage(struct ATigerCharacter* InDamagedActor, float InBaseDamage, struct FVector InHitFromDirection, struct FHitResult InHitInfo, struct AController* InEventInstigator, struct AActor* InDamageCauser, struct UDamageType* InDamageTypeClass, enum class ETigerDamageCauser InDamageCauserType, struct FString InDamageReason, struct FTigerDamageContext InDamageContext); // Function Tiger.TigerUtilityBFL.TigerApplyPointDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13642e0
	float TigerApplyDamage(struct ATigerCharacter* InDamagedActor, float InBaseDamage, struct AController* InEventInstigator, struct AActor* InDamageCauser, struct UDamageType* InDamageTypeClass, enum class ETigerDamageCauser InDamageCauserType, struct FString InDamageReason, struct FTigerDamageContext InDamageContext); // Function Tiger.TigerUtilityBFL.TigerApplyDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1364000
	struct UProceduralMeshComponent* TigerAddProceduralMeshComponent(struct AActor* Actor, struct FCollisionResponseContainer CollisionResponses, enum class ECollisionChannel CollisionObjectType, struct FName ComponentName); // Function Tiger.TigerUtilityBFL.TigerAddProceduralMeshComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1363ea0
	void StoreOpened(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerUtilityBFL.StoreOpened // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1363c60
	void StoreItemPreviewOpened(struct ATigerPlayerController* InPlayerController, struct FTigerMetaStoreEntry InEntry); // Function Tiger.TigerUtilityBFL.StoreItemPreviewOpened // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1363b60
	void StoreItemPreviewExited(struct ATigerPlayerController* InPlayerController, struct FTigerMetaStoreEntry InEntry); // Function Tiger.TigerUtilityBFL.StoreItemPreviewExited // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1363a60
	void StoreExited(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerUtilityBFL.StoreExited // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13639e0
	void StopAkPlayingId(int32_t AkPlayingId, float FadeOutDuration); // Function Tiger.TigerUtilityBFL.StopAkPlayingId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1363920
	struct FPerfTimerHandle StartPerfTimer(); // Function Tiger.TigerUtilityBFL.StartPerfTimer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13638f0
	void SpawnItemFromTable(struct UObject* InWorldContextObject, struct UTigerItemLootTable* InLootTable, struct FTransform InFirstTransform, struct FTransform InSecondTransform, enum class ETigerTelemetryItemSourceID InItemSource, struct ATigerItemWorldRepresentation* OutFirstSpawnedItem, struct ATigerItemWorldRepresentation* OutSecondSpawnedItem, bool bInSpawnSecondItem, bool bInSimulatePhysics); // Function Tiger.TigerUtilityBFL.SpawnItemFromTable // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1363590
	struct ATigerItemWorldRepresentation* SpawnItem(struct UObject* InWorldContextObject, struct FTransform InTransform, struct UTigerItemAsset* InItem, enum class ETigerTelemetryItemSourceID InItemSource, int32_t InItemCount, bool bInSimulatePhysics); // Function Tiger.TigerUtilityBFL.SpawnItem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1363360
	struct UParticleSystemComponent* SpawnEmitterStrategized(struct UParticleSystem* InSystemToSpawn, struct ATigerCharacter* InInstigatingCharacter, struct FTransform InRelativeTransform, struct FName InAttachPointName, struct USceneComponent* InComponentToAttachTo, struct UTigerParticleStrategyPostSpawn* InPostSpawnStrategy); // Function Tiger.TigerUtilityBFL.SpawnEmitterStrategized // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1363130
	struct UParticleSystemComponent* SpawnEmitterDefaultStrategized(struct UParticleSystem* InSystemToSpawn, struct ATigerCharacter* InInstigatingCharacter, struct FTransform InRelativeTransform, struct FName InAttachPointName, struct USceneComponent* InComponentToAttachTo, struct UTigerParticleStrategyPostSpawn* InPostSpawnStrategy); // Function Tiger.TigerUtilityBFL.SpawnEmitterDefaultStrategized // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1362f00
	bool ShouldAutoSpectateOnDeath(); // Function Tiger.TigerUtilityBFL.ShouldAutoSpectateOnDeath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1362ed0
	void SetTemporalAASamples(int32_t InSamples); // Function Tiger.TigerUtilityBFL.SetTemporalAASamples // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1362e50
	void SetStaticMeshMobility(struct UStaticMeshComponent* MeshComponent, enum class EComponentMobility NewMobility); // Function Tiger.TigerUtilityBFL.SetStaticMeshMobility // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1362d90
	void SetSignificanceManagerBudgetType(struct UObject* InWorldContextObject, enum class ETigerSignificanceBudgetType InBudgetType); // Function Tiger.TigerUtilityBFL.SetSignificanceManagerBudgetType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1362cd0
	void SetCurrentAudioCultureForced(struct FString InNewAudioCulture); // Function Tiger.TigerUtilityBFL.SetCurrentAudioCultureForced // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1362c40
	void RunAllFunctionalTestsOnMap(); // Function Tiger.TigerUtilityBFL.RunAllFunctionalTestsOnMap // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xbce790
	void ResetMaterialsToMeshDefault(struct UPrimitiveComponent* Component); // Function Tiger.TigerUtilityBFL.ResetMaterialsToMeshDefault // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1362ac0
	void RenameActorInstance(struct AActor* InActor, struct FString InName); // Function Tiger.TigerUtilityBFL.RenameActorInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13629d0
	void RecordStartOfTutorialObjective(struct UObject* InWorldContextObject, struct FString InTimeStampId, struct FVector InLocation); // Function Tiger.TigerUtilityBFL.RecordStartOfTutorialObjective // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13628b0
	void RecordStartOfTutorial(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.RecordStartOfTutorial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1362830
	void RecordEndOfTutorialObjective(struct UObject* InWorldContextObject, struct FString InTimeStampId); // Function Tiger.TigerUtilityBFL.RecordEndOfTutorialObjective // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1362760
	void RecordEndOfTutorial(struct UObject* InWorldContextObject, bool InTutorialFinished); // Function Tiger.TigerUtilityBFL.RecordEndOfTutorial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13626a0
	void PrintPerfTimer(struct FPerfTimerHandle Handle, bool bPrintToLog, struct FLinearColor TextColor); // Function Tiger.TigerUtilityBFL.PrintPerfTimer // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13621f0
	int32_t PostAudioVisualizedAkEventOnComponent(struct UAkAudioEvent* InEvent, struct AActor* InActor, struct UTigerAudioVisualizationSpawnerComponent* InVisualizationComponent, struct FName InAttachPointName, bool bInStopWhenAttachedToDestroyed, struct FString InEventName); // Function Tiger.TigerUtilityBFL.PostAudioVisualizedAkEventOnComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1361fc0
	int32_t PostAudioVisualizedAkEventAtLocation(struct UAkAudioEvent* InEvent, struct FVector InLocation, struct FRotator InOrientation, struct UTigerAudioVisualizationSpawnerComponent* InVisualizationComponent, struct FString InEventName); // Function Tiger.TigerUtilityBFL.PostAudioVisualizedAkEventAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1361dc0
	int32_t PostAudioVisualizedAkEvent(struct UAkAudioEvent* InEvent, struct ATigerPlayer* InPlayer, struct FName InAttachPointName, bool bInStopWhenAttachedToDestroyed, struct FString InEventName); // Function Tiger.TigerUtilityBFL.PostAudioVisualizedAkEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1361bd0
	void PostAkEventRaw(int32_t InAkPlayingId, struct UAkAudioEvent* InAkAudioEvent, struct AActor* InOwner, bool bInStopWhenOwnerIsDestroyed); // Function Tiger.TigerUtilityBFL.PostAkEventRaw // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1361a70
	int32_t PostAkEventIfLocallyControlled(struct AActor* InActor, struct UAkAudioEvent* InEvent); // Function Tiger.TigerUtilityBFL.PostAkEventIfLocallyControlled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13619a0
	bool PartialMatch(struct FString InRegexPattern, struct FString InInput); // Function Tiger.TigerUtilityBFL.PartialMatch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1361830
	float PackLinearColorToFloat(struct FLinearColor InColor); // Function Tiger.TigerUtilityBFL.PackLinearColorToFloat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13617a0
	void OnItemAppliedToCard__DelegateSignature(struct FTigerPersistentPlayerCardData InCard); // DelegateFunction Tiger.TigerUtilityBFL.OnItemAppliedToCard__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x16c0340
	void OnItemAppliedToApperance__DelegateSignature(struct FTigerCharacterAppearance InAppearance); // DelegateFunction Tiger.TigerUtilityBFL.OnItemAppliedToApperance__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x16c0340
	struct FTigerDamageContext MakeTigerDamageContext(struct UObject* InUObject); // Function Tiger.TigerUtilityBFL.MakeTigerDamageContext // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1361290
	struct UObject* LoadObjectOfType(struct TSoftObjectPtr<struct UObject> ObjectPath, struct UObject* Type); // Function Tiger.TigerUtilityBFL.LoadObjectOfType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1361180
	struct UObject* LoadDefaultObjectFromSoftClass(SoftClassProperty InSoftClass, struct UObject* InOutputType); // Function Tiger.TigerUtilityBFL.LoadDefaultObjectFromSoftClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1361010
	void LoadClan(struct TSoftObjectPtr<struct UTigerPlayerClanData> ClanPath, struct UTigerPlayerClanData* ClanData); // Function Tiger.TigerUtilityBFL.LoadClan // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1360f00
	struct FText ListChanges(struct TArray<float> Changes, struct FText Prefix, struct FText Suffix, struct FText Seperator); // Function Tiger.TigerUtilityBFL.ListChanges // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1360c10
	bool IsValidCharacterId(struct FTigerPersistentCharacterID CharacterId); // Function Tiger.TigerUtilityBFL.IsValidCharacterId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1360af0
	bool IsSameCharacterId(struct FTigerPersistentCharacterID CharacterA, struct FTigerPersistentCharacterID CharacterB); // Function Tiger.TigerUtilityBFL.IsSameCharacterId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1360a10
	bool IsInTutorial(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInTutorial // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13608e0
	bool IsInTransferFromMatch(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInTransferFromMatch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1360850
	bool IsInMatch(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInMatch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13607c0
	bool IsInElysium(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.IsInElysium // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1360730
	bool IsInEditor(); // Function Tiger.TigerUtilityBFL.IsInEditor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1360700
	bool IsInBenchmark(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInBenchmark // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1360670
	bool IsEditorBuild(); // Function Tiger.TigerUtilityBFL.IsEditorBuild // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x924bb0
	bool IsDirectlyHovered(struct UWidget* Widget); // Function Tiger.TigerUtilityBFL.IsDirectlyHovered // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13605e0
	void InitializeCharacterAlignmentAk(struct AActor* Actor); // Function Tiger.TigerUtilityBFL.InitializeCharacterAlignmentAk // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13603f0
	struct FTigerPersistentPlayerTransactionalData GetTransactionalPlayerData(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.GetTransactionalPlayerData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13601b0
	void GetTimeLeftForStoreEntry(struct UObject* InWorldContextObject, struct FTigerMetaStoreEntry InStoreEntry, bool bOutHasExpired, struct FTimespan OutTimeLeft); // Function Tiger.TigerUtilityBFL.GetTimeLeftForStoreEntry // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x135fff0
	struct UTigerGameInstance* GetTigerGameInstance(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetTigerGameInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135ff60
	int32_t GetTemporalAASamples(); // Function Tiger.TigerUtilityBFL.GetTemporalAASamples // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x135ff30
	struct FTigerPersistentPlayerCharacterData GetSelectedCharacterData(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetSelectedCharacterData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135fe70
	struct FTigerCharacterAppearance GetSelectedCharacterAppearance(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetSelectedCharacterAppearance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135fde0
	float GetScrollBoxContentSpace(struct UScrollBox* ScrollBox); // Function Tiger.TigerUtilityBFL.GetScrollBoxContentSpace // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135fd50
	struct UNiagaraSystem* GetPreloadedNiagaraSystem(struct UObject* WorldContextObject, struct FSoftObjectPath SoftObjectPath); // Function Tiger.TigerUtilityBFL.GetPreloadedNiagaraSystem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x135fc60
	struct FTigerPersistentPlayerCardData GetPlayerCardData(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetPlayerCardData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135fbd0
	float GetPerfTimerElapsedTime(struct FPerfTimerHandle Handle); // Function Tiger.TigerUtilityBFL.GetPerfTimerElapsedTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135faf0
	struct UTigerPartyManager* GetPartyManager(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetPartyManager // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135fa60
	int32_t GetNearestScrollBoxToPoint(struct TArray<struct UScrollBox*> Boxes, struct FVector2D Point); // Function Tiger.TigerUtilityBFL.GetNearestScrollBoxToPoint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x135f960
	struct ATigerPlayerController* GetLocalPlayerController(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.GetLocalPlayerController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f8d0
	struct ATigerPlayer* GetLocalPlayer(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.GetLocalPlayer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f840
	float GetLastRenderTime(struct UPrimitiveComponent* Primitive); // Function Tiger.TigerUtilityBFL.GetLastRenderTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f7b0
	struct UTigerItemDatabase* GetItemsDatabase(); // Function Tiger.TigerUtilityBFL.GetItemsDatabase // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f780
	struct FTigerItemId GetItemIdForItem(SoftClassProperty InItemPathFrom); // Function Tiger.TigerUtilityBFL.GetItemIdForItem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f670
	struct UTigerInventoryItemBase* GetItemFromItemId(struct FTigerItemId InItemId); // Function Tiger.TigerUtilityBFL.GetItemFromItemId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f5e0
	int32_t GetHardCurrency(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetHardCurrency // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f4d0
	struct UTigerGrimoireTree* GetGrimoireTree(); // Function Tiger.TigerUtilityBFL.GetGrimoireTree // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x135f4a0
	float GetGameTimeSecondsByContext(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetGameTimeSecondsByContext // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f410
	float GetGameTimeSeconds(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetGameTimeSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f380
	enum class ETigerDamageCauser GetDamageCauserFromCharacter(struct ATigerCharacter* InCharacter); // Function Tiger.TigerUtilityBFL.GetDamageCauserFromCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f270
	struct FString GetComputerIdentifier(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetComputerIdentifier // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135f1a0
	void GetCommandLineInteger(struct FString ParameterName, bool ParameterExists, int32_t Integer); // Function Tiger.TigerUtilityBFL.GetCommandLineInteger // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x135f060
	struct AActor* GetClosestActorToLocation(struct AActor* ActorClass, struct TArray<struct AActor*> ActorArray, struct FVector Location); // Function Tiger.TigerUtilityBFL.GetClosestActorToLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x135ee10
	struct UObject* GetClassDefaultObject(struct UObject* Class); // Function Tiger.TigerUtilityBFL.GetClassDefaultObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135ed80
	int32_t GetBuildVersion(); // Function Tiger.TigerUtilityBFL.GetBuildVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135ed50
	struct TArray<SoftClassProperty> GetBlueprintsUsingTelemetryID(); // Function Tiger.TigerUtilityBFL.GetBlueprintsUsingTelemetryID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x135ec60
	struct UTigerBloodTrackPassiveList* GetBloodTrackPassiveList(); // Function Tiger.TigerUtilityBFL.GetBloodTrackPassiveList // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135ec30
	struct FTigerPropAttachmentInfo GetAttachmentInfoFromIdentifierAndClass(struct ATigerPropDummy* Subclass, struct FName Identifier); // Function Tiger.TigerUtilityBFL.GetAttachmentInfoFromIdentifierAndClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x135eb30
	float GetAngleDeltaDegrees(float Angle1, float Angle2); // Function Tiger.TigerUtilityBFL.GetAngleDeltaDegrees // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135ea60
	struct USharkAccounts* GetAccountSystem(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetAccountSystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135e9d0
	struct FString FormatDate(struct FDateTime DateTime, struct FText Format); // Function Tiger.TigerUtilityBFL.FormatDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x135e850
	struct TArray<struct FTigerTelemetryIDCollisionBundle> FindTelemetryIDCollisions(struct TArray<struct FTigerTelemetryIDBundle> InIDBundles, bool bOutHadInvalidIDs, bool bOutValidIDsExisted); // Function Tiger.TigerUtilityBFL.FindTelemetryIDCollisions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135e690
	bool ExportTelemetryIdsToJson(struct TArray<struct FTigerTelemetryIDBundle> InIDBundles, struct FTigerTelemetryIDExportFilter InFilter); // Function Tiger.TigerUtilityBFL.ExportTelemetryIdsToJson // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135e590
	void ExportTelemetryDefinitionsToJson(struct FString InPingDefinitionName, struct FTigerTelemetryDefinition InPingDefinition); // Function Tiger.TigerUtilityBFL.ExportTelemetryDefinitionsToJson // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135e420
	bool EqualTigerPersistentPlayerId(struct FTigerPersistentPlayerID InLHS, struct FTigerPersistentPlayerID InRHS); // Function Tiger.TigerUtilityBFL.EqualTigerPersistentPlayerId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135e2b0
	bool EqualTigerItemIDs(struct FTigerItemId InLHS, struct FTigerItemId InRHS); // Function Tiger.TigerUtilityBFL.EqualTigerItemIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135e1e0
	void DisableReplicationInElysium(struct UActorComponent* InActorComponent); // Function Tiger.TigerUtilityBFL.DisableReplicationInElysium // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x135e160
	bool DestroyActorIfNotEditorBuild(struct AActor* InActor); // Function Tiger.TigerUtilityBFL.DestroyActorIfNotEditorBuild // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x135dfb0
	void DedicatedServerBranch(struct UObject* WorldContextObject, enum class ETigerIsDedicatedServer NetMode); // Function Tiger.TigerUtilityBFL.DedicatedServerBranch // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135dee0
	struct FTigerChatMessage CreateGameChatMessage(struct FText InMessage, bool bInIsChatBanMessage); // Function Tiger.TigerUtilityBFL.CreateGameChatMessage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x135dc40
	int32_t ConvertInt64ToInt(int64_t Int64Value, bool bSuccess); // Function Tiger.TigerUtilityBFL.ConvertInt64ToInt // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x135db60
	bool CheckTelemetryIDIsCollisionFree(struct TArray<struct FTigerTelemetryIDBundle> InIDBundles, struct FTigerTelemetryIDBundle InBundleToValidate, int32_t InOuterIndex, int32_t OutInnerCollisionIndex); // Function Tiger.TigerUtilityBFL.CheckTelemetryIDIsCollisionFree // (Final|Native|Static|Public|HasOutParms) // @ game+0x135d9d0
	struct TArray<struct FTigerTelemetryIDBundle> CheckAndGenerateUniqueTelemetryIds(struct TArray<struct FTigerTelemetryIDBundle> InIDBundles); // Function Tiger.TigerUtilityBFL.CheckAndGenerateUniqueTelemetryIds // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135d8e0
	void CenterMouseLocation(struct ATigerPlayerController* PlayerController); // Function Tiger.TigerUtilityBFL.CenterMouseLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x135d860
	bool ArePlayerStateArraysEqual(struct TArray<struct APlayerState*> InLeft, struct TArray<struct APlayerState*> InRight); // Function Tiger.TigerUtilityBFL.ArePlayerStateArraysEqual // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135d620
	bool AreOutfitPhysicalMeshesValid(struct FTigerPersistentOutfitSetup InOutfitSetup); // Function Tiger.TigerUtilityBFL.AreOutfitPhysicalMeshesValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135d550
	void ApplyItemToCardAsync(SoftClassProperty InItemPath, struct FTigerPersistentPlayerCardData InCardData, struct FDelegate InDelegate); // Function Tiger.TigerUtilityBFL.ApplyItemToCardAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135d3d0
	void ApplyItemToAppearance(SoftClassProperty InItemPath, int32_t InSlot, struct FTigerCharacterAppearance InAppearance, enum class ETigerPowerKitType InUsedPowerKit, enum class ETigerClan InClan, struct FDelegate InDelegate); // Function Tiger.TigerUtilityBFL.ApplyItemToAppearance // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135d170
	void ApplyCustomizationParametersToMeshComponentFiltered(struct FTigerCharacterCustomizationParameters InParams, struct USkeletalMeshComponent* InMeshComponent, enum class ETigerCharacterMeshPart InPart); // Function Tiger.TigerUtilityBFL.ApplyCustomizationParametersToMeshComponentFiltered // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135d020
	void ApplyCustomizationParametersToMeshComponent(struct FTigerCharacterCustomizationParameters Params, struct USkeletalMeshComponent* MeshComponent); // Function Tiger.TigerUtilityBFL.ApplyCustomizationParametersToMeshComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135cf00
	struct UProceduralMeshComponent* AddProceduralMeshWithSection(struct AActor* Actor, struct TArray<struct FVector> Vertices, struct TArray<int32_t> Triangles, struct TArray<struct FVector> Normals, struct TArray<struct FVector2D> UV0, struct TArray<struct FLinearColor> VertexColors, struct TArray<struct FProcMeshTangent> Tangents, bool bCreateCollision, struct FCollisionResponseContainer CollisionResponses, enum class ECollisionChannel CollisionObjectType); // Function Tiger.TigerUtilityBFL.AddProceduralMeshWithSection // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x135ca20
};

// Class Tiger.TigerUtilityPowerBaseComponent
// Size: 0xe8 (Inherited: 0xb0)
struct UTigerUtilityPowerBaseComponent : UActorComponent {
	struct FText UtilityName; // 0xb0(0x18)
	struct FText UtilityDescription; // 0xc8(0x18)
	bool bUseClientBackgroundUpdate; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
};

// Class Tiger.TigerUtilityPowerHSenseComponent
// Size: 0x148 (Inherited: 0xb0)
struct UTigerUtilityPowerHSenseComponent : UActorComponent {
	struct FMulticastInlineDelegate OnHeightenedSensesUsed; // 0xb0(0x10)
	struct TArray<struct FTigerNPCMasqueradeStateMessage> NPCMasqueradeStates; // 0xc0(0x10)
	struct TArray<struct AActor*> ActiveHeightenedSenseObjects; // 0xd0(0x10)
	float HeightenedSensesDirectLosExtent; // 0xe0(0x04)
	float HeightenedSensesIndirectLosExtent; // 0xe4(0x04)
	float MaxFadeInTimer; // 0xe8(0x04)
	float MaxFadeOutTimer; // 0xec(0x04)
	float PulseDuration; // 0xf0(0x04)
	float CooldownTimeAfterActivation; // 0xf4(0x04)
	float MovementMultiplierWhenActive; // 0xf8(0x04)
	float CurrentFadeInTimer; // 0xfc(0x04)
	float CurrentFadeOutTimer; // 0x100(0x04)
	float CooldownEndTime; // 0x104(0x04)
	float PulseTimeLeft; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct UAkAudioEvent* FailedUseAudioEvent; // 0x110(0x08)
	int32_t CancellingActions; // 0x118(0x04)
	bool ActivateHeightenedSensesStartupFinished; // 0x11c(0x01)
	bool DeactivateHeightenedSensesStartupFinished; // 0x11d(0x01)
	bool bShouldStopSprintingWhenActive; // 0x11e(0x01)
	bool bShouldPulse; // 0x11f(0x01)
	bool bIsHeightenedSensesActive; // 0x120(0x01)
	char pad_121[0x7]; // 0x121(0x07)
	struct TArray<struct FTigerDisableHSenseTarget> DisabledHeightenedSensesActors; // 0x128(0x10)
	char pad_138[0x10]; // 0x138(0x10)

	void UpdateHeightenedSensesEffects(); // Function Tiger.TigerUtilityPowerHSenseComponent.UpdateHeightenedSensesEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x1369f60
	void UpdateBloodResonanceBlendAudio(); // Function Tiger.TigerUtilityPowerHSenseComponent.UpdateBloodResonanceBlendAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x1369f40
	void TriggerHeightenedSensesEffects(); // Function Tiger.TigerUtilityPowerHSenseComponent.TriggerHeightenedSensesEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x1369e30
	void ToggledHeightenedSenses__DelegateSignature(bool bIsNowActive); // DelegateFunction Tiger.TigerUtilityPowerHSenseComponent.ToggledHeightenedSenses__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void Server_UnsubscribeToHeightenedSenseData(); // Function Tiger.TigerUtilityPowerHSenseComponent.Server_UnsubscribeToHeightenedSenseData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1369c00
	void Server_OnActivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.Server_OnActivateHeightenedSenses // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1369aa0
	void OnDeactivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.OnDeactivateHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnActivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.OnActivateHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	bool IsWithinHeightenedSensesRanges(struct AActor* InCharacter); // Function Tiger.TigerUtilityPowerHSenseComponent.IsWithinHeightenedSensesRanges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1369600
	bool IsHeightenedSensesActive(); // Function Tiger.TigerUtilityPowerHSenseComponent.IsHeightenedSensesActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13695d0
	float GetHeightenedSensesViewLength(); // Function Tiger.TigerUtilityPowerHSenseComponent.GetHeightenedSensesViewLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13692b0
	float GetCurrentHeightenedSensesViewLength(); // Function Tiger.TigerUtilityPowerHSenseComponent.GetCurrentHeightenedSensesViewLength // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16c0340
	float GetCooldownTimeLeft(); // Function Tiger.TigerUtilityPowerHSenseComponent.GetCooldownTimeLeft // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1369280
	void DeactivateHeightenedSenseObjects(); // Function Tiger.TigerUtilityPowerHSenseComponent.DeactivateHeightenedSenseObjects // (Final|Native|Public|BlueprintCallable) // @ game+0x1369130
	void Client_DeactivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.Client_DeactivateHeightenedSenses // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1369060
};

// Class Tiger.TigerUtilityPowerLureComponent
// Size: 0x120 (Inherited: 0xe8)
struct UTigerUtilityPowerLureComponent : UTigerUtilityPowerBaseComponent {
	float TimeToLure; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct UAnimMontage* LureAnimation; // 0xf0(0x08)
	struct USoundBase* LureWhistleSound; // 0xf8(0x08)
	float ClientFeedbackUpdateTickInterval; // 0x100(0x04)
	char pad_104[0x1c]; // 0x104(0x1c)

	void Server_StopLureAttempt(); // Function Tiger.TigerUtilityPowerLureComponent.Server_StopLureAttempt // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1369bb0
	void Server_StartLureAttempt(struct ATigerNPC* TargetNpc); // Function Tiger.TigerUtilityPowerLureComponent.Server_StartLureAttempt // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1369af0
	void OnSuccesfulLure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnSuccesfulLure // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStoppedChannelingLure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnStoppedChannelingLure // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnStartedChannelingLure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnStartedChannelingLure // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnLureEffectEnded(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnLureEffectEnded // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Multicast_StoppedLureAttempt(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.Multicast_StoppedLureAttempt // (Net|Native|Event|NetMulticast|Public) // @ game+0x13696e0
	void Multicast_StartedLureAttempt(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.Multicast_StartedLureAttempt // (Net|Native|Event|NetMulticast|Public) // @ game+0x125e920
	void Multicast_Lure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.Multicast_Lure // (Net|Native|Event|NetMulticast|Public) // @ game+0x125fa40
	void Client_SyncSuccessfulLureTarget(struct ATigerNPC* TargetNpc); // Function Tiger.TigerUtilityPowerLureComponent.Client_SyncSuccessfulLureTarget // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x13690a0
	void Client_StopLureAttempt(); // Function Tiger.TigerUtilityPowerLureComponent.Client_StopLureAttempt // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1369080
};

// Class Tiger.TigerUtilityPowerRoar
// Size: 0x138 (Inherited: 0xe8)
struct UTigerUtilityPowerRoar : UTigerUtilityPowerBaseComponent {
	float DurationAIAreAffected; // 0xe8(0x04)
	float ConeEffectLength; // 0xec(0x04)
	float SphereEffectRadius; // 0xf0(0x04)
	float ConeWidthAngle; // 0xf4(0x04)
	float Cooldown; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct UAnimMontage* RoarStaggerAnimation; // 0x100(0x08)
	struct UAnimMontage* RoarAnimation; // 0x108(0x08)
	struct UAkAudioEvent* RoarSoundEvent; // 0x110(0x08)
	char pad_118[0x20]; // 0x118(0x20)

	void Server_AttemptRoar(); // Function Tiger.TigerUtilityPowerRoar.Server_AttemptRoar // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1369a50
	void Multicast_Roar(); // Function Tiger.TigerUtilityPowerRoar.Multicast_Roar // (Net|Native|Event|NetMulticast|Protected) // @ game+0x13696c0
	void Client_ConfirmRoarUsage(); // Function Tiger.TigerUtilityPowerRoar.Client_ConfirmRoarUsage // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1369040
};

// Class Tiger.TigerVehicle
// Size: 0x288 (Inherited: 0x278)
struct ATigerVehicle : ATigerActivatedObject {
	struct ATigerLootableVehicleDoorSpawner* LootableDoorSpawner; // 0x278(0x08)
	struct ATigerLootContainer* LootContainer; // 0x280(0x08)

	void ChangeLootableDoorActorClass(struct ATigerLootableVehicleDoorSpawner* InClass); // Function Tiger.TigerVehicle.ChangeLootableDoorActorClass // (Final|Native|Protected|BlueprintCallable) // @ game+0x1368fb0
};

// Class Tiger.TigerVendorStoreCategory
// Size: 0x50 (Inherited: 0x28)
struct UTigerVendorStoreCategory : UObject {
	struct TArray<struct FTigerVendorStoreCategoryItem> CachedItems; // 0x28(0x10)
	struct TArray<struct FTigerPersistentItemDefinition> ItemDefinitions; // 0x38(0x10)
	char pad_48[0x8]; // 0x48(0x08)

	struct TArray<struct FTigerVendorStoreCategoryItem> GetItemsWithClass(struct UTigerInventoryItemBase* Class); // Function Tiger.TigerVendorStoreCategory.GetItemsWithClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1369320
	struct TArray<struct FTigerVendorStoreCategoryItem> GetItems(); // Function Tiger.TigerVendorStoreCategory.GetItems // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x13692e0
	enum class ETigerPersistentStoreCategory GetCategoryType(); // Function Tiger.TigerVendorStoreCategory.GetCategoryType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1369260
};

// Class Tiger.TigerVendorComponent
// Size: 0x130 (Inherited: 0xb0)
struct UTigerVendorComponent : UActorComponent {
	struct TArray<struct UTigerVendorStoreCategory*> DynamicCategories; // 0xb0(0x10)
	char pad_C0[0x70]; // 0xc0(0x70)

	void UnsubscribeToStoreEntryConfigEvents(enum class ETigerMetaStoreCategoryType InStoreEntryCategory, struct FDelegate InEventDelegate); // Function Tiger.TigerVendorComponent.UnsubscribeToStoreEntryConfigEvents // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1369e50
	void TigerPurchaseItemDelegate__DelegateSignature(bool bInSuccess, struct FString InErrorString, struct FTigerItemId InItemId); // DelegateFunction Tiger.TigerVendorComponent.TigerPurchaseItemDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x16c0340
	void SubscribeToStoreEntryConfigEvents(enum class ETigerMetaStoreCategoryType InStoreEntryCategory, struct FDelegate InEventDelegate); // Function Tiger.TigerVendorComponent.SubscribeToStoreEntryConfigEvents // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1369c70
	void SaveOutfitSetup(struct FTigerPersistentOutfitSetup OutfitSetup); // Function Tiger.TigerVendorComponent.SaveOutfitSetup // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1369980
	struct FTigerItemPrice GetSpecialItemCost(struct FTigerItemId InItemId); // Function Tiger.TigerVendorComponent.GetSpecialItemCost // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1369490
	struct UTigerVendorStoreCategory* GetCategory(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerVendorComponent.GetCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13691d0
};

// Class Tiger.TigerVendorUI
// Size: 0x2b8 (Inherited: 0x290)
struct UTigerVendorUI : UTigerMenuWidget {
	struct TWeakObjectPtr<struct ATigerNPC> VendorNPC; // 0x290(0x08)
	struct TWeakObjectPtr<struct UTigerInteractiveNpcComponent> InteractiveNpcComponent; // 0x298(0x08)
	struct UTigerSharedVendorUI* SharedVendorUI; // 0x2a0(0x08)
	bool bHideMouseCusorAtDescruction; // 0x2a8(0x01)
	char pad_2A9[0x1]; // 0x2a9(0x01)
	bool bUseTransitions; // 0x2aa(0x01)
	char pad_2AB[0x5]; // 0x2ab(0x05)
	struct UTigerIngameSubmenuWidget* BattlepassSubMenuClass; // 0x2b0(0x08)

	bool ShouldUseTransitions(); // Function Tiger.TigerVendorUI.ShouldUseTransitions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1369c50
	void OpenBattlepassMenu(); // Function Tiger.TigerVendorUI.OpenBattlepassMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1369960
	void OnMenuBuy(); // Function Tiger.TigerVendorUI.OnMenuBuy // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16c0340
	void OnCloseVendorWidget(bool bShouldRemoveWidget); // Function Tiger.TigerVendorUI.OnCloseVendorWidget // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnAddToScreen(); // Function Tiger.TigerVendorUI.OnAddToScreen // (Event|Public|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerVisitLocationTriggerVolume
// Size: 0x280 (Inherited: 0x260)
struct ATigerVisitLocationTriggerVolume : ATriggerVolume {
	char pad_260[0x20]; // 0x260(0x20)

	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerVisitLocationTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x1369770
	void OnAreaEntered__DelegateSignature(); // DelegateFunction Tiger.TigerVisitLocationTriggerVolume.OnAreaEntered__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerVisitLocationTriggerVolume.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x1369540
};

// Class Tiger.TigerVoSettings
// Size: 0xb0 (Inherited: 0x38)
struct UTigerVoSettings : USharkLocalDeveloperSettings {
	struct TSoftObjectPtr<struct UAkAudioEvent> AudioEvent; // 0x38(0x28)
	struct TMap<struct FName, struct FTigerVoCategoryData> CategoryData; // 0x60(0x50)
};

// Class Tiger.TigerVoSubsystem
// Size: 0xe8 (Inherited: 0x30)
struct UTigerVoSubsystem : UGameInstanceSubsystem {
	struct UAkAudioEvent* AudioEvent; // 0x30(0x08)
	char pad_38[0xa0]; // 0x38(0xa0)
	struct TArray<struct FTigerVoEvent> VoEvents; // 0xd8(0x10)

	float AddVoEvent(struct FTigerVoEvent InVoEvent); // Function Tiger.TigerVoSubsystem.AddVoEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1368f00
};

// Class Tiger.TigerWardrobeUI
// Size: 0x480 (Inherited: 0x3b0)
struct UTigerWardrobeUI : UTigerSceneBackgroundUI {
	struct UTigerVendorComponent* VendorComponent; // 0x3b0(0x08)
	struct TArray<struct UTigerVendorStoreCategory*> InventoryCategories; // 0x3b8(0x10)
	struct UTigerVendorStoreCategory* CurrentCategory; // 0x3c8(0x08)
	char pad_3D0[0xb0]; // 0x3d0(0xb0)

	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerWardrobeUI.OnSelectedCharacterChanged // (Final|Native|Protected) // @ game+0x13698d0
	void OnPlayerInventoryChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerWardrobeUI.OnPlayerInventoryChanged // (Final|Native|Protected) // @ game+0x1369840
	void OnCategoryItemsReceived(enum class ETigerPersistentStoreCategory CategoryType, struct TArray<struct FTigerVendorStoreCategoryItem> CategoryItems); // Function Tiger.TigerWardrobeUI.OnCategoryItemsReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnBodyTypeChanged(enum class ETigerGender InBodyType); // Function Tiger.TigerWardrobeUI.OnBodyTypeChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void FetchCategoryItems(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerWardrobeUI.FetchCategoryItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1369150
};

// Class Tiger.TigerThrowingAxeConfig
// Size: 0x1e0 (Inherited: 0x170)
struct UTigerThrowingAxeConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAnimMontage* StartAimingPoseMontage; // 0x170(0x08)
	struct UAnimMontage* ReadyAxeMontage; // 0x178(0x08)
	bool bDebugInfiniteAxes; // 0x180(0x01)
	bool bDebugDrawPredictedProjectilePath; // 0x181(0x01)
	char pad_182[0x2]; // 0x182(0x02)
	struct FName CastAnimationName; // 0x184(0x08)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct AActor* ThrowingAxeProjectile; // 0x190(0x08)
	struct UTigerItemAsset* AxeItem; // 0x198(0x08)
	struct FName AxeSpawnSocket; // 0x1a0(0x08)
	float ForwardOffset; // 0x1a8(0x04)
	struct FRotator AxeSpawnRotationOffset; // 0x1ac(0x0c)
	float ProjectileDamage; // 0x1b8(0x04)
	float ProjectileStartSpeed; // 0x1bc(0x04)
	float ProjectileMaxSpeed; // 0x1c0(0x04)
	float ProjectileMassInKg; // 0x1c4(0x04)
	struct FRotator ProjectileRotationPerSecond; // 0x1c8(0x0c)
	float ProjectileGravityScale; // 0x1d4(0x04)
	float MovementMultiplierAimState; // 0x1d8(0x04)
	char pad_1DC[0x4]; // 0x1dc(0x04)
};

// Class Tiger.TigerWeaponAbilityAxeThrow
// Size: 0x108 (Inherited: 0xf0)
struct UTigerWeaponAbilityAxeThrow : UTigerDisciplineAnimTriggered {
	struct UTigerThrowingAxeConfig* Config; // 0xf0(0x08)
	struct ATigerPlayer* Player; // 0xf8(0x08)
	char pad_100[0x8]; // 0x100(0x08)

	void ThrowMontageEnded(struct UAnimMontage* Montage, bool bWasInterrupted); // Function Tiger.TigerWeaponAbilityAxeThrow.ThrowMontageEnded // (Final|Native|Private) // @ game+0x1369d60
	void Multicast_RevertWeaponVisibilityOnSimulatedProxy(); // Function Tiger.TigerWeaponAbilityAxeThrow.Multicast_RevertWeaponVisibilityOnSimulatedProxy // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x13696a0
};

// Class Tiger.TigerDashConfig
// Size: 0x1d0 (Inherited: 0x170)
struct UTigerDashConfig : UTigerDisciplineAnimTriggeredConfig {
	struct FVector HitBoxExtents; // 0x170(0x0c)
	struct FVector HitBoxOffset; // 0x17c(0x0c)
	float DashDistance; // 0x188(0x04)
	float DashDuration; // 0x18c(0x04)
	float Damage; // 0x190(0x04)
	float DashExitVelocity; // 0x194(0x04)
	float SurfaceStopThreshold; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct UAnimMontage* RecoveryMontage; // 0x1a0(0x08)
	struct UAnimMontage* RecoveryMontageInAir; // 0x1a8(0x08)
	float RecoveryCancelledBlendOut; // 0x1b0(0x04)
	float RecoveryCancelledBlendOutInAir; // 0x1b4(0x04)
	struct UParticleSystem* DashPSTemplate; // 0x1b8(0x08)
	struct UAnimMontage* AirDashMontage; // 0x1c0(0x08)
	float PlayAirAnimAngleToSurfaceThreshold; // 0x1c8(0x04)
	char pad_1CC[0x4]; // 0x1cc(0x04)
};

// Class Tiger.TigerWeaponAbilityDash
// Size: 0xc8 (Inherited: 0x78)
struct UTigerWeaponAbilityDash : UTigerDisciplineBase {
	struct UTigerDashConfig* AbilityConfig; // 0x78(0x08)
	struct FVector CastDirection; // 0x80(0x0c)
	struct FVector CastLocation; // 0x8c(0x0c)
	char pad_98[0x30]; // 0x98(0x30)

	void RecoveryMontageEnded(struct UAnimMontage* Montage, bool bWasInterrupted); // Function Tiger.TigerWeaponAbilityDash.RecoveryMontageEnded // (Final|Native|Private) // @ game+0x136d9b0
	void OnTerrainInterrupt(struct AActor* TerrainActor, struct UPrimitiveComponent* HitComponent, struct FHitResult HitResult); // Function Tiger.TigerWeaponAbilityDash.OnTerrainInterrupt // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnTerrainHitResult(struct AActor* InTerrainActor, struct UPrimitiveComponent* InHitComponent, struct FHitResult InHitResult); // Function Tiger.TigerWeaponAbilityDash.OnTerrainHitResult // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void OnTerrainHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult Hit); // Function Tiger.TigerWeaponAbilityDash.OnTerrainHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x136d7d0
	void OnOwnerMovementUpdated(float DeltaSeconds, struct FVector OldLocation, struct FVector OldVelocity); // Function Tiger.TigerWeaponAbilityDash.OnOwnerMovementUpdated // (Final|Native|Private|HasDefaults) // @ game+0x136d6a0
	void OnForcedMoveResult(enum class ETigerForcedMoveResult ForcedMoveResult); // Function Tiger.TigerWeaponAbilityDash.OnForcedMoveResult // (Final|Native|Private) // @ game+0x136d620
	void OnCharacterHit(struct ATigerCharacter* AHitTigerCharacter); // Function Tiger.TigerWeaponAbilityDash.OnCharacterHit // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void Multicast_SpawnOnHitParticle(struct ATigerCharacter* TigerCharacterHit); // Function Tiger.TigerWeaponAbilityDash.Multicast_SpawnOnHitParticle // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x136d550
	void Multicast_PlayRecovery(); // Function Tiger.TigerWeaponAbilityDash.Multicast_PlayRecovery // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x136d330
};

// Class Tiger.TigerHookConfig
// Size: 0x1e8 (Inherited: 0x160)
struct UTigerHookConfig : UTigerActiveDisciplineConfig {
	float MaxThrowDistance; // 0x160(0x04)
	float StopPullDistance; // 0x164(0x04)
	float TimeUntilReachMaxThrowDistance; // 0x168(0x04)
	float TimeUntilReturn; // 0x16c(0x04)
	float FastReelTime; // 0x170(0x04)
	float RotateTime; // 0x174(0x04)
	float TimeBeforeReel; // 0x178(0x04)
	float TimeUntilCutoffVelocity; // 0x17c(0x04)
	float TimeLeftWhenToAllowHookingPlayerActions; // 0x180(0x04)
	float HookDamage; // 0x184(0x04)
	float StunDurationPostHook; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct ATigerHook* HookType; // 0x190(0x08)
	struct UTigerHookedBuff* HookedBuffType; // 0x198(0x08)
	struct UTigerHookingBuff* HookingBuffType; // 0x1a0(0x08)
	struct UAnimMontage* ThrowAnimation; // 0x1a8(0x08)
	struct UAnimMontage* ReelAnimation; // 0x1b0(0x08)
	struct UAnimMontage* AirThrowAnimation; // 0x1b8(0x08)
	struct UAnimMontage* AirReelAnimation; // 0x1c0(0x08)
	struct UAnimMontage* HookedReactionAnimation; // 0x1c8(0x08)
	struct UAnimMontage* HookedReelAnimation; // 0x1d0(0x08)
	struct UAnimMontage* HookedPostReelAnimation; // 0x1d8(0x08)
	bool bUseForcedMove; // 0x1e0(0x01)
	char pad_1E1[0x7]; // 0x1e1(0x07)
};

// Class Tiger.TigerWeaponAbilityHook
// Size: 0x88 (Inherited: 0x78)
struct UTigerWeaponAbilityHook : UTigerDisciplineBase {
	struct UTigerHookConfig* Config; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)

	void Server_ThrowHook(struct FVector SpawnLoc, struct FVector TargetLoc); // Function Tiger.TigerWeaponAbilityHook.Server_ThrowHook // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x136dc10
};

// Class Tiger.TigerReflectConfig
// Size: 0x1b0 (Inherited: 0x160)
struct UTigerReflectConfig : UTigerActiveDisciplineConfig {
	enum class ETigerReflectBehaviour ReflectBehaviors[0x5]; // 0x160(0x05)
	char pad_165[0x3]; // 0x165(0x03)
	float DamageLetThroughModifier; // 0x168(0x04)
	float ReflectSpread; // 0x16c(0x04)
	float MaxDuration; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct AActor* BulletReflector; // 0x178(0x08)
	float ReflectorRadius; // 0x180(0x04)
	float ReflectorHalfHeight; // 0x184(0x04)
	float ReflectorCoverageRange; // 0x188(0x04)
	float PoseSwapDelay; // 0x18c(0x04)
	struct TArray<struct FName> ReflectMontageNames; // 0x190(0x10)
	struct FName ReflectEndMontageName; // 0x1a0(0x08)
	bool bDrawReflectedBulletLines; // 0x1a8(0x01)
	char pad_1A9[0x7]; // 0x1a9(0x07)
};

// Class Tiger.TigerWeaponAbilityReflect
// Size: 0xd8 (Inherited: 0x78)
struct UTigerWeaponAbilityReflect : UTigerDisciplineBase {
	char pad_78[0x10]; // 0x78(0x10)
	struct UTigerReflectConfig* Config; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	struct AActor* ReflectorActor; // 0x98(0x08)
	char pad_A0[0x38]; // 0xa0(0x38)

	void ReflectProjectile(struct AActor* InReflector, struct AActor* InOverlappedActor, struct FHitResult InHit); // Function Tiger.TigerWeaponAbilityReflect.ReflectProjectile // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x136da80
	void Multicast_StopReflecting(); // Function Tiger.TigerWeaponAbilityReflect.Multicast_StopReflecting // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x136d600
	void Multicast_StopDiscipline(); // Function Tiger.TigerWeaponAbilityReflect.Multicast_StopDiscipline // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x136d5e0
	void Multicast_ReflectProjectile(struct UTigerRangedWeapon* InRangedWeapon, struct AActor* InOverlappedActor, enum class ETigerReflectBehaviour InBehaviour, struct FVector InProjectileSpawnLocation, struct FRotator InProjectileSpawnDirection, int32_t aFireSettingsIndex); // Function Tiger.TigerWeaponAbilityReflect.Multicast_ReflectProjectile // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x136d350
};

// Class Tiger.TigerWeaponAbilityReflectActor
// Size: 0x228 (Inherited: 0x228)
struct ATigerWeaponAbilityReflectActor : AActor {

	bool CanBeReflected(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult InSweepResult); // Function Tiger.TigerWeaponAbilityReflectActor.CanBeReflected // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x136d060
};

// Class Tiger.TigerWeaponAmmoWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerWeaponAmmoWidget : UTigerWidget {

	void WeaponEquipped(struct UTigerItemAsset* InWeaponAsset, int32_t InItemCount, struct ATigerLootBox* InLootBox, enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerWeaponAmmoWidget.WeaponEquipped // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void SelectedSlotUpdated(struct UTigerRangedWeaponComponent* RangedWeaponComponent, struct UTigerInventoryComponent* Inventory, enum class ETigerWeaponSlot NewSlot); // Function Tiger.TigerWeaponAmmoWidget.SelectedSlotUpdated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void ArtifactUpdated(struct UTigerItemAsset* InArtifactAsset); // Function Tiger.TigerWeaponAmmoWidget.ArtifactUpdated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void AmmoUpdated(int32_t AmmoInMagazine, int32_t AmmoInInventory); // Function Tiger.TigerWeaponAmmoWidget.AmmoUpdated // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
};

// Class Tiger.TigerWeaponAnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerWeaponAnimInstance : UAnimInstance {
	bool bShowWeaponTrails; // 0x2b8(0x01)
};

// Class Tiger.TigerRangedWeapon
// Size: 0x1e8 (Inherited: 0xa8)
struct UTigerRangedWeapon : UTigerWeapon {
	struct FName WeaponName; // 0xa8(0x08)
	enum class ETigerWeaponType WeaponType; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	struct FName CharacterReloadAnimationName; // 0xb4(0x08)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TArray<struct FName> FireAnimations; // 0xc0(0x10)
	float TimeAfterFireBeforePrimingIsAllowed; // 0xd0(0x04)
	struct FName CharacterPrimingAnimation; // 0xd4(0x08)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct UAnimMontage* WeaponPrimingAnimation; // 0xe0(0x08)
	struct FName RecoilNoiseBlendspace; // 0xe8(0x08)
	struct UAnimMontage* GunReload; // 0xf0(0x08)
	struct UAnimMontage* GunFireAnimation; // 0xf8(0x08)
	struct UCurveFloat* VerticalRecoilCurve; // 0x100(0x08)
	struct UCurveFloat* HorizontalRecoilCurve; // 0x108(0x08)
	struct UCurveFloat* VerticalRecoilMultiplierCurveOverRecoil; // 0x110(0x08)
	struct UCurveFloat* HorizontalRecoilMultiplierCurveOverRecoil; // 0x118(0x08)
	struct ATigerProjectile* ProjectileClass; // 0x120(0x08)
	struct UAkAudioEvent* StartAimingSound; // 0x128(0x08)
	struct UAkAudioEvent* StopAimingSound; // 0x130(0x08)
	struct UAkAudioEvent* HitWallSound; // 0x138(0x08)
	struct UAkAudioEvent* FireSound; // 0x140(0x08)
	float LoopFireAfterFireRateMultiplier; // 0x148(0x04)
	char pad_14C[0x4]; // 0x14c(0x04)
	struct UAkAudioEvent* LowAmmoSound; // 0x150(0x08)
	struct UAkAudioEvent* OutOfAmmoSound; // 0x158(0x08)
	struct UAkAudioEvent* CoolDownAudioEvent; // 0x160(0x08)
	int32_t AmountOfProjectilesFiredBeforeCooldown; // 0x168(0x04)
	float LowAmmoThresholdPercent; // 0x16c(0x04)
	struct UMatineeCameraShake* CameraShake; // 0x170(0x08)
	struct UMatineeCameraShake* CameraShakeAimed; // 0x178(0x08)
	struct UForceFeedbackEffect* FireForceFeedback; // 0x180(0x08)
	int32_t ShotsPerTrail; // 0x188(0x04)
	int32_t AimedFov; // 0x18c(0x04)
	bool bShotsArePiercing; // 0x190(0x01)
	enum class ETigerWeaponAmmoType AmmoType; // 0x191(0x01)
	char pad_192[0x6]; // 0x192(0x06)
	struct UCurveFloat* DamageDropOffCurve; // 0x198(0x08)
	struct UTigerCameraPreset* CameraPreset; // 0x1a0(0x08)
	struct UTigerWeaponCrosshairWidget* CrosshairsByFireMode[0x3]; // 0x1a8(0x18)
	struct UTigerWeaponCrosshairWidget* AimingCrossHair; // 0x1c0(0x08)
	struct TArray<struct FName> SecondaryFireAnimations; // 0x1c8(0x10)
	struct FName MuzzleSocket; // 0x1d8(0x08)
	struct AActor* TracerActor; // 0x1e0(0x08)

	bool ShouldApplyModifier(struct ATigerCharacter* InCharacter, enum class ETigerSpreadModifier InModifier); // Function Tiger.TigerRangedWeapon.ShouldApplyModifier // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x136dd00
	void PlayLoopingAkEvents(struct ATigerCharacter* InInstigator); // Function Tiger.TigerRangedWeapon.PlayLoopingAkEvents // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnHitAuthority(struct ATigerCharacter* Instigator, struct ATigerCharacter* Target); // Function Tiger.TigerRangedWeapon.OnHitAuthority // (Event|Public|BlueprintEvent|Const) // @ game+0x16c0340
	void OnEndFireAudio(struct ATigerCharacter* InInstigator); // Function Tiger.TigerRangedWeapon.OnEndFireAudio // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void OnBeginFireAudio(struct ATigerCharacter* InInstigator); // Function Tiger.TigerRangedWeapon.OnBeginFireAudio // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	struct FVector CalculateBulletDirection(struct FVector InAimDirection, struct FTigerRangedRandomState InOutRandomState, int32_t InBulletIndex, struct UTigerRangedWeaponComponent* InRangedWeaponComponent); // Function Tiger.TigerRangedWeapon.CalculateBulletDirection // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x136ceb0
};

// Class Tiger.TigerWeatherController
// Size: 0x228 (Inherited: 0x228)
struct ATigerWeatherController : AActor {
};

// Class Tiger.TigerWeatherScenarioData
// Size: 0x38 (Inherited: 0x30)
struct UTigerWeatherScenarioData : UDataAsset {
	struct FName DebugName; // 0x30(0x08)
};

// Class Tiger.TigerWeatherSettings
// Size: 0xd8 (Inherited: 0x38)
struct UTigerWeatherSettings : USharkLocalDeveloperSettings {
	struct TMap<struct FName, struct UTigerWeatherScenarioData*> WeatherScenarioAliases; // 0x38(0x50)
	struct TMap<struct UTigerWeatherScenarioData*, float> WeatherScenarioProbabilityRatios; // 0x88(0x50)
};

// Class Tiger.TigerWheelInterfaceWidget
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerWheelInterfaceWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnAlternateActionTriggered; // 0x280(0x10)
	struct FMulticastInlineDelegate OnPrimaryActionTriggered; // 0x290(0x10)
	bool bCursorCanBeOutside; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	int32_t NumItems; // 0x2a4(0x04)
	int32_t MinimumSupportedItems; // 0x2a8(0x04)
	int32_t MaximumSupportedItems; // 0x2ac(0x04)
	float MiddleRadius; // 0x2b0(0x04)
	float OutsideRadius; // 0x2b4(0x04)
	float GamepadDeadZone; // 0x2b8(0x04)
	float DeselectionGraceTime; // 0x2bc(0x04)
	char pad_2C0[0x4]; // 0x2c0(0x04)
	int32_t HoveredIndex; // 0x2c4(0x04)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	void UpdateHoverEffect(int32_t Index); // Function Tiger.TigerWheelInterfaceWidget.UpdateHoverEffect // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void TigerOnWheelPrimaryAction__DelegateSignature(int32_t Index); // DelegateFunction Tiger.TigerWheelInterfaceWidget.TigerOnWheelPrimaryAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void TigerOnWheelAlternateAction__DelegateSignature(int32_t Index); // DelegateFunction Tiger.TigerWheelInterfaceWidget.TigerOnWheelAlternateAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void SetWheelUsable(bool bNewUsable); // Function Tiger.TigerWheelInterfaceWidget.SetWheelUsable // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void SetItem(int32_t Index, struct UTexture2D* Icon, struct FText Label, int32_t Count); // Function Tiger.TigerWheelInterfaceWidget.SetItem // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16c0340
	void SetIsItemSelected(int32_t Index, bool bIsSelected); // Function Tiger.TigerWheelInterfaceWidget.SetIsItemSelected // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	void ResetItems(); // Function Tiger.TigerWheelInterfaceWidget.ResetItems // (Event|Public|BlueprintEvent) // @ game+0x16c0340
	void PlayOpenAnimation(); // Function Tiger.TigerWheelInterfaceWidget.PlayOpenAnimation // (Native|Event|Public|BlueprintEvent) // @ game+0x12c9fd0
	void PlayCloseAnimation(); // Function Tiger.TigerWheelInterfaceWidget.PlayCloseAnimation // (Native|Event|Public|BlueprintEvent) // @ game+0x12d2210
	void OnNumberOfItemsChanged(int32_t InNewNumberOfItems); // Function Tiger.TigerWheelInterfaceWidget.OnNumberOfItemsChanged // (Event|Protected|BlueprintEvent) // @ game+0x16c0340
	bool IsWheelOpen(); // Function Tiger.TigerWheelInterfaceWidget.IsWheelOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13717e0
};

// Class Tiger.TigerTooltipWidget
// Size: 0x288 (Inherited: 0x280)
struct UTigerTooltipWidget : UTigerWidget {
	struct UTigerWidget* OwningWidget; // 0x280(0x08)
};

// Class Tiger.TigerWorldCompositionCellComponent
// Size: 0x230 (Inherited: 0x200)
struct UTigerWorldCompositionCellComponent : USceneComponent {
	struct UShapeComponent* ShapeComponent; // 0x1f8(0x08)
	struct TArray<struct UTigerWorldCompositionCellComponent*> SubCellComponents; // 0x200(0x10)
	struct ATigerWorldCompositionGrid* WorldGrid; // 0x210(0x08)
	struct FName StreamLevelPath; // 0x218(0x08)
	char pad_228[0x8]; // 0x228(0x08)

	void HandleOnLevelUnloaded(); // Function Tiger.TigerWorldCompositionCellComponent.HandleOnLevelUnloaded // (Final|Native|Private) // @ game+0x1371740
	void HandleOnLevelLoaded(); // Function Tiger.TigerWorldCompositionCellComponent.HandleOnLevelLoaded // (Final|Native|Private) // @ game+0x1371720
};

// Class Tiger.TigerWorldCompositionGridCellComponent
// Size: 0x230 (Inherited: 0x230)
struct UTigerWorldCompositionGridCellComponent : UTigerWorldCompositionCellComponent {
};

// Class Tiger.TigerWorldCompositionHexGridCellComponent
// Size: 0x240 (Inherited: 0x230)
struct UTigerWorldCompositionHexGridCellComponent : UTigerWorldCompositionCellComponent {
	float HexCellRadius; // 0x230(0x04)
	char pad_234[0xc]; // 0x234(0x0c)
};

// Class Tiger.TigerWorldCompositionGrid
// Size: 0x330 (Inherited: 0x228)
struct ATigerWorldCompositionGrid : AActor {
	struct FMulticastInlineDelegate OnCellStartedLoadingEvent; // 0x228(0x10)
	struct FMulticastInlineDelegate OnCellFinishedLoadingEvent; // 0x238(0x10)
	struct FMulticastInlineDelegate OnCellStartedUnloadingEvent; // 0x248(0x10)
	struct FMulticastInlineDelegate OnCellFinishedUnloadingEvent; // 0x258(0x10)
	struct FMulticastInlineDelegate OnPrespawnStreamingFinishedEvent; // 0x268(0x10)
	enum class ETigerWorldCompositionGridLayout Layout; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	struct FVector GridExtent; // 0x27c(0x0c)
	int32_t LevelDepth; // 0x288(0x04)
	float CellTriggerSizeBias; // 0x28c(0x04)
	struct TArray<struct TSoftObjectPtr<struct UWorld>> BlackListedLevels; // 0x290(0x10)
	struct TArray<struct TSoftObjectPtr<struct UWorld>> AdditionalLevels; // 0x2a0(0x10)
	struct TArray<struct TSoftObjectPtr<struct UWorld>> AlwaysLoadedLevels; // 0x2b0(0x10)
	struct UTigerWorldCompositionCellComponent* RootCellComponent; // 0x2c0(0x08)
	struct TArray<struct UTigerWorldCompositionCellComponent*> LoadingCells; // 0x2c8(0x10)
	struct TArray<struct UTigerWorldCompositionCellComponent*> LoadedCells; // 0x2d8(0x10)
	struct TArray<struct UTigerWorldCompositionCellComponent*> UnloadingCells; // 0x2e8(0x10)
	struct TArray<struct FTigerRecentlyStreamedCellEntries> RecentlyLoadedCells; // 0x2f8(0x10)
	struct TArray<struct FTigerRecentlyStreamedCellEntries> RecentlyUnloadedCells; // 0x308(0x10)
	struct TArray<struct FTigerStreamingPlayer> StreamingPlayers; // 0x318(0x10)
	char pad_328[0x8]; // 0x328(0x08)

	void PrespawnStreamingFinished__DelegateSignature(); // DelegateFunction Tiger.TigerWorldCompositionGrid.PrespawnStreamingFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void HandleOnCellStartedUnloadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellStartedUnloadingEvent // (Final|Native|Private) // @ game+0x1371690
	void HandleOnCellStartedLoadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellStartedLoadingEvent // (Final|Native|Private) // @ game+0x1371600
	void HandleOnCellFinishedUnloadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellFinishedUnloadingEvent // (Final|Native|Private) // @ game+0x1371570
	void HandleOnCellFinishedLoadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellFinishedLoadingEvent // (Final|Native|Private) // @ game+0x13714e0
	void CellStartedUnloading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellStartedUnloading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void CellStartedLoading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellStartedLoading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void CellFinishedUnloading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellFinishedUnloading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
	void CellFinishedLoading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellFinishedLoading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x16c0340
};

// Class Tiger.TigerWorldCompositionSettings
// Size: 0x248 (Inherited: 0x38)
struct UTigerWorldCompositionSettings : UDeveloperSettings {
	struct FDirectoryPath StreamedLevelDirectory; // 0x38(0x10)
	enum class ETigerWorldCompositionProxyMode ProxyGenerationMode; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	int32_t ActorSortingCellSizeIncrementCount; // 0x4c(0x04)
	float ActorSortingCellSizeIncrementAmount; // 0x50(0x04)
	struct FMeshMergingSettings ProxyMeshMergeSettings; // 0x54(0xa0)
	bool bDoSecondProxyGenStage; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	struct FMeshProxySettings ProxySettings; // 0xf8(0xa8)
	struct FMeshBuildSettings LodBuildSettings; // 0x1a0(0x30)
	struct TArray<struct FPerPlatformFloat> LodScreenSizes; // 0x1d0(0x10)
	bool bEnableLodDitheringOnProxyMeshes; // 0x1e0(0x01)
	char pad_1E1[0x3]; // 0x1e1(0x03)
	float ProxySizeRequirement; // 0x1e4(0x04)
	bool bForceLoadAllCellLevels; // 0x1e8(0x01)
	bool bBlockOnLoad; // 0x1e9(0x01)
	bool bEnablePreSpawnLoading; // 0x1ea(0x01)
	bool bTriggerGarbageCollectionOnUnload; // 0x1eb(0x01)
	char pad_1EC[0x4]; // 0x1ec(0x04)
	struct TArray<SoftClassProperty> ProxyTypeBlacklistSoft; // 0x1f0(0x10)
	struct TArray<SoftClassProperty> StreamingTypeBlacklistSoft; // 0x200(0x10)
	struct TArray<SoftClassProperty> LevelClusterBlacklistSoft; // 0x210(0x10)
	struct TSoftObjectPtr<struct UMaterialInterface> DebugVisualizationMaterialNotInFilter; // 0x220(0x28)
};

// Class Tiger.TigerConsiderForProxyUserData
// Size: 0x28 (Inherited: 0x28)
struct UTigerConsiderForProxyUserData : UAssetUserData {
};

// Class Tiger.TigerNeverConsiderForProxyUserData
// Size: 0x28 (Inherited: 0x28)
struct UTigerNeverConsiderForProxyUserData : UAssetUserData {
};

// Class Tiger.TigerWorldCompositionLevel
// Size: 0x150 (Inherited: 0x150)
struct UTigerWorldCompositionLevel : ULevelStreaming {
	char bInitiallyLoaded : 1; // 0x148(0x01)
	char bInitiallyVisible : 1; // 0x148(0x01)

	struct UTigerWorldCompositionLevel* LoadLevelInstanceBySoftObjectPtr(struct UObject* WorldContextObject, struct TSoftObjectPtr<struct UWorld> Level, struct FVector Location, struct FRotator Rotation, bool bOutSuccess); // Function Tiger.TigerWorldCompositionLevel.LoadLevelInstanceBySoftObjectPtr // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1371a10
	struct UTigerWorldCompositionLevel* LoadLevelInstance(struct UObject* WorldContextObject, struct FString LevelName, struct FVector Location, struct FRotator Rotation, bool bOutSuccess); // Function Tiger.TigerWorldCompositionLevel.LoadLevelInstance // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1371800
};

// Class Tiger.TigerWorldMarkerComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerWorldMarkerComponent : UActorComponent {
	struct ATigerWorldMarker* WorldMarkerActorType; // 0xb0(0x08)
	struct ATigerWorldMarker* WorldMarkerChild; // 0xb8(0x08)
};

// Class Tiger.TigerWorldSettings
// Size: 0x3a8 (Inherited: 0x3a8)
struct ATigerWorldSettings : AWorldSettings {
};

// Class Tiger.TigerWorldStatsGenerator
// Size: 0xb8 (Inherited: 0x28)
struct UTigerWorldStatsGenerator : UObject {
	char pad_28[0x90]; // 0x28(0x90)
};

// Class Tiger.TigerWorldStatsComponentCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsComponentCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsActorCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsActorCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsObjectCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsObjectCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsBlueprintCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsBlueprintCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsCommandGenerator
// Size: 0xc8 (Inherited: 0xb8)
struct UTigerWorldStatsCommandGenerator : UTigerWorldStatsGenerator {
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Tiger.TigerWorldStatsSubSystem
// Size: 0xe0 (Inherited: 0x30)
struct UTigerWorldStatsSubSystem : UGameInstanceSubsystem {
	char pad_30[0xb0]; // 0x30(0xb0)

	void OnCellStartedLoading(struct UTigerWorldCompositionCellComponent* InCellComponent); // Function Tiger.TigerWorldStatsSubSystem.OnCellStartedLoading // (Final|Native|Private) // @ game+0x1372b80
	void OnCellFinishedLoading(); // Function Tiger.TigerWorldStatsSubSystem.OnCellFinishedLoading // (Final|Native|Private) // @ game+0x1372b60
};

